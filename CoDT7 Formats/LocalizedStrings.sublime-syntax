%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html

# This file is part of the T7-Sublime project.
# T7-Sublime is an enhanced syntax-highlighting package for (almost) all Call of Duty Black Ops III developer file formats.
# Localized String files contain language-specific implementations of strings.

name: Localized Strings
file_extensions:
  - str
scope: text.codt7.localizedstrings

variables:
  identifier: \b[[:upper:][:digit:]_]+\b
  languages: |-
    \b(?ix:
      LANG_ENGLISH
    | LANG_ENGLISHARABIC
    | LANG_FRENCH
    | LANG_GERMAN
    | LANG_ITALIAN
    | LANG_JAPANESE
    | LANG_POLISH
    | LANG_PORTUGUESE
    | LANG_RUSSIAN
    | LANG_SIMPLIFIEDCHINESE
    | LANG_SPANISH
    | LANG_TRADITIONALCHINESE
    )\b

contexts:
  main:
    - include: directive
    - include: reference
    - include: comments

  comments:
    - include: scope:source.codt7.common#comments

  directive:
    - match: (?i)^\s*(VERSION|CONFIG|FILENOTES)\b
      captures:
        1: meta.directive.codt7.localizedstrings support.constant.codt7.localizedstrings
      push:
        - match: '"'
          scope: punctuation.definition.string.begin.codt7.localizedstrings
          push:
            - meta_scope: string.quoted.double.codt7.localizedstrings
            - match: '"'
              scope: punctuation.definition.string.end.codt7.localizedstrings
              pop: true
        - include: comments
        - match: \S
          scope: invalid.illegal.unexpected-character.codt7.localizedstrings
        - match: $\n
          pop: true
    - match: (?i)^\s*(ENDMARKER)\b
      captures:
        1: meta.directive.codt7.localizedstrings support.constant.codt7.localizedstrings

  reference:
    - match: (?i)^\s*(REFERENCE)\b
      captures:
        1: storage.type.codt7.localizedstrings
      push:
        - meta_scope: meta.string-reference.codt7.localizedstrings
        - match: $\n
          pop: true
        - include: comments
        - match: '{{identifier}}'
          scope: entity.name.string-reference.codt7.localizedstrings
    - match: ^\s*({{languages}})
      captures:
        1: constant.language.language-identifier.codt7.localizedstrings
      push:
        - meta_scope: meta.string-implementation.codt7.localizedstrings
        - match: $\n
          pop: true
        - include: comments
        - include: strings
    - include: strings

  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.codt7.localizedstrings
      push:
        - meta_scope: string.quoted.double.codt7.localizedstrings
        - match: '"'
          scope: punctuation.definition.string.end.codt7.localizedstrings
          pop: true
        - include: string_escaped_char
        - include: string_placeholder

  string_escaped_char:
    - match: (\\)$\n
      captures:
        1: punctuation.separator.continuation.codt7.localizedstrings
    - match: \\(?:\\|[abefnrtv\'"?]|[0-3][0-9](0,2)|[4-7][0-9]?|x[a-fA-F0-9]+|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8})
      scope: constant.character.escape.codt7.localizedstrings
    - match: \\.
      scope: invalid.illegal.unknown-escape.codt7.localizedstrings

  string_placeholder:
    - match: \[(?=\{)
      scope: keyword.other.block.begin.codt7.localizedstrings
      push:
        - meta_scope: variable.language.codt7.localizedstrings
        - match: (?<=\})\]
          scope: keyword.other.block.end.codt7.localizedstrings
          pop: true
    - match: \^\d
      scope: constant.other.placeholder.codt7.localizedstrings
    - match: \&\&\d*
      scope: constant.other.placeholder.codt7.localizedstrings
