%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html

# This file is part of the T7-Sublime project.
# T7-Sublime is an enhanced syntax-highlighting package for (almost) all Call of Duty Black Ops III developer file formats.
# Sound Common is an internal library containing common rules which commonly used in sound-table contexts.

name: Sound Common
hidden: true
scope: text.codt7.table.sound.common
version: 2

variables:
  # Invalid numeric suffix
  dec_suffix: '[a-zA-Z_][[:alnum:]_]*'

  # Listed alphabetically
  buses: BUS_FX|BUS_VOICE|BUS_PFUTZ|BUS_HDRFX|BUS_UI|BUS_MUSIC|BUS_MOVIE|BUS_REFERENCE
  buses_t5: world|fx|voice|pfutz|hdrfx|ui|music|movie|reference
  flux_type: none|left_player|right_player|center_player|random_player|left_shot|center_shot|right_shot|random_direcion
  limit_type: none|oldest|reject|priority
  randomize_type: volume|pitch|variant

contexts:
  # Automatically included for each column context so early newlines correctly pop.
  prototype:
    - match: $\n
      pop: true
    - include: comments

  main:
    - meta_include_prototype: false
    # immediately push into header context which handles the first row of the table
    - match: ''
      push: header

  header:
    - meta_content_scope: meta.header.codt7.table.sound.common
    - meta_include_prototype: false
    # Rest of file is handled in body context
    - match: $\n
      set: body
    - match: \w+
      scope: variable.parameter.codt7.table.sound.common
    - match: ','
      scope: punctuation.separator.codt7.table.sound.common

  body:
    - meta_include_prototype: false
    - include: comments
    # Go through the file line by line
    - match: (?=\S)
      # every sound syntax should override 'name' to plug in its particular column order
      push: name

  # dummy context - should be implemented by inheriting syntaxes
  name:
    - match: ''

##[ COMMON CONTEXTS ]#######################################################

  # to be included by the last context for a row, when only a newline or EOF is expected
  eol-unexpected-characters:
    - match: (?=,)
      set: unexpected-character

  unexpected-character:
    - match: '.'
      scope: invalid.illegal.unexpected-character.codt7.table.sound.common

  numbers:
    - match: '-'
      scope: keyword.operator.arithmetic.codt7.table.sound.common
    - match: '\b(\d+)((\.)\d*)?'
      scope: meta.number.decimal.codt7.table.sound.common
      captures:
        1: constant.numeric.value.codt7.table.sound.common
        2: constant.numeric.value.codt7.table.sound.common
        3: punctuation.separator.decimal.codt7.table.sound.common

  comments:
    - match: \#+
      scope: punctuation.definition.comment.codt7.table.sound.common
      push: comments-body

  comments-body:
    - meta_scope: comment.line.number-sign.codt7.table.sound.common
    # NOTE: The reason for consuming the newline character is as follows.
    # When triggering a snippet, its scope is tested to the *right* of the
    # cursor. So, if you don't want your snippet to trigger in a comment,
    # you have to use something like <scope>source.shell - comment</scope>.
    # If the newline character is not scoped as a comment too, then that
    # scope will never work, because the scope to the right of the cursor
    # will never be a comment scope. That is, unless we consume the newline
    # character (or we are editing something in the middle of an existing
    # comment).
    - match: \n
      pop: 1

  end-of-col-look:
    - match: (?=,|$)
      pop: true

  # For names that are referenced beyong just the sound table,
  # e.g. string alias, sound alias, etc.
  generic_alias:
    - match: \w+
      scope: entity.name.other.codt7.table.sound.common markup.italic

  # For internal sound table names, such as curve types, template ids,
  # duck names, etc. Some names scoped under this are referenced
  # in other areas, however, such as context types/values.
  generic_identifier:
    - match: \w+
      scope: variable.language.codt7.table.sound.common

# These contexts below push a new scope for any context including it. That way,
# the auto-complete scope does not need to check for multiple different scope
# names for a column, such as 'meta.context-value | meta.context-value-0 | 
# meta.context-value-2'. It just checks for the common scope that we push.

# Every context below this point must match '(?!,|$)' before pushing.
# This ensures that the context can be included at any position without
# the context being continuously popped and pushed.
# Matching against nothing would require the context to be included after
# matching a comma in the including context, for example.

##[ KEYWORDS ]##############################################################

# Listed alphabetically
# Always delimit words with a dash or underscore to avoid naming conflicts
# with child contexts which never delimit words in context names,
# for example, Sound Aliases file's 'contexttype' vs this file's 'context_type'

  buses:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-bus.codt7.table.sound.common
        - match: '\b({{buses}})\b'
          scope: support.constant.codt7.table.sound.common
        - include: end-of-col-look

  buses_t5:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-bus-t5.codt7.table.sound.common
        - match: '\b({{buses_t5}})\b'
          scope: support.constant.codt7.table.sound.common
        - include: end-of-col-look

  flux_type:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-flux-type.codt7.table.sound.common
        - match: '\b({{flux_type}})\b'
          scope: support.constant.codt7.table.sound.common
        - include: end-of-col-look

  limit_type:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-limit-type.codt7.table.sound.common
        - match: '\b({{limit_type}})\b'
          scope: support.constant.codt7.table.sound.common
        - include: end-of-col-look

  looping_type:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-looping-type.codt7.table.sound.common
        - match: \b(?i:(?:non)?looping)\b
          scope: constant.language.codt7.table.sound.common
        - include: end-of-col-look

  pan_type:
    - match: \b(?i:2d|3d|2\.5)\b
      scope: support.constant.codt7.table.sound.common

  randomize_type:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-randomize-type.codt7.table.sound.common
        - match: '\b({{randomize_type}})\b'
          scope: support.constant.codt7.table.sound.common
        - include: end-of-col-look

  storage_type:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-storage-type.codt7.table.sound.common
        - match: \b(?i:loaded|streamed)\b
          scope: constant.language.codt7.table.sound.common
        - include: end-of-col-look

  yesno:
    - match: '\b(?i:yes|no)\b'
      scope: constant.language.codt7.table.sound.common

##[ IDENTIFIERS ]###########################################################

# Listed alphabetically
# Always delimit words with a dash or underscore to avoid naming conflicts
# with child contexts which never delimit words in context names,
# for example, Sound Aliases file's 'contexttype' vs this file's 'context_type'

  context_type:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-context-type.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  context_type_t5:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-context-type-t5.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  context_value:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-context-value.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  context_value_t5:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-context-value-t5.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  curve_type:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-curve-type.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  curve_type_t5:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-curve-type-t5.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  duck_names:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-duck-name.codt7.table.sound.common
        - include: generic_alias
        - include: end-of-col-look

  duck_groups:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-duck-group.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  futz_names:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-futz-name.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  group_names_t5:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-group-name-t5.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  language_names:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-language.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  loadspec_names:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-loadspec.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  loadspec_names_t5:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-loadspec-t5.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  pan_mode:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-pan-mode.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  pan_mode_t5:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-pan-mode-t5.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  platform_names:
    - match: (?!,|$) 
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-platform.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  snapshot_groups_t5:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-snapshot-group-t5.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  template_names:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-template.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  template_names_t5:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-template-t5.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look

  volume_groups:
    - match: (?!,|$)
      push:
        - meta_include_prototype: false
        - meta_content_scope: meta.sound-volume-group.codt7.table.sound.common
        - include: generic_identifier
        - include: end-of-col-look
