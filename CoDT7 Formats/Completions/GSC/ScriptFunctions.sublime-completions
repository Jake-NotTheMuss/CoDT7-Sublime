{
	// Generated on: 02/26/2022 16:36
	"scope": "(source.codt7.gsc) & (meta.developer-function-name)",
	"completions":
	[
		"aat::aat_cooldown_init",
		"aat::aat_get_string",
		"aat::aat_hud_manager",
		"aat::aat_response",
		"aat::acquire",
		"aat::finalize_clientfields",
		"aat::getAATOnWeapon",
		"aat::get_icon",
		"aat::get_nonalternate_weapon",
		"aat::get_string",
		"aat::is_exempt_weapon",
		"aat::register",
		"aat::register_aat_exemption",
		"aat::register_immunity",
		"aat::register_reroll",
		"aat::remove",
		"aat::watch_weapon_changes",
		"ability_gadgets::gadgets_print",
		"ability_gadgets::gadget_flicker_callback",
		"ability_gadgets::gadget_give_callback",
		"ability_gadgets::gadget_off_callback",
		"ability_gadgets::gadget_on_callback",
		"ability_gadgets::gadget_primed_callback",
		"ability_gadgets::gadget_ready_callback",
		"ability_gadgets::gadget_take_callback",
		"ability_gadgets::on_player_connect",
		"ability_gadgets::on_player_spawned",
		"ability_gadgets::SetFlickering",
		"ability_player::abilities_devgui_add_gadgets",
		"ability_player::abilities_devgui_add_player_command",
		"ability_player::abilities_devgui_add_player_commands",
		"ability_player::abilities_devgui_add_player_weapons",
		"ability_player::abilities_devgui_add_player_weap_command",
		"ability_player::abilities_devgui_add_power",
		"ability_player::abilities_devgui_give",
		"ability_player::abilities_devgui_handle_player_command",
		"ability_player::abilities_devgui_init",
		"ability_player::abilities_devgui_player_connect",
		"ability_player::abilities_devgui_player_disconnect",
		"ability_player::abilities_devgui_power_fill",
		"ability_player::abilities_devgui_power_toggle_auto_fill",
		"ability_player::abilities_devgui_power_toggle_auto_fill_think",
		"ability_player::abilities_devgui_think",
		"ability_player::abilities_print",
		"ability_player::gadgets_save_power",
		"ability_player::gadgets_wait_for_death",
		"ability_player::gadgets_wait_for_game_end",
		"ability_player::gadget_CheckHeroAbilityKill",
		"ability_player::gadget_flicker",
		"ability_player::gadget_is_flickering",
		"ability_player::gadget_is_in_use",
		"ability_player::gadget_primed",
		"ability_player::gadget_ready",
		"ability_player::give_gadget",
		"ability_player::init_abilities",
		"ability_player::is_using_any_gadget",
		"ability_player::on_player_connect",
		"ability_player::on_player_disconnect",
		"ability_player::on_player_spawned",
		"ability_player::register_gadget",
		"ability_player::register_gadget_activation_callbacks",
		"ability_player::register_gadget_failed_activate_callback",
		"ability_player::register_gadget_flicker_callbacks",
		"ability_player::register_gadget_is_flickering_callbacks",
		"ability_player::register_gadget_is_inuse_callbacks",
		"ability_player::register_gadget_possession_callbacks",
		"ability_player::register_gadget_primed_callbacks",
		"ability_player::register_gadget_ready_callbacks",
		"ability_player::register_gadget_should_notify",
		"ability_player::script_set_cclass",
		"ability_player::setup_clientfields",
		"ability_player::take_gadget",
		"ability_player::turn_gadget_off",
		"ability_player::turn_gadget_on",
		"ability_player::update_gadget",
		"ability_power::cpower_print",
		"ability_power::IsMovingPowerloss",
		"ability_power::is_weapon_or_variant_same_as_gadget",
		"ability_power::on_player_connect",
		"ability_power::power_consume_timer_think",
		"ability_power::power_drain_completely",
		"ability_power::power_gain_event",
		"ability_power::power_gain_event_damage_actor",
		"ability_power::power_gain_event_killed_actor",
		"ability_power::power_gain_event_score",
		"ability_power::power_is_hero_ability",
		"ability_power::power_loss_event",
		"ability_power::power_loss_event_took_damage",
		"ability_util::gadget_combat_efficiency_enabled",
		"ability_util::gadget_combat_efficiency_power_drain",
		"ability_util::gadget_has_type",
		"ability_util::gadget_is_active",
		"ability_util::gadget_is_camo_suit_flickering",
		"ability_util::gadget_is_camo_suit_on",
		"ability_util::gadget_is_escort_drone_on",
		"ability_util::gadget_is_type",
		"ability_util::gadget_power_armor_on",
		"ability_util::gadget_power_reset",
		"ability_util::gadget_reset",
		"ability_util::gadget_slot_for_type",
		"ability_util::is_weapon_gadget",
		"acousticsensor::acousticSensorDetonate",
		"acousticsensor::addAcousticSensor",
		"acousticsensor::createAcousticSensorWatcher",
		"acousticsensor::destroyEnt",
		"acousticsensor::init_shared",
		"acousticsensor::onSpawnAcousticSensor",
		"acousticsensor::on_player_connect",
		"acousticsensor::removeAcousticSensor",
		"acousticsensor::spawned",
		"acousticsensor::spawnedPerClient",
		"acousticsensor::updateAcousticSensors",
		"acousticsensor::watchAcousticSensorDamage",
		"acousticsensor::watchShutdown",
		"ai::add_ai_spawn_function",
		"ai::add_archetype_spawn_function",
		"ai::bloody_death",
		"ai::CreateInterfaceForEntity",
		"ai::disable_pain",
		"ai::enable_pain",
		"ai::end_and_clean_patrol_behaviors",
		"ai::end_patrol_on_enemy_targetting",
		"ai::force_goal",
		"ai::GetAiAttribute",
		"ai::get_behavior_attribute",
		"ai::gun_recall",
		"ai::gun_remove",
		"ai::gun_switchto",
		"ai::HasAiAttribute",
		"ai::has_behavior_attribute",
		"ai::is_dead_sentient",
		"ai::painWaitInterval",
		"ai::patrol",
		"ai::patrol_next_node",
		"ai::RegisterMatchedInterface",
		"ai::RegisterNumericInterface",
		"ai::RegisterVectorInterface",
		"ai::SetAiAttribute",
		"ai::set_behavior_attribute",
		"ai::set_goal",
		"ai::set_ignoreall",
		"ai::set_ignoreme",
		"ai::set_pacifist",
		"ai::shoot_at_target",
		"ai::shouldRegisterClientFieldForArchetype",
		"ai::spawned_callback",
		"ai::stopPainWaitInterval",
		"ai::stop_shoot_at_target",
		"ai::waittill_dead",
		"ai::waittill_dead_or_dying",
		"ai::waittill_dead_or_dying_thread",
		"ai::waittill_dead_timeout",
		"ai::wait_until_done_speaking",
		"AiSquads::getSquadLeader",
		"AiSquads::isFollowingSquadLeader",
		"AiSquads::isSquadLeader",
		"AiSquads::isSquadMember",
		"AiUtility::ActorGetPredictedYawToEnemy",
		"AiUtility::AddAIOverrideDamageCallback",
		"AiUtility::AddAIOverrideKilledCallback",
		"AiUtility::attachRiotshield",
		"AiUtility::balconyDeath",
		"AiUtility::BB_ActorGetDamageLocation",
		"AiUtility::BB_ActorGetEnemyYaw",
		"AiUtility::BB_ActorGetFatalDamageLocation",
		"AiUtility::BB_ActorGetPerfectEnemyYaw",
		"AiUtility::BB_ActorGetReactYaw",
		"AiUtility::BB_ActorGetTrackingTurnYaw",
		"AiUtility::BB_ActorHasEnemy",
		"AiUtility::BB_ActorIsPatroling",
		"AiUtility::BB_GetCoverConcealed",
		"AiUtility::BB_GetCurrentCoverNodeType",
		"AiUtility::BB_GetCurrentLocationCoverNodeType",
		"AiUtility::BB_GetDamageDirection",
		"AiUtility::BB_GetDamageMOD",
		"AiUtility::BB_GetDamageTaken",
		"AiUtility::BB_GetDamageWeapon",
		"AiUtility::BB_GetDamageWeaponClass",
		"AiUtility::BB_GetHighestStance",
		"AiUtility::BB_GetLocomotionExitYaw",
		"AiUtility::BB_GetLocomotionFaceEnemyQuadrant",
		"AiUtility::BB_GetLocomotionFaceEnemyQuadrantPrevious",
		"AiUtility::BB_GetLocomotionPainType",
		"AiUtility::BB_GetLookaheadAngle",
		"AiUtility::BB_GetPreviousCoverNodeType",
		"AiUtility::BB_GetWeaponClass",
		"AiUtility::burnedKilled",
		"AiUtility::calculateCoverDirection",
		"AiUtility::calculateJukeDirection",
		"AiUtility::calculateNodeOffsetPosition",
		"AiUtility::canBeFlanked",
		"AiUtility::canJuke",
		"AiUtility::canSeeEnemyWrapper",
		"AiUtility::chooseBestCoverNodeASAP",
		"AiUtility::chooseBetterCoverServiceCodeVersion",
		"AiUtility::chooseCoverDirection",
		"AiUtility::chooseFrontCoverDirection",
		"AiUtility::chooseJukeDirection",
		"AiUtility::clampFrustration",
		"AiUtility::cleanupChargeMeleeAttack",
		"AiUtility::cleanupCoverMode",
		"AiUtility::ClearAIOverrideDamageCallbacks",
		"AiUtility::clearArrivalPos",
		"AiUtility::clearCoverShootStartTime",
		"AiUtility::clearPathFromScript",
		"AiUtility::delayMovement",
		"AiUtility::dropRiotshield",
		"AiUtility::electrifiedKilled",
		"AiUtility::explosiveKilled",
		"AiUtility::flagEnemyUnAttackableService",
		"AiUtility::forceRagdoll",
		"AiUtility::getAimPitchToEnemyFromNode",
		"AiUtility::getAimYawToEnemyFromNode",
		"AiUtility::GetAngleUsingDirection",
		"AiUtility::getBestCoverNodeIfAvailable",
		"AiUtility::getCoverType",
		"AiUtility::getHighestNodeStance",
		"AiUtility::getSecondBestCoverNodeIfAvailable",
		"AiUtility::hasAmmo",
		"AiUtility::hasCloseEnemyToMelee",
		"AiUtility::hasCloseEnemyToMeleeWithRange",
		"AiUtility::hasEnemy",
		"AiUtility::hasLowAmmo",
		"AiUtility::hasWeaponMalfunctioned",
		"AiUtility::inGrenadeBlastRadius",
		"AiUtility::isAtAttackObject",
		"AiUtility::isAtCoverCondition",
		"AiUtility::isAtCoverModeNone",
		"AiUtility::isAtCoverModeOver",
		"AiUtility::isAtCoverStrictCondition",
		"AiUtility::isAtCrouchNode",
		"AiUtility::isBalconyDeath",
		"AiUtility::isCoverConcealed",
		"AiUtility::isExposedAtCoverCondition",
		"AiUtility::isFrustrated",
		"AiUtility::isLastKnownEnemyPositionApproachable",
		"AiUtility::isSafeFromGrenades",
		"AiUtility::isStanceAllowedAtNode",
		"AiUtility::isSuppressedAtCoverCondition",
		"AiUtility::isUnarmed",
		"AiUtility::keepClaimedNodeAndChooseCoverDirection",
		"AiUtility::keepClaimNode",
		"AiUtility::locomotionBehaviorCondition",
		"AiUtility::locomotionShouldPatrol",
		"AiUtility::locomotionShouldStealth",
		"AiUtility::meleeAcquireMutex",
		"AiUtility::meleeReleaseMutex",
		"AiUtility::notCrouchingCondition",
		"AiUtility::notStandingCondition",
		"AiUtility::postShootLaserAndGlintOff",
		"AiUtility::preShootLaserAndGlintOn",
		"AiUtility::rapsKilled",
		"AiUtility::recentlySawEnemy",
		"AiUtility::refillAmmo",
		"AiUtility::refillAmmoAndCleanupCoverMode",
		"AiUtility::RegisterUtilityBlackboardAttributes",
		"AiUtility::releaseClaimNode",
		"AiUtility::RemoveAIOverrideDamageCallback",
		"AiUtility::resetCoverParameters",
		"AiUtility::scriptStartRagdoll",
		"AiUtility::setCanBeFlanked",
		"AiUtility::setCoverShootStartTime",
		"AiUtility::setCurrentWeapon",
		"AiUtility::setNextFindBestCoverTime",
		"AiUtility::setPrimaryWeapon",
		"AiUtility::setSecondaryWeapon",
		"AiUtility::shouldAttackObject",
		"AiUtility::shouldBeAggressive",
		"AiUtility::shouldChargeMelee",
		"AiUtility::shouldChooseBetterCover",
		"AiUtility::shouldCoverIdleOnly",
		"AiUtility::shouldMelee",
		"AiUtility::shouldMutexMelee",
		"AiUtility::shouldNormalMelee",
		"AiUtility::shouldOnlyFireAccurately",
		"AiUtility::shouldReactToNewEnemy",
		"AiUtility::shouldStartArrivalCondition",
		"AiUtility::shouldStealth",
		"AiUtility::shouldStealthResume",
		"AiUtility::shouldStopMoving",
		"AiUtility::shouldTacticalWalk",
		"AiUtility::trackCoverParamsService",
		"AiUtility::traverseActionStart",
		"AiUtility::traverseSetup",
		"AiUtility::tryAdvancingOnLastKnownPositionBehavior",
		"AiUtility::tryGoingToClosestNodeToEnemyBehavior",
		"AiUtility::tryRunningDirectlyToEnemyBehavior",
		"AiUtility::tryStoppingService",
		"AiUtility::updateFrustrationLevel",
		"AiUtility::useCoverNodeWrapper",
		"AiUtility::useCurrentPosition",
		"AiUtility::wasAtCoverNode",
		"ai_puppeteer::ai_puppeteer",
		"ai_puppeteer::ai_puppeteer_create_hud",
		"ai_puppeteer::ai_puppeteer_destroy_hud",
		"ai_puppeteer::ai_puppeteer_highlight_ai",
		"ai_puppeteer::ai_puppeteer_highlight_node",
		"ai_puppeteer::ai_puppeteer_highlight_point",
		"ai_puppeteer::ai_puppeteer_render_ai",
		"ai_puppeteer::ai_puppeteer_render_node",
		"ai_puppeteer::ai_puppeteer_render_point",
		"ai_puppeteer::ai_puppeteer_think",
		"ai_puppeteer::ai_puppet_cursor_tracker",
		"ai_puppeteer::ai_puppet_manager",
		"ai_puppeteer::ai_puppet_release",
		"ai_puppeteer::ai_puppet_set",
		"ai_sniper::actor_lase_force_laser_on",
		"ai_sniper::actor_lase_laser_off_on_death",
		"ai_sniper::actor_lase_points_behavior",
		"ai_sniper::actor_lase_stop",
		"ai_sniper::agent_init",
		"ai_sniper::goal_wait_notify_lase",
		"ai_sniper::goal_watcher_patrol",
		"ai_sniper::goal_watcher_target",
		"ai_sniper::init_node_scan",
		"ai_sniper::is_firing",
		"ai_sniper::lase_point",
		"ai_sniper::patrol_lase_goal_waiter",
		"ai_sniper::target_lase_fire_at",
		"ai_sniper::target_lase_next",
		"ai_sniper::target_lase_override",
		"ai_sniper::target_lase_points",
		"ai_sniper::target_lase_points_ally_track",
		"ai_sniper::target_lase_transition",
		"ai_sniper::velocity_approach",
		"ambient::ambient_fakefire_think",
		"ambient::ambient_flak_flash",
		"ambient::ambient_flak_rotate",
		"ambient::ambient_flak_think",
		"ambient::arrow_spin_func",
		"ambient::ceiling_fans_init",
		"ambient::clocks_init",
		"ambient::clock_run",
		"ambient::on_player_connect",
		"ambient::setup_point_fx",
		"ambient::spin_anemometers",
		"ambient::spin_fan",
		"ambient::spoon_spin_func",
		"ammo::ammo_pouch_think",
		"ammo::DropAIAmmo",
		"amws::aim_and_fire_rocket_launcher",
		"amws::amws_initialize",
		"amws::cobra_raise",
		"amws::cobra_retract",
		"amws::death_suicide_crash",
		"amws::defaultRole",
		"amws::drone_callback_damage",
		"amws::FireRocketLauncher",
		"amws::GetNextMovePosition_evasive",
		"amws::GetNextMovePosition_tactical",
		"amws::GetNextMovePosition_wander",
		"amws::gib",
		"amws::is_ai_using_minigun",
		"amws::path_update_interrupt",
		"amws::path_update_interrupt_by_attacker",
		"amws::state_combat_enter",
		"amws::state_combat_update",
		"amws::state_combat_update_wait",
		"amws::state_death_update",
		"amws::state_driving_update",
		"amws::state_emped_update",
		"amws::state_stationary_enter",
		"amws::state_stationary_exit",
		"amws::state_stationary_update",
		"amws::state_stationary_update_wait",
		"amws::state_surge_exit",
		"amws::state_surge_update",
		"amws::turretFireUpdate",
		"amws::waittill_weapon_lock_or_timeout",
		"amws::wait_evasion_reaction_time",
		"animation::add_global_notetrack_handler",
		"animation::add_notetrack_func",
		"animation::anim_info_render_thread",
		"animation::anim_origin_render",
		"animation::attach_weapon",
		"animation::call_notetrack_handler",
		"animation::cracks_off",
		"animation::cracks_on",
		"animation::debug_anim_reach",
		"animation::detach_weapon",
		"animation::enable_headlook",
		"animation::enable_headlook_notorso",
		"animation::fire_weapon",
		"animation::first_frame",
		"animation::get_ent_type",
		"animation::handle_notetracks",
		"animation::is_valid_weapon",
		"animation::last_frame",
		"animation::play",
		"animation::play_siege",
		"animation::reach",
		"animation::render_tag",
		"animation::setup_notetracks",
		"animation::set_death_anim",
		"animation::set_player_clamps",
		"animation::stop",
		"animation::teleport",
		"AnimationSelectorTable::RegisterAnimationSelectorTableEvaluator",
		"AnimationStateNetwork::AnimationMocompEmptyFunc",
		"AnimationStateNetwork::notetrackStartRagdollNoDeath",
		"AnimationStateNetwork::RegisterAnimationMocomp",
		"AnimationStateNetwork::RegisterBlackboardNotetrackHandler",
		"AnimationStateNetwork::RegisterNotetrackHandlerFunction",
		"AnimationStateNetwork::RunAnimationMocomp",
		"AnimationStateNetworkUtility::RequestState",
		"AnimationStateNetworkUtility::SearchAnimationMap",
		"animation_selector_table_evaluators::testFunction",
		"antipersonnel_guidance::player_init",
		"antipersonnel_guidance::watch_lockon",
		"ApothiconFuryBehavior::apothiconBamfIn",
		"ApothiconFuryBehavior::apothiconBamfInit",
		"ApothiconFuryBehavior::apothiconBamfLand",
		"apothiconFuryBehavior::apothiconBamfLandEffect",
		"ApothiconFuryBehavior::apothiconBamfOut",
		"ApothiconFuryBehavior::apothiconCanBamf",
		"ApothiconFuryBehavior::apothiconCanBamfAfterJuke",
		"ApothiconFuryBehavior::apothiconCanBamfInternal",
		"ApothiconFuryBehavior::apothiconCanJuke",
		"ApothiconFuryBehavior::apothiconCanMeleeAttack",
		"ApothiconFuryBehavior::apothiconDamageCallback",
		"ApothiconFuryBehavior::apothiconDamageClientFieldUpdate",
		"ApothiconFuryBehavior::apothiconDeathDissolve",
		"ApothiconFuryBehavior::apothiconDeathDissolved",
		"ApothiconFuryBehavior::apothiconDeathStart",
		"ApothiconFuryBehavior::apothiconDeathTerminate",
		"apothiconFuryBehavior::apothiconFireDamageEffect",
		"apothiconFuryBehavior::apothiconFuriousModeEffect",
		"ApothiconFuryBehavior::apothiconFuriousModeInit",
		"apothiconFuryBehavior::apothiconFuryDeath",
		"apothiconFuryBehavior::apothiconJukeActive",
		"ApothiconFuryBehavior::apothiconJukeInit",
		"ApothiconFuryBehavior::apothiconKnockdownService",
		"ApothiconFuryBehavior::apothiconKnockdownZombie",
		"ApothiconFuryBehavior::apothiconMoveStart",
		"ApothiconFuryBehavior::apothiconMoveUpdate",
		"ApothiconFuryBehavior::apothiconOnDeath",
		"ApothiconFuryBehavior::apothiconPreemptiveJukeDone",
		"ApothiconFuryBehavior::apothiconPreemptiveJukePending",
		"ApothiconFuryBehavior::apothiconPreemptiveJukeService",
		"ApothiconFuryBehavior::apothiconShouldMeleeCondition",
		"ApothiconFuryBehavior::apothiconShouldSwitchToFuriousMode",
		"ApothiconFuryBehavior::apothiconShouldTauntAtPlayer",
		"apothiconFuryBehavior::apothiconSpawnSetup",
		"apothiconFuryBehavior::apothiconSpawnShader",
		"apothiconFuryBehavior::apothiconStartLoopingEffects",
		"apothiconFuryBehavior::apothiconStopLoopingEffects",
		"ApothiconFuryBehavior::apothiconTauntAtPlayerEvent",
		"ApothiconFuryBehavior::BB_IDGunGetDamageDirection",
		"ApothiconFuryBehavior::getBamfMeleeDistance",
		"apothiconFuryBehavior::get_time",
		"apothiconFuryBehavior::get_time_in_seconds",
		"ApothiconFuryBehavior::mocompApothiconFuryBamfInit",
		"ApothiconFuryBehavior::mocompApothiconFuryBamfTerminate",
		"ApothiconFuryBehavior::mocompApothiconFuryBamfUpdate",
		"ApothiconFuryBehavior::mocompApothiconFuryJukeInit",
		"ApothiconFuryBehavior::mocompApothiconFuryJukeTerminate",
		"ApothiconFuryBehavior::mocompApothiconFuryJukeUpdate",
		"apothiconFuryBehavior::new_timer",
		"apothiconFuryBehavior::reset_timer",
		"apothiconFuryBehavior::timer_increment_loop",
		"ApothiconFuryBehavior::validateJuke",
		"ApothiconFuryBehaviorInterface::moveSpeedAttributeCallback",
		"ApothiconFuryInterface::RegisterApothiconFuryInterfaceAttributes",
		"ArchetypeCivilian::RegisterBehaviorScriptFunctions",
		"archetype_aivsaimelee::AIvsAIMeleeInitialize",
		"archetype_aivsaimelee::handleDeath",
		"archetype_aivsaimelee::hasPotentalAIvsAIMeleeEnemy",
		"archetype_aivsaimelee::isCloseEnoughForAIvsAIMelee",
		"archetype_aivsaimelee::killWrapper",
		"archetype_aivsaimelee::playScriptedMeleeAnimations",
		"archetype_aivsaimelee::processInterruptedDeath",
		"archetype_aivsaimelee::RegisterAIvsAIMeleeBehaviorFunctions",
		"archetype_damage_effects::actorCharRampTo",
		"archetype_damage_effects::actor_char",
		"archetype_damage_effects::actor_fire_fx",
		"archetype_damage_effects::actor_fire_fx_state",
		"archetype_damage_effects::LoadEffects",
		"archetype_damage_effects::OnActorDamage",
		"archetype_damage_effects::OnActorDamageCallback",
		"archetype_damage_effects::OnActorKilled",
		"archetype_damage_effects::OnActorKilledCallback",
		"archetype_damage_effects::OnHumanKilled",
		"archetype_damage_effects::OnRobotKilled",
		"archetype_damage_effects::OnVehicleDamage",
		"archetype_damage_effects::OnVehicleDamageCallback",
		"archetype_damage_effects::OnVehicleKilled",
		"archetype_damage_effects::OnVehicleKilledCallback",
		"archetype_damage_effects::RegisterClientFields",
		"archetype_damage_effects::sndStopBurnLoop",
		"archetype_human::DamageOverride",
		"archetype_human_cover::shouldThrowGrenadeAtCoverCondition",
		"archetype_human_cover::TEMP_get_arm_offset",
		"archetype_secondary_animations::BuildAndValidateFacialAnimationList",
		"armor::armor_damage_mod_allowed",
		"armor::armor_damage_type_multiplier",
		"armor::armor_player_damage",
		"armor::armor_should_take_damage",
		"armor::gadget_armor_flicker",
		"armor::gadget_armor_is_flickering",
		"armor::gadget_armor_is_inuse",
		"armor::gadget_armor_off",
		"armor::gadget_armor_on",
		"armor::gadget_armor_on_connect",
		"armor::gadget_armor_on_flicker",
		"armor::gadget_armor_on_give",
		"armor::gadget_armor_on_take",
		"armor::gadget_armor_status",
		"armor::hitpoints_loss_event",
		"armor::set_gadget_status",
		"array::add",
		"array::add_sorted",
		"array::alphabetize",
		"array::clamp_size",
		"array::cleanup",
		"array::closerFunc",
		"array::contains",
		"array::delete_all",
		"array::exclude",
		"array::fartherFunc",
		"array::filter",
		"array::filter_classname",
		"array::flagsys_wait",
		"array::flagsys_wait_any",
		"array::flagsys_wait_any_flag",
		"array::flagsys_wait_clear",
		"array::flag_wait",
		"array::flag_wait_any",
		"array::flag_wait_clear",
		"array::get_all_closest",
		"array::get_all_farthest",
		"array::get_closest",
		"array::get_farthest",
		"array::get_touching",
		"array::insertion_sort",
		"array::is_touching",
		"array::merge",
		"array::merge_sort",
		"array::notify_all",
		"array::pop",
		"array::pop_front",
		"array::push",
		"array::push_front",
		"array::quickSort",
		"array::quickSortMid",
		"array::quicksort_compare",
		"array::random",
		"array::randomize",
		"array::remove_dead",
		"array::remove_index",
		"array::remove_keys",
		"array::remove_undefined",
		"array::reverse",
		"array::run_all",
		"array::spread_all",
		"array::swap",
		"array::thread_all",
		"array::thread_all_ents",
		"array::update_waitlogic_tracker",
		"array::wait_any",
		"array::wait_till",
		"array::wait_till_match",
		"array::wait_till_touching",
		"art::artfxprintln",
		"art::dumpsettings",
		"art::fovslidercheck",
		"art::setfogsliders",
		"art::strtok_loc",
		"art::tweakart",
		"as_debug::debugAddStateInfo",
		"as_debug::debugCleanStateStack",
		"as_debug::debugClearState",
		"as_debug::debugDrawWeightedPoint",
		"as_debug::debugDrawWeightedPoints",
		"as_debug::debugLine",
		"as_debug::debugPopState",
		"as_debug::debugPushState",
		"as_debug::debugShouldClearState",
		"as_debug::drawDebugCross",
		"as_debug::drawDebugEntText",
		"as_debug::drawDebugLine",
		"as_debug::drawDebugLineInternal",
		"as_debug::indent",
		"as_debug::isDebugOn",
		"as_debug::UpdateDebugInfo",
		"as_debug::UpdateDebugInfoInternal",
		"audio::absolute_value",
		"audio::audio_material_trigger",
		"audio::audio_step_trigger",
		"audio::bump_trigger_listener",
		"audio::bump_trigger_start",
		"audio::clientVoiceSetup",
		"audio::closest_point_on_line_to_point",
		"audio::debug_line_emitter",
		"audio::doRattle",
		"audio::get_vol_from_speed",
		"audio::init_audio_triggers",
		"audio::isPlayerInfected",
		"audio::local_player_spawn",
		"audio::mantle_wait",
		"audio::missileFireWatcher",
		"audio::missileLockWatcher",
		"audio::move_sound_along_line",
		"audio::on_player_killed",
		"audio::player_init",
		"audio::player_spawn",
		"audio::playloopat",
		"audio::PlayTargetMissileSound",
		"audio::register_clientfields",
		"audio::scale_speed",
		"audio::setCurrentAmbientState",
		"audio::SetPfxContext",
		"audio::set_sound_context_defaults",
		"audio::sndCChacking",
		"audio::sndChyronLoop",
		"audio::sndChyronWatcher",
		"audio::sndDeath_Activate",
		"audio::sndDeath_Deactivate",
		"audio::sndDniRepair",
		"audio::sndDoubleJump_Watcher",
		"audio::sndFinalKillcam_Activate",
		"audio::sndFinalKillcam_Deactivate",
		"audio::sndFinalKillcam_Slowdown",
		"audio::sndFoleyContext",
		"audio::sndHealthSystem",
		"audio::sndIGCskipWatcher",
		"audio::sndIGCsnapshot",
		"audio::sndKillcam",
		"audio::sndLevelStartSnapOff",
		"audio::sndMatchSnapshot",
		"audio::sndMusicDeathWatcher",
		"audio::sndOnWait",
		"audio::sndRattle_Grenade_Client",
		"audio::sndRattle_Server",
		"audio::sndResetSoundSettings",
		"audio::sndSwitchVehicleContext",
		"audio::sndTacRig",
		"audio::sndUpdateVehicleContext",
		"audio::sndVoNotify",
		"audio::sndZMBFadeIn",
		"audio::snd_play_auto_fx",
		"audio::snd_print_fx_id",
		"audio::snd_set_snapshot",
		"audio::snd_snapshot_init",
		"audio::snd_snapshot_think",
		"audio::snd_underwater",
		"audio::soundLineCheckpointRestore",
		"audio::soundLineThink",
		"audio::soundLoopCheckpointRestore",
		"audio::soundLoopThink",
		"audio::soundplayuidecodeloop",
		"audio::soundRandom_NotifyWait",
		"audio::soundRandom_Thread",
		"audio::soundwait",
		"audio::startLineEmitters",
		"audio::startRattles",
		"audio::startSoundLoops",
		"audio::startSoundRandoms",
		"audio::stoploopat",
		"audio::swimBegin",
		"audio::swimCancel",
		"audio::swimEnd",
		"audio::thread_bump_trigger",
		"audio::trig_enter_audio_material_trigger",
		"audio::trig_enter_audio_step_trigger",
		"audio::trig_enter_bump",
		"audio::trig_leave_audio_material_trigger",
		"audio::trig_leave_audio_step_trigger",
		"audio::trig_leave_bump",
		"audio::underwaterBegin",
		"audio::underwaterEnd",
		"audio::unlockFrontendMusic",
		"audio::vehicleSpawnContext",
		"audio::weapon_butt_sounds",
		"auto_turret::defaultRole",
		"auto_turret::rest_turret",
		"auto_turret::sentry_turret_alert_sound",
		"auto_turret::sentry_turret_fire_for_time",
		"auto_turret::should_switch_to_combat",
		"auto_turret::should_switch_to_unaware",
		"auto_turret::state_combat_exit",
		"auto_turret::state_combat_update",
		"auto_turret::state_death_update",
		"auto_turret::state_emped_enter",
		"auto_turret::state_emped_exit",
		"auto_turret::state_emped_update",
		"auto_turret::state_off_enter",
		"auto_turret::state_off_exit",
		"auto_turret::state_scripted_update",
		"auto_turret::state_unaware_update",
		"auto_turret::turretAllowFriendlyFireDamage",
		"auto_turret::turretCallback_VehicleDamage",
		"auto_turret::turret_idle_sound",
		"auto_turret::turret_idle_sound_stop",
		"auto_turret::turret_initialze",
		"ballistic_knife::createBallisticKnifeWatcher",
		"ballistic_knife::destroy_ent",
		"ballistic_knife::dropKnivesToGround",
		"ballistic_knife::dropToGround",
		"ballistic_knife::init_shared",
		"ballistic_knife::onSpawn",
		"ballistic_knife::onSpawnRetrieveTrigger",
		"ballistic_knife::pick_up",
		"ballistic_knife::updateRetrieveTrigger",
		"ballistic_knife::watch_shutdown",
		"ballistic_knife::watch_use_trigger",
		"bb::add_to_stat",
		"bb::commit_spawn_data",
		"bb::commit_weapon_data",
		"bb::init",
		"bb::init_shared",
		"bb::logAISpawn",
		"bb::logDamage",
		"bb::logPlayerEvent",
		"bb::logPowerupEvent",
		"bb::logPurchaseEvent",
		"bb::logRoundEvent",
		"bb::on_player_death",
		"bb::on_player_disconnect",
		"bb::on_player_spawned",
		"bb::player_init",
		"bb::recordBBDataForPlayer",
		"bb::recordBlackBoxBreadcrumbData",
		"beam::kill",
		"beam::launch",
		"behave::end_script",
		"behave::main",
		"BehaviorStateMachine::RegisterBSMScriptAPIInternal",
		"BehaviorTreeNetwork::RegisterBehaviorTreeActionInternal",
		"BehaviorTreeNetwork::RegisterBehaviorTreeScriptAPIInternal",
		"BehaviorTreeNetworkUtility::RegisterBehaviorTreeAction",
		"BehaviorTreeNetworkUtility::RegisterBehaviorTreeScriptAPI",
		"bgb::activation_complete",
		"bgb::actor_damage_override",
		"bgb::actor_death_override",
		"bgb::add_consumable_bgb",
		"bgb::add_to_player_score_override",
		"bgb::any_enabled",
		"bgb::bgb_devgui_add",
		"bgb::bgb_devgui_sub",
		"bgb::bgb_gumball_anim",
		"bgb::bgb_print_stats",
		"bgb::clear_timer",
		"bgb::do_one_shot_use",
		"bgb::get_active",
		"bgb::get_bgb_available",
		"bgb::get_bgb_gained",
		"bgb::get_bgb_used",
		"bgb::get_bgb_used_this_game",
		"bgb::get_enabled",
		"bgb::get_player_dropped_powerup_origin",
		"bgb::give",
		"bgb::has_consumable_bgb",
		"bgb::is_active",
		"bgb::is_enabled",
		"bgb::is_team_active",
		"bgb::is_team_enabled",
		"bgb::lost_perk_override",
		"bgb::perk_purchase_limit_override",
		"bgb::register",
		"bgb::register_actor_damage_override",
		"bgb::register_add_to_player_score_override",
		"bgb::register_lost_perk_override",
		"bgb::register_perk_purchase_limit_override",
		"bgb::register_vehicle_damage_override",
		"bgb::resume_weapon_cycling",
		"bgb::run_activation_func",
		"bgb::run_timer",
		"bgb::set_active",
		"bgb::set_timer",
		"bgb::sub_consumable_bgb",
		"bgb::suspend_weapon_cycling",
		"bgb::take",
		"bgb::vehicle_damage_override",
		"bgb_machine::bgb_machine_arrives",
		"bgb_machine::bgb_machine_closes",
		"bgb_machine::bgb_machine_host_migration",
		"bgb_machine::bgb_machine_initial",
		"bgb_machine::bgb_machine_leaves",
		"bgb_machine::bgb_machine_lion_twitches",
		"bgb_machine::bgb_machine_move",
		"bgb_machine::bgb_machine_opens",
		"bgb_machine::bgb_machine_stub_update_prompt",
		"bgb_machine::bgb_machine_think",
		"bgb_machine::bgb_machine_trigger_update_prompt",
		"bgb_machine::bgb_machine_unitrigger_think",
		"bgb_machine::create_bgb_machine_unitrigger_stub",
		"bgb_machine::fire_sale_fix",
		"bgb_machine::get_bgb_machine_state",
		"bgb_machine::hide_bgb_machine",
		"bgb_machine::is_bgb_machine_active",
		"bgb_machine::process_bgb_machine_state",
		"bgb_machine::set_bgb_machine_state",
		"bgb_machine::show_bgb_machine",
		"bgb_machine::trigger_visible_to_player",
		"bgb_machine::turn_off_fire_sale",
		"bgb_machine::turn_on_fire_sale",
		"bgb_token::award_bgb_token_to_team",
		"bgb_token::bgb_token_devgui_think",
		"bgb_token::get_pct_chance_of_bgb_token_drop",
		"bgb_token::get_score_estimate_for_round",
		"bgb_token::get_target_round_index_for_bgb_tokens_received",
		"bgb_token::give_bgb_token_to_player",
		"bgb_token::roll_for_drop",
		"bgb_token::update_target_score_on_round_transition",
		"Blackboard::AddBlackboardEvent",
		"Blackboard::BB_GetSpeed",
		"Blackboard::BB_VehGetEnemyYaw",
		"Blackboard::CreateBlackBoardForEntity",
		"Blackboard::GetBlackBoardAttribute",
		"Blackboard::GetBlackboardEvents",
		"Blackboard::RegisterActorBlackBoardAttributes",
		"Blackboard::RegisterBlackBoardAttribute",
		"Blackboard::RegisterVehicleBlackBoardAttributes",
		"Blackboard::RemoveBlackboardEvents",
		"Blackboard::SetBlackBoardAttribute",
		"Blackboard::VehGetPredictedYawToEnemy",
		"blood::blood_in",
		"blood::blood_out",
		"blood::disable_blood",
		"blood::enable_blood",
		"blood::localplayer_spawned",
		"blood::player_spawned",
		"blood::player_watch_blood",
		"blood::player_watch_blood_shutdown",
		"blood::SetControllerLightBarColorPulsing",
		"bot::activate_hero_gadget",
		"bot::add_bot",
		"bot::add_bots",
		"bot::add_bot_at_eye_trace",
		"bot::add_bot_crosshair",
		"bot::approach_goal_trigger",
		"bot::approach_point",
		"bot::bot_connect",
		"bot::bot_debug_box",
		"bot::bot_devgui_think",
		"bot::bot_hit_target",
		"bot::bot_speed2D",
		"bot::bot_think",
		"bot::bot_think_loop",
		"bot::bot_unhandled",
		"bot::bot_update",
		"bot::bot_update_move_angle",
		"bot::bot_void",
		"bot::Callback_BotEnteredUserEdge",
		"bot::camp",
		"bot::check_stuck",
		"bot::check_stuck_position",
		"bot::clear_stuck",
		"bot::coop_bot_devgui_cmd",
		"bot::coop_post_combat",
		"bot::coop_pre_combat",
		"bot::debug_circle",
		"bot::debug_patrol",
		"bot::debug_star",
		"bot::devgui_debug_route",
		"bot::devgui_think",
		"bot::doublejump_traversal",
		"bot::end_sprint_to_goal",
		"bot::exit_wallrun",
		"bot::eye_trace",
		"bot::filter_bots",
		"bot::finish_corner",
		"bot::follow_coop_players",
		"bot::follow_entity",
		"bot::fwd_dot",
		"bot::getOtherTeam",
		"bot::get_bot_default_settings",
		"bot::get_closest_enemy",
		"bot::get_difficulty",
		"bot::get_host_player",
		"bot::get_nav_points",
		"bot::get_ready_gadget",
		"bot::get_ready_gun_gadget",
		"bot::get_team_players_in_laststand",
		"bot::get_trigger_height",
		"bot::get_trigger_radius",
		"bot::goal_in_trigger",
		"bot::has_launcher",
		"bot::init",
		"bot::init_bot_settings",
		"bot::init_shared",
		"bot::is_bot_ranked_match",
		"bot::is_gun_gadget",
		"bot::jump_down_traversal",
		"bot::jump_to",
		"bot::jump_traversal",
		"bot::jump_up_traversal",
		"bot::kill_bot",
		"bot::kill_bots",
		"bot::lead_player",
		"bot::leave_water_traversal",
		"bot::navmesh_wander",
		"bot::on_player_connect",
		"bot::on_player_killed",
		"bot::on_player_spawned",
		"bot::path_to_point_in_trigger",
		"bot::path_to_trigger",
		"bot::point_in_goal",
		"bot::press_ads_button",
		"bot::press_attack_button",
		"bot::press_crouch_button",
		"bot::press_doublejump_button",
		"bot::press_frag_button",
		"bot::press_jump_button",
		"bot::press_offhand_button",
		"bot::press_sprint_button",
		"bot::press_swim_down",
		"bot::press_swim_up",
		"bot::press_throw_button",
		"bot::press_use_button",
		"bot::release_ads_button",
		"bot::release_attack_button",
		"bot::release_doublejump_button",
		"bot::release_frag_button",
		"bot::release_jump_button",
		"bot::release_offhand_button",
		"bot::release_sprint_button",
		"bot::release_swim_down",
		"bot::release_swim_up",
		"bot::release_throw_button",
		"bot::release_use_button",
		"bot::remove_all_bots",
		"bot::remove_bot",
		"bot::remove_bots",
		"bot::revive_player",
		"bot::revive_players",
		"bot::soft_fall_traversal",
		"bot::sprint_think",
		"bot::sprint_to_goal",
		"bot::stow_gun_gadget",
		"bot::stuck_resolution",
		"bot::swim_traversal",
		"bot::system_devgui_think",
		"bot::system_init",
		"bot::tap_ads_button",
		"bot::tap_attack_button",
		"bot::tap_doublejump_button",
		"bot::tap_frag_button",
		"bot::tap_jump_button",
		"bot::tap_melee_button",
		"bot::tap_offhand_button",
		"bot::tap_offhand_special_button",
		"bot::tap_reload_button",
		"bot::tap_use_button",
		"bot::traversal_end",
		"bot::traversing",
		"bot::update_swim",
		"bot::wait_acrobatics_end",
		"bot::wait_bot_goal_reached_loop",
		"bot::wait_bot_path_failed_loop",
		"bot::wait_corner_radius",
		"bot::wait_release_swim_buttons",
		"bot::wait_traversal_abort",
		"bot::wait_traversal_timeout",
		"bot::wait_wallrun_begin",
		"bot::wait_wallrun_near",
		"bot::wallrun_traversal",
		"bot::watch_bot_corner",
		"bot::watch_start_swimming",
		"bot::watch_traversal_end",
		"bot_combat::aim_grenade",
		"bot_combat::angleError",
		"bot_combat::best_enemy",
		"bot_combat::bot_post_combat",
		"bot_combat::bot_pre_combat",
		"bot_combat::can_do_combat",
		"bot_combat::can_reload",
		"bot_combat::change_to_none_melee_weapon",
		"bot_combat::chase_threat",
		"bot_combat::clear_damage",
		"bot_combat::clear_enemy",
		"bot_combat::clear_threat",
		"bot_combat::clear_threat_aim",
		"bot_combat::combat_dead",
		"bot_combat::combat_idle",
		"bot_combat::combat_main",
		"bot_combat::combat_melee",
		"bot_combat::combat_strafe",
		"bot_combat::combat_tactical_insertion",
		"bot_combat::combat_think",
		"bot_combat::combat_throw_emp",
		"bot_combat::combat_throw_lethal",
		"bot_combat::combat_throw_proximity",
		"bot_combat::combat_throw_smoke",
		"bot_combat::combat_throw_tactical",
		"bot_combat::combat_toss_flash",
		"bot_combat::combat_toss_frag",
		"bot_combat::create_cover",
		"bot_combat::dot_product",
		"bot_combat::engage_threat",
		"bot_combat::fire_weapon",
		"bot_combat::getOtherTeam",
		"bot_combat::get_aim_error",
		"bot_combat::get_aim_offset",
		"bot_combat::get_ai_threats",
		"bot_combat::get_bot_threats",
		"bot_combat::get_converge_rate",
		"bot_combat::get_converge_time",
		"bot_combat::get_fov",
		"bot_combat::get_greatest_threat",
		"bot_combat::get_lethal_grenade",
		"bot_combat::get_melee_range_sq",
		"bot_combat::get_new_threat",
		"bot_combat::get_threat_goal_radius",
		"bot_combat::get_throw_velocity",
		"bot_combat::has_crossbow",
		"bot_combat::has_enemy",
		"bot_combat::has_launcher",
		"bot_combat::has_lmg",
		"bot_combat::has_melee_weapon",
		"bot_combat::has_minigun",
		"bot_combat::has_pistol",
		"bot_combat::has_shotgun",
		"bot_combat::has_sniper",
		"bot_combat::has_threat",
		"bot_combat::has_weapon_class",
		"bot_combat::health_frac",
		"bot_combat::ignore_none",
		"bot_combat::ignore_non_sentient",
		"bot_combat::is_alive",
		"bot_combat::lookat_entity",
		"bot_combat::melee_attack",
		"bot_combat::nearest_node",
		"bot_combat::on_target",
		"bot_combat::patrol_near_enemy",
		"bot_combat::press_grenade_button",
		"bot_combat::reload_weapon",
		"bot_combat::riotshield_dangerous_think",
		"bot_combat::riotshield_think",
		"bot_combat::select_weapon",
		"bot_combat::set_threat",
		"bot_combat::shotgun_think",
		"bot_combat::should_hip_fire",
		"bot_combat::start_threat_aim",
		"bot_combat::switch_weapon",
		"bot_combat::threat_dead",
		"bot_combat::threat_ignore",
		"bot_combat::threat_is_actor",
		"bot_combat::threat_is_ai_tank",
		"bot_combat::threat_is_alive",
		"bot_combat::threat_is_dog",
		"bot_combat::threat_is_equipment",
		"bot_combat::threat_is_player",
		"bot_combat::threat_is_qrdrone",
		"bot_combat::threat_is_turret",
		"bot_combat::threat_is_warthog",
		"bot_combat::threat_requires_rocket",
		"bot_combat::threat_should_ignore",
		"bot_combat::threat_switch_weapon",
		"bot_combat::threat_using_riotshield",
		"bot_combat::threat_visible",
		"bot_combat::throw_grenade",
		"bot_combat::turret_get_attack_node",
		"bot_combat::turret_mark_node_dangerous",
		"bot_combat::turret_nearest_node",
		"bot_combat::turret_set_dangerous",
		"bot_combat::update_aim",
		"bot_combat::update_attack",
		"bot_combat::update_cover",
		"bot_combat::update_lookat",
		"bot_combat::update_threat",
		"bot_combat::update_threat_goal",
		"bot_combat::update_weapon_ads",
		"bot_combat::update_weapon_aim",
		"bot_combat::using_launcher",
		"bot_combat::wait_damage_loop",
		"bot_combat::weapon_ads_dot",
		"bot_combat::weapon_ammo_frac",
		"bot_combat::weapon_clip_frac",
		"bot_combat::weapon_fire_dot",
		"bot_combat::weapon_range",
		"bot_combat::weapon_range_close",
		"bot_combat::will_hit_target",
		"bouncingbetty::bouncingBettyDestroyed",
		"bouncingbetty::bouncingBettyDetonate",
		"bouncingbetty::bouncingBettyDvarUpdate",
		"bouncingbetty::bouncingBettyJumpAndExplode",
		"bouncingbetty::bouncingbetty_deploying",
		"bouncingbetty::bouncingbetty_detonating",
		"bouncingbetty::bouncingbetty_state_change",
		"bouncingbetty::createBouncingBettyWatcher",
		"bouncingbetty::doNoTrackUsedStatOnPickup",
		"bouncingbetty::init_shared",
		"bouncingbetty::killMineMover",
		"bouncingbetty::killMineMoverOnPickup",
		"bouncingbetty::mineExplode",
		"bouncingbetty::onBouncingBettyFizzleOut",
		"bouncingbetty::onSpawnBouncingBetty",
		"bouncingbetty::proximityWeaponObjectDetonation_override",
		"bouncingbetty::register",
		"bouncingbetty::spawnMineMover",
		"bouncingbetty::trackBouncingBettyAsUsed",
		"bouncingbetty::trackOnOwner",
		"bouncingbetty::trackUsedOnHack",
		"bouncingbetty::trackUsedStatOnDeath",
		"bouncingbetty::watchForExplosionNotetracks",
		"burnplayer::burning_callback",
		"burnplayer::burning_corpse_callback",
		"burnplayer::burn_clear",
		"burnplayer::burn_off",
		"burnplayer::burn_on",
		"burnplayer::burn_on_postfx",
		"burnplayer::LoadEffects",
		"burnplayer::on_localplayer_spawned",
		"burnplayer::on_local_client_connect",
		"burnplayer::on_player_spawned",
		"burnplayer::SetPlayerBurning",
		"burnplayer::set_corpse_burning",
		"burnplayer::TakingBurnDamage",
		"burnplayer::update_burn",
		"burnplayer::WatchBurnDamage",
		"burnplayer::WatchBurnFinished",
		"burnplayer::WatchBurnTimer",
		"burnplayer::watchForWater",
		"callback::abort_level",
		"callback::add_callback",
		"callback::add_entity_callback",
		"callback::add_weapon_damage",
		"callback::add_weapon_type",
		"callback::add_weapon_watcher",
		"callback::callback",
		"callback::callback_void",
		"callback::callback_weapon_damage",
		"callback::callback_weapon_watcher",
		"callback::entityspawned",
		"callback::entity_callback",
		"callback::finishCustomTraversalListener",
		"callback::host_migration",
		"callback::killedCustomTraversalListener",
		"callback::localclientconnect",
		"callback::menu_response_queue_pump",
		"callback::on_actor_damage",
		"callback::on_actor_killed",
		"callback::on_ai_damage",
		"callback::on_ai_killed",
		"callback::on_ai_spawned",
		"callback::on_challenge_complete",
		"callback::on_connect",
		"callback::on_connecting",
		"callback::on_disconnect",
		"callback::on_finalize_initialization",
		"callback::on_joined_spectate",
		"callback::on_joined_team",
		"callback::on_laststand",
		"callback::on_loadout",
		"callback::on_localclient_connect",
		"callback::on_localclient_shutdown",
		"callback::on_localplayer_spawned",
		"callback::on_player_damage",
		"callback::on_player_killed",
		"callback::on_shutdown",
		"callback::on_spawned",
		"callback::on_start_gametype",
		"callback::on_vehicle_damage",
		"callback::on_vehicle_killed",
		"callback::on_vehicle_spawned",
		"callback::playerspawned",
		"callback::prevent_round_switch_animation",
		"callback::remove_callback",
		"callback::remove_callback_on_death",
		"callback::remove_on_actor_damage",
		"callback::remove_on_actor_killed",
		"callback::remove_on_ai_damage",
		"callback::remove_on_ai_killed",
		"callback::remove_on_ai_spawned",
		"callback::remove_on_connect",
		"callback::remove_on_connecting",
		"callback::remove_on_disconnect",
		"callback::remove_on_loadout",
		"callback::remove_on_localplayer_spawned",
		"callback::remove_on_player_damage",
		"callback::remove_on_player_killed",
		"callback::remove_on_spawned",
		"callback::remove_on_vehicle_damage",
		"callback::remove_on_vehicle_killed",
		"callback::remove_on_vehicle_spawned",
		"callback::scene_black_screen",
		"callback::SetDefaultCallbacks",
		"callback::setup_callbacks",
		"callback::set_default_callbacks",
		"callback::spawned_weapon_type",
		"challenges::addFlySwatterStat",
		"challenges::assisted",
		"challenges::bladeKill",
		"challenges::blockedSatellite",
		"challenges::bothBombsDetonateWithinTime",
		"challenges::calledInCarePackage",
		"challenges::canProcessChallenges",
		"challenges::capturedBFirstMinute",
		"challenges::capturedCrate",
		"challenges::capturedObjective",
		"challenges::challengeActorKills",
		"challenges::challengeGameEnd",
		"challenges::challengeKills",
		"challenges::challengeRoundEnd",
		"challenges::controlZoneEntirely",
		"challenges::destroyedAircraft",
		"challenges::destroyedEquipment",
		"challenges::destroyedExplosive",
		"challenges::destroyedHelicopter",
		"challenges::destroyedPlayerControlledAircraft",
		"challenges::destroyedQRDrone",
		"challenges::destroyedTacticalInsert",
		"challenges::destroyedTurret",
		"challenges::destroyed_car",
		"challenges::destroyNonAirScoreStreak_PostStatsLock",
		"challenges::destroyRCBomb",
		"challenges::destroyScoreStreak",
		"challenges::didLoserFailChallenge",
		"challenges::disarmedHackedCarepackage",
		"challenges::doChallengeCallback",
		"challenges::domAttackerMultiKill",
		"challenges::doScoreEventCallback",
		"challenges::earnedCUAVAssistScore",
		"challenges::earnedEMPAssistScore",
		"challenges::earnedKillstreak",
		"challenges::earnedMicrowaveAssistScore",
		"challenges::earnedSatelliteAssistScore",
		"challenges::earnedUAVAssistScore",
		"challenges::endedEarly",
		"challenges::eventReceived",
		"challenges::flakjacketProtected",
		"challenges::gameEnd",
		"challenges::genericBulletKill",
		"challenges::getFinalKill",
		"challenges::getLosersTeamScores",
		"challenges::hackedOrDestroyedEquipment",
		"challenges::holdFlagEntireMatch",
		"challenges::immediateCapture",
		"challenges::init",
		"challenges::initChallengeData",
		"challenges::initTeamChallenges",
		"challenges::init_shared",
		"challenges::isDamageFromPlayerControlledAITank",
		"challenges::isDamageFromPlayerControlledSentry",
		"challenges::isFlashbanged",
		"challenges::isHeatWaveStunned",
		"challenges::isHighestScoringPlayer",
		"challenges::killedDog",
		"challenges::killedLastContester",
		"challenges::killedNemesis",
		"challenges::killedZoneAttacker",
		"challenges::killstreakTen",
		"challenges::killWhileDamagingWithHPM",
		"challenges::longDistanceHatchetKill",
		"challenges::longDistanceKill",
		"challenges::monitorReloads",
		"challenges::monitor_player_sprint",
		"challenges::multiKill",
		"challenges::multi_LMG_SMG_Kill",
		"challenges::multi_MGL_Kill",
		"challenges::multi_RCBomb_Kill",
		"challenges::multi_RemoteMissile_Kill",
		"challenges::on_player_connect",
		"challenges::perkKills",
		"challenges::pickedUpBallisticKnife",
		"challenges::playerKilled",
		"challenges::registerChallengesCallback",
		"challenges::reloadThenKill",
		"challenges::reloadThenKillTimeOut",
		"challenges::roundEnd",
		"challenges::scavengedGrenade",
		"challenges::spawnWatcher",
		"challenges::stunnedTankWithEMPGrenade",
		"challenges::teamCompletedChallenge",
		"challenges::totalDomination",
		"challenges::trackAssists",
		"challenges::trophy_defense",
		"challenges::updatezonemultikills",
		"challenges::waitAndProcessPlayerKilledCallback",
		"challenges::waitTillTimeoutOrDeath",
		"challenges::watchForDTP",
		"challenges::watchForMantle",
		"challenges::watchForRapidDestroy",
		"challenges::weaponIsKnife",
		"character::attachFromArray",
		"character::get_least_used_index",
		"character::get_random_character",
		"character::initialize_character_group",
		"character::load",
		"character::newcharacter",
		"character::random",
		"character::randomElement",
		"character::save",
		"character::setModelFromArray",
		"character_customization::character_streamer",
		"character_customization::create_character_data_struct",
		"character_customization::get_character_body",
		"character_customization::get_character_body_color",
		"character_customization::get_character_body_colors",
		"character_customization::get_character_head",
		"character_customization::get_character_helmet",
		"character_customization::get_character_helmet_color",
		"character_customization::get_character_helmet_colors",
		"character_customization::get_character_mode",
		"character_customization::get_current_frozen_moment_params",
		"character_customization::handle_camo",
		"character_customization::handle_camo_off",
		"character_customization::handle_camo_on",
		"character_customization::handle_forced_streaming",
		"character_customization::is_character_streamed",
		"character_customization::loadEquippedCharacterOnModel",
		"character_customization::localClientConnect",
		"character_customization::process_character_extracam_request",
		"character_customization::process_current_hero_headshot_extracam_request",
		"character_customization::process_lobby_client_character_extracam_request",
		"character_customization::process_outfit_preview_extracam_request",
		"character_customization::rotation_thread_spawner",
		"character_customization::setup_character_extracam_settings",
		"character_customization::setup_character_extracam_struct",
		"character_customization::setup_character_streaming",
		"character_customization::setup_live_character_customization_target",
		"character_customization::setup_static_character_customization_target",
		"character_customization::set_body",
		"character_customization::set_body_color",
		"character_customization::set_body_colors",
		"character_customization::set_character",
		"character_customization::set_character_align",
		"character_customization::set_character_mode",
		"character_customization::set_head",
		"character_customization::set_helmet",
		"character_customization::set_helmet_color",
		"character_customization::set_helmet_colors",
		"character_customization::start_character_streaming",
		"character_customization::update",
		"character_customization::updateEventThread",
		"character_customization::update_character_animation_and_attachments",
		"character_customization::update_character_animation_tree_for_scene",
		"character_customization::update_character_extracam",
		"character_customization::update_model_attachment",
		"character_customization::update_model_rotation_for_right_stick",
		"character_customization::update_show_helmets",
		"character_customization::update_use_frozen_moments",
		"character_customization::wait_for_extracam_close",
		"civ_pickup::main",
		"civ_pickup::setanims",
		"civ_pickup::set_50cal_gunner_anims",
		"civ_pickup::set_50cal_vehicle_anims",
		"civ_pickup::set_vehicle_anims",
		"civ_pickup::unload_groups",
		"clientfaceanim::BuildAndValidateFacialAnimationList",
		"clientfaceanim::main",
		"clientfield::get",
		"clientfield::get_player_uimodel",
		"clientfield::get_to_player",
		"clientfield::increment",
		"clientfield::increment_to_player",
		"clientfield::increment_uimodel",
		"clientfield::register",
		"clientfield::set",
		"clientfield::set_player_uimodel",
		"clientfield::set_to_player",
		"clientids::init",
		"clientids::on_player_connect",
		"CloneServerUtils::clonePlayerLook",
		"colors::activate_color_trigger",
		"colors::activate_color_trigger_internal",
		"colors::add_cover_node",
		"colors::add_node_to_global_arrays",
		"colors::add_path_node",
		"colors::add_volume_to_global_arrays",
		"colors::ai_sets_goal",
		"colors::ai_sets_goal_with_delay",
		"colors::careful_logic",
		"colors::colorIsLegit",
		"colors::colorNode_replace_on_death",
		"colors::colorNode_spawn_reinforcement",
		"colors::color_force_goal",
		"colors::color_node_finds_a_user",
		"colors::color_node_finds_user_for_colorCode",
		"colors::color_node_finds_user_from_colorcodes",
		"colors::convert_color_to_short_string",
		"colors::debugColorFriendlies",
		"colors::debugColorFriendliesToggleWatch",
		"colors::debugDvars",
		"colors::debug_colornodes",
		"colors::decrementColorUsers",
		"colors::disable",
		"colors::draw_colorNodes",
		"colors::draw_color_friendlies",
		"colors::enable",
		"colors::friendly_spawner_vision_checker",
		"colors::getClassColorHash",
		"colors::GetColorNumberArray",
		"colors::get_all_force_color_friendlies",
		"colors::get_best_available_colored_node",
		"colors::get_best_available_new_colored_node",
		"colors::get_colorcodes_and_activate_trigger",
		"colors::get_colorcodes_from_trigger",
		"colors::get_color_from_order",
		"colors::get_color_list",
		"colors::get_color_spawner",
		"colors::get_force_color",
		"colors::get_force_color_guys",
		"colors::get_prioritized_colorCoded_nodes",
		"colors::get_script_palette",
		"colors::get_team_substr",
		"colors::goto_current_ColorIndex",
		"colors::has_color",
		"colors::hero_catch_up_teleport",
		"colors::insure_player_does_not_set_forcecolor_twice_in_one_frame",
		"colors::issue_color_order_to_ai",
		"colors::issue_leave_node_order_to_ai_and_get_ai",
		"colors::is_color_ai",
		"colors::kill_color_replacements",
		"colors::left_color_node",
		"colors::lock_spawner_for_awhile",
		"colors::my_current_node_delays",
		"colors::new_color_being_set",
		"colors::occupies_colorCode",
		"colors::player_color_node",
		"colors::player_init_color_grouping",
		"colors::player_sees_spawner",
		"colors::prioritize_colorCoded_nodes",
		"colors::process_color_order_to_ai",
		"colors::process_cover_node",
		"colors::process_cover_node_with_last_in_mind_allies",
		"colors::process_cover_node_with_last_in_mind_axis",
		"colors::process_path_node",
		"colors::process_stop_short_of_node",
		"colors::reached_node_but_could_not_claim_it",
		"colors::recover_from_careful_disable",
		"colors::removeSpawnerFromColorNumberArray",
		"colors::remove_colorForced_ai_when_dead",
		"colors::remove_replace_on_death",
		"colors::same_color_code_as_last_time",
		"colors::set_force_color",
		"colors::set_force_color_spawner",
		"colors::set_goal_and_volume",
		"colors::shortenColor",
		"colors::take_color_node",
		"colors::trigger_auto_disable",
		"colors::trigger_issues_orders",
		"colors::try_to_draw_line_to_node",
		"colors::update_debug_friendlycolor",
		"colors::update_debug_friendlycolor_on_death",
		"colors::use_big_goal_until_goal_is_safe",
		"colors::wait_for_killanimscript_or_time",
		"colors::wait_until_an_enemy_is_in_safe_area",
		"compass::setupMiniMap",
		"compass::vecscale",
		"containers::container_update",
		"containers::create_locker_doors",
		"containers::create_locker_trigger",
		"containers::get_closest_ent_from_array",
		"containers::init",
		"containers::setup_container_scriptbundle",
		"containers::setup_general_container_bundle",
		"containers::setup_locker_double_doors",
		"counteruav::counteruav_initialize",
		"counteruav::drone_callback_damage",
		"croc::aim_at_best_shoot_location",
		"croc::bootup",
		"croc::canSeeEnemyFromPosition",
		"croc::check_melee",
		"croc::cleanup_fx_ents",
		"croc::crocCallback_VehicleDamage",
		"croc::croc_blink_lights",
		"croc::croc_crash_movement",
		"croc::croc_death",
		"croc::croc_emped",
		"croc::croc_exit_vehicle",
		"croc::croc_find_new_position",
		"croc::croc_find_next_patrol_node",
		"croc::croc_main",
		"croc::croc_movementupdate",
		"croc::croc_off",
		"croc::croc_on",
		"croc::croc_player_bullet_shake",
		"croc::croc_player_rocket_recoil",
		"croc::croc_requestASMState",
		"croc::croc_scripted",
		"croc::croc_set_swim_depth",
		"croc::croc_set_team",
		"croc::croc_start_ai",
		"croc::croc_stop_ai",
		"croc::croc_testBuoyancy",
		"croc::croc_think",
		"croc::croc_update_damage_fx",
		"croc::death_fx",
		"croc::get_damage_fx_ent",
		"croc::goal_flag_monitor",
		"croc::isInWater",
		"croc::isOnLand",
		"croc::main",
		"croc::path_update_interrupt",
		"croc::show_weak_spots",
		"croc::waittill_pathing_done",
		"customclass::custom_class_attachment_select_focus",
		"customclass::custom_class_closed",
		"customclass::custom_class_init",
		"customclass::custom_class_remove",
		"customclass::custom_class_start_threads",
		"customclass::custom_class_update",
		"customclass::get_attachments_intersection",
		"customclass::get_camo_index",
		"customclass::get_lerp_duration",
		"customclass::get_reticle_index",
		"customclass::get_show_emblem",
		"customclass::get_show_paintshop",
		"customclass::get_show_payer_tag",
		"customclass::handle_cac_customization",
		"customclass::handle_cac_customization_attachmentvariant",
		"customclass::handle_cac_customization_closed",
		"customclass::handle_cac_customization_focus",
		"customclass::handle_cac_customization_weaponoption",
		"customclass::hide_paintshop_bg",
		"customclass::init",
		"customclass::is_optic",
		"customclass::localClientConnect",
		"customclass::preload_weapon_model",
		"customclass::preload_weapon_watcher",
		"customclass::restore_camera",
		"customclass::setup_paintshop_bg",
		"customclass::set_attachment_cosmetic_variants",
		"customclass::set_weapon_options",
		"customclass::show_paintshop_bg",
		"customclass::spawn_weapon_model",
		"customclass::toggle_locked_weapon_shader",
		"customclass::toggle_tokenlocked_weapon_shader",
		"customclass::transition_camera",
		"customclass::transition_camera_immediate",
		"customclass::update_weapon_script_model",
		"customclass::wait_preload_weapon",
		"damagefeedback::damage_feedback_get_dead",
		"damagefeedback::damage_feedback_get_stage",
		"damagefeedback::damage_feedback_growth",
		"damagefeedback::doDamageFeedback",
		"damagefeedback::init",
		"damagefeedback::isTacticalHitMarker",
		"damagefeedback::kill_hitmarker_fade",
		"damagefeedback::main",
		"damagefeedback::on_player_connect",
		"damagefeedback::playHitSound",
		"damagefeedback::play_hit_sound",
		"damagefeedback::sendHitSpecialEventAtFrameEnd",
		"damagefeedback::send_hit_special_event_at_frame_end",
		"damagefeedback::should_play_sound",
		"damagefeedback::update",
		"damagefeedback::updateDamageFeedback",
		"damagefeedback::updateSpecialDamageFeedback",
		"damagefeedback::update_override",
		"damagefeedback::update_special",
		"debug::debug_draw_tuning_sphere",
		"debug_menu::close",
		"debug_menu::open",
		"debug_menu::set_item_color",
		"debug_menu::set_item_text",
		"decoy::create_watcher",
		"decoy::destroy",
		"decoy::detonate",
		"decoy::do_explosion",
		"decoy::finish_while_loop",
		"decoy::fire_burst",
		"decoy::init_shared",
		"decoy::level_watch_for_fake_fire",
		"decoy::move",
		"decoy::on_spawn",
		"decoy::pick_random_weapon",
		"decoy::play_reload_sounds",
		"decoy::should_play_reload_sound",
		"decoy::simulate_weapon_fire",
		"decoy::simulate_weapon_fire_machine_gun",
		"decoy::simulate_weapon_fire_machine_gun_full_auto",
		"decoy::simulate_weapon_fire_machine_gun_semi_auto",
		"decoy::simulate_weapon_fire_pistol",
		"decoy::simulate_weapon_fire_shotgun",
		"decoy::simulate_weapon_fire_sniper",
		"decoy::spawned",
		"decoy::track_main_direction",
		"decoy::watch_for_death_before_explosion",
		"decoy::watch_for_explosion",
		"decoy::watch_for_fake_fire",
		"delete::main",
		"demo::add_actor_bookmark_kill_time",
		"demo::bookmark",
		"demo::gameResultBookmark",
		"demo::initActorBookmarkParams",
		"demo::reset_actor_bookmark_kill_times",
		"demo::watch_actor_bookmarks",
		"DestructClientUtils::AddDestructPieceCallback",
		"DestructClientUtils::IsPieceDestructed",
		"destructible::breakAfter",
		"destructible::complex_explosion",
		"destructible::destructible_car_death_notify",
		"destructible::destructible_car_death_think",
		"destructible::destructible_car_explosion",
		"destructible::destructible_car_fire_think",
		"destructible::destructible_car_grenade_stuck_explode",
		"destructible::destructible_car_grenade_stuck_think",
		"destructible::destructible_car_hacked_c4",
		"destructible::destructible_event_callback",
		"destructible::doExplosion",
		"destructible::explosive_concussive_explosion",
		"destructible::explosive_electrical_explosion",
		"destructible::explosive_incendiary_explosion",
		"destructible::get_unused_explosion",
		"destructible::init_explosions",
		"destructible::physics_explosion_and_rumble",
		"destructible::playGrenadeRumble",
		"destructible::simple_explosion",
		"destructible::simple_timed_explosion",
		"destructible_character::AddDestructPieceCallback",
		"destructible_cover_shared::destroy_chunks",
		"destructible_cover_shared::destroy_geo_piece",
		"destructible_cover_shared::destroy_piece",
		"destructible_cover_shared::destructible_cover_geo_think",
		"destructible_cover_shared::destructible_cover_think",
		"destructible_cover_shared::dest_collision_watcher",
		"destructible_cover_shared::dest_model_think",
		"destructible_cover_shared::ents_from_script_int",
		"destructible_cover_shared::hide_cracked_parts",
		"destructible_cover_shared::pass_on_damage",
		"destructible_cover_shared::pieces_think",
		"destructible_cover_shared::precache_destructible_fx",
		"DestructServerUtils::CopyDestructState",
		"DestructServerUtils::DestructHitLocPieces",
		"DestructServerUtils::DestructLeftArmPieces",
		"DestructServerUtils::DestructLeftLegPieces",
		"DestructServerUtils::DestructNumberRandomPieces",
		"DestructServerUtils::DestructPiece",
		"DestructServerUtils::DestructRandomPieces",
		"DestructServerUtils::DestructRightArmPieces",
		"DestructServerUtils::DestructRightLegPieces",
		"DestructServerUtils::GetPieceCount",
		"DestructServerUtils::HandleDamage",
		"DestructServerUtils::IsDestructed",
		"DestructServerUtils::ReapplyDestructedPieces",
		"DestructServerUtils::ShowDestructedPieces",
		"DestructServerUtils::ToggleSpawnGibs",
		"dev::add_perk_devgui",
		"dev::body_customization_devgui",
		"dev::body_customization_populate",
		"dev::body_customization_process_command",
		"dev::body_customization_setup_body",
		"dev::body_customization_setup_helmet",
		"dev::debug_sphere",
		"dev::devgui_health_debug",
		"dev::devgui_increase_momentum",
		"dev::devgui_spawn_think",
		"dev::devgui_unlimited_ammo",
		"dev::devgui_unlimited_momentum",
		"dev::devHeliPathDebugDraw",
		"dev::devStrafeRunPathDebugDraw",
		"dev::dev_get_node_pair",
		"dev::dev_get_point_pair",
		"dev::drawMiniMapBounds",
		"dev::drawNoteWorthyText",
		"dev::drawOriginLines",
		"dev::drawOriginText",
		"dev::drawPath",
		"dev::drawPathSegment",
		"dev::drawSpeedAccelText",
		"dev::drawTargetNameText",
		"dev::draw_pathnode",
		"dev::draw_pathnodes_stop",
		"dev::draw_pathnode_think",
		"dev::draw_point",
		"dev::dvar_turned_on",
		"dev::equipment_dev_gui",
		"dev::getAttachmentChangeModifierButton",
		"dev::get_lookat_origin",
		"dev::giveExtraPerks",
		"dev::grenade_dev_gui",
		"dev::hideSpawnpoints",
		"dev::hideStartSpawnpoints",
		"dev::init",
		"dev::lineUntilNotified",
		"dev::minimapWarn",
		"dev::new_hud",
		"dev::node_get",
		"dev::on_player_connect",
		"dev::point_get",
		"dev::print3DUntilNotified",
		"dev::print_weapon_name",
		"dev::set_equipment_list",
		"dev::set_grenade_list",
		"dev::set_hudelem",
		"dev::showOneSpawnPoint",
		"dev::showSpawnpoints",
		"dev::showStartSpawnpoints",
		"dev::take_all_grenades_and_equipment",
		"dev::testDvars",
		"dev::testScriptRuntimeError",
		"dev::testScriptRuntimeError1",
		"dev::testScriptRuntimeError2",
		"dev::testScriptRuntimeErrorAssert",
		"dev::updateDevSettings",
		"dev::updateDevSettingsZm",
		"dev::updateMinimapSetting",
		"dev::vecscale",
		"dev::warpAllToHost",
		"dev::warpAllToPlayer",
		"dev::watchAttachmentChange",
		"dev::xKillsY",
		"doors::door_debug_line",
		"doors::door_open_update",
		"doors::door_update",
		"doors::door_update_lock_scripted",
		"doors::door_wait_until_clear",
		"doors::door_wait_until_user_release",
		"doors::give_ai_key",
		"doors::give_ai_key_internal",
		"doors::give_player_key",
		"doors::init",
		"doors::key_process_timeout",
		"doors::player_freeze_in_place",
		"doors::player_has_key",
		"doors::player_take_key",
		"doors::rotate_key_forever",
		"doors::setup_door_scriptbundle",
		"doors::trigger_check_for_ents_touching",
		"doors::trigger_wait_until_clear",
		"doors::unlock",
		"doors::unlock_all",
		"dragon::attack_thread",
		"dragon::defaultRole",
		"dragon::dragon_AllowFriendlyFireDamage",
		"dragon::dragon_callback_damage",
		"dragon::dragon_initialize",
		"dragon::go_back_on_navvolume",
		"dragon::should_go_for_power_up",
		"dragon::state_combat_update",
		"dragon::state_death_update",
		"dragon::state_power_up_update",
		"driving_fx::any_wheel_colliding",
		"driving_fx::collision_thread",
		"driving_fx::correct_surface_type_for_screen_fx",
		"driving_fx::dirt_surface_type",
		"driving_fx::get_impact_vol_from_speed",
		"driving_fx::get_wheel_fx",
		"driving_fx::jump_landing_thread",
		"driving_fx::play_driving_fx",
		"driving_fx::play_driving_fx_firstperson",
		"driving_fx::play_screen_fx_dirt",
		"driving_fx::play_screen_fx_dust",
		"driving_fx::speed_fx",
		"driving_fx::suspension_thread",
		"driving_fx::vehicle_enter",
		"drown::activate_player_health_visionset",
		"drown::deactivate_player_health_visionset",
		"drown::disable_drown",
		"drown::drown_stage_callback",
		"drown::enable_drown",
		"drown::is_player_drowning",
		"drown::on_player_spawned",
		"drown::player_drown_fx",
		"drown::player_fade_out_drown_fx",
		"drown::player_init_drown_values",
		"drown::player_spawned",
		"drown::player_watch_drown_shutdown",
		"drown::setup_radius_values",
		"drown::watch_game_ended",
		"drown::watch_player_drowning",
		"drown::watch_player_drown_death",
		"duplicate_render::apply_filter",
		"duplicate_render::can_use_filter",
		"duplicate_render::change_dr_flags",
		"duplicate_render::clear_dr_flag",
		"duplicate_render::disable_all_filters_on_game_ended",
		"duplicate_render::find_dr_filter",
		"duplicate_render::on_player_connect",
		"duplicate_render::on_player_spawned",
		"duplicate_render::register_filter_materials",
		"duplicate_render::set_dr_filter",
		"duplicate_render::set_dr_filter_framebuffer",
		"duplicate_render::set_dr_filter_framebuffer_duplicate",
		"duplicate_render::set_dr_filter_offscreen",
		"duplicate_render::set_dr_flag",
		"duplicate_render::set_dr_flag_not_array",
		"duplicate_render::set_entity_thermal",
		"duplicate_render::set_hacker_tool_breaching",
		"duplicate_render::set_hacker_tool_hacked",
		"duplicate_render::set_hacker_tool_hacking",
		"duplicate_render::set_item_enemy_equipment",
		"duplicate_render::set_item_enemy_explosive",
		"duplicate_render::set_item_enemy_vehicle",
		"duplicate_render::set_item_friendly_equipment",
		"duplicate_render::set_item_friendly_explosive",
		"duplicate_render::set_item_friendly_vehicle",
		"duplicate_render::set_item_retrievable",
		"duplicate_render::set_item_unplaceable",
		"duplicate_render::set_player_threat_detected",
		"duplicate_render::show_friendly_outlines",
		"duplicate_render::update_dr_filters",
		"duplicate_render::update_dr_flag",
		"duplicate_render::wait_team_changed",
		"duplicate_render::watch_killcam_reapply_dr",
		"duplicate_render_bundle::AddDupMaterial",
		"duplicate_render_bundle::exitDupRenderBundle",
		"duplicate_render_bundle::finishPlayingDupRenderBundle",
		"duplicate_render_bundle::init_duplicate_render_bundles",
		"duplicate_render_bundle::localplayer_duplicate_render_bundle_init",
		"duplicate_render_bundle::playDupRenderBundle",
		"duplicate_render_bundle::SetShaderConstants",
		"duplicate_render_bundle::stopDupRenderBundle",
		"duplicate_render_bundle::stopPlayingDupRenderBundle",
		"empgrenade::applyEMP",
		"empgrenade::begin_other_grenade_tracking",
		"empgrenade::checkToTurnOffEmp",
		"empgrenade::empExplosionDamageEnts",
		"empgrenade::empGrenadeCleanseWaiter",
		"empgrenade::empGrenadeDeathWaiter",
		"empgrenade::empRumbleLoop",
		"empgrenade::MonitorDistance",
		"empgrenade::monitorEMPGrenade",
		"empgrenade::onEmpChanged",
		"empgrenade::onEmpMonitorDistanceChanged",
		"empgrenade::on_player_spawned",
		"empgrenade::ShutdownEmpRebootIndicatorMenu",
		"empgrenade::StartEmpEffects",
		"empgrenade::StopEmpEffects",
		"empgrenade::watchEMPExplosion",
		"end_game_taunts::addEpicSceneFunc",
		"end_game_taunts::camoShaderOff",
		"end_game_taunts::camoShaderOn",
		"end_game_taunts::cancelGesture",
		"end_game_taunts::cancelTaunt",
		"end_game_taunts::centerBulletGlass",
		"end_game_taunts::check_force_gesture",
		"end_game_taunts::check_force_taunt",
		"end_game_taunts::cloneShaderOff",
		"end_game_taunts::cloneShaderOn",
		"end_game_taunts::deleteCameraGlass",
		"end_game_taunts::draw_runner_up_bounds",
		"end_game_taunts::fireBeam",
		"end_game_taunts::fireWeapon",
		"end_game_taunts::getIdleAnimName",
		"end_game_taunts::getIdleInAnimName",
		"end_game_taunts::getIdleOutAnimName",
		"end_game_taunts::getWeaponGroup",
		"end_game_taunts::handleCamoChange",
		"end_game_taunts::hideModel",
		"end_game_taunts::hideWeapon",
		"end_game_taunts::launchProjectile",
		"end_game_taunts::magicGlassBullet",
		"end_game_taunts::playCurrentTaunt",
		"end_game_taunts::playEpicTauntScene",
		"end_game_taunts::playGesture",
		"end_game_taunts::playGestureType",
		"end_game_taunts::playLocalTeamFx",
		"end_game_taunts::playTaunt",
		"end_game_taunts::playTransitionAnim",
		"end_game_taunts::playWinnerTeamFx",
		"end_game_taunts::previewGesture",
		"end_game_taunts::previewTaunt",
		"end_game_taunts::reaperBulletGlass",
		"end_game_taunts::setupReaperMinigun",
		"end_game_taunts::showModel",
		"end_game_taunts::showWeapon",
		"end_game_taunts::shutdownEpicTauntModels",
		"end_game_taunts::spawnCameraGlass",
		"end_game_taunts::spawnGiUnit",
		"end_game_taunts::spawnHiddenClone",
		"end_game_taunts::spawnPlayerModel",
		"end_game_taunts::spawnRap",
		"end_game_taunts::spawnTalon",
		"end_game_taunts::spawnTopPlayerModel",
		"end_game_taunts::spawn_temp_specialist_model",
		"end_game_taunts::stopEpicTauntScene",
		"end_game_taunts::stopFireBeam",
		"end_game_taunts::stopFireWeapon",
		"end_game_taunts::stop_stream_epic_models",
		"end_game_taunts::stream_epic_models",
		"end_game_taunts::talonBulletGlass",
		"end_game_taunts::talonBulletGlassLeft",
		"end_game_taunts::talonBulletGlassRight",
		"end_game_taunts::updateGlassPosition",
		"end_game_taunts::waitAppearWeapon",
		"end_game_taunts::waitRemoveWeapon",
		"enemy_highlight::create_target_indicator",
		"enemy_highlight::enemy_highlight_display",
		"enemy_highlight::enemy_highlight_display_frame",
		"enemy_highlight::enemy_highlight_display_pulse",
		"enemy_highlight::enemy_highlight_display_stop",
		"entityheadicons::destroyEntityHeadIcons",
		"entityheadicons::destroyHeadIconsOnDeath",
		"entityheadicons::init_shared",
		"entityheadicons::setEntityHeadIcon",
		"entityheadicons::setEntityHeadIconsHiddenWhileControlling",
		"entityheadicons::start_gametype",
		"entityheadicons::updateEntityHeadClientIcon",
		"entityheadicons::updateEntityHeadClientObjective",
		"entityheadicons::updateEntityHeadIconPos",
		"entityheadicons::updateEntityHeadTeamIcon",
		"entityheadicons::updateEntityHeadTeamObjective",
		"escort_drone::can_enter_main",
		"escort_drone::EscortDroneCallback_VehicleDamage",
		"escort_drone::escort_drone_adjust_goal_for_enemy_height",
		"escort_drone::escort_drone_blink_lights",
		"escort_drone::escort_drone_check_move",
		"escort_drone::escort_drone_cleanup_fx",
		"escort_drone::escort_drone_collision",
		"escort_drone::escort_drone_collision_player",
		"escort_drone::escort_drone_emped",
		"escort_drone::escort_drone_exit_vehicle",
		"escort_drone::escort_drone_find_new_position",
		"escort_drone::escort_drone_fireupdate",
		"escort_drone::escort_drone_fire_for_time",
		"escort_drone::escort_drone_get_closest_node",
		"escort_drone::escort_drone_level_out_for_landing",
		"escort_drone::escort_drone_main",
		"escort_drone::escort_drone_movementupdate",
		"escort_drone::escort_drone_off",
		"escort_drone::escort_drone_on",
		"escort_drone::escort_drone_play_single_fx_on_tag",
		"escort_drone::escort_drone_power_loss_multiplier",
		"escort_drone::escort_drone_predicted_collision",
		"escort_drone::escort_drone_scripted",
		"escort_drone::escort_drone_set_team",
		"escort_drone::escort_drone_start_ai",
		"escort_drone::escort_drone_start_scripted",
		"escort_drone::escort_drone_teleport_to_nearest_node",
		"escort_drone::escort_drone_temp_bullet_shield",
		"escort_drone::escort_drone_think",
		"escort_drone::goal_flag_monitor",
		"escort_drone::hud_marker_create",
		"escort_drone::is_in_combat",
		"escort_drone::make_sure_goal_is_well_above_ground",
		"escort_drone::waittill_pathing_done",
		"explode::doExplosion",
		"explode::doTheDirty",
		"explode::localplayer_spawned",
		"explode::player_spawned",
		"explode::updateDvars",
		"explode::watchForExplosion",
		"explode::watchForPlayerFallDamage",
		"explode::watchForPlayerSlide",
		"exploder::activate_exploder",
		"exploder::activate_exploder_on_clients",
		"exploder::activate_individual_exploder",
		"exploder::activate_radiant_exploder",
		"exploder::brush_delete",
		"exploder::brush_show",
		"exploder::brush_throw",
		"exploder::cannon_effect",
		"exploder::createExploder",
		"exploder::delete_exploder_on_clients",
		"exploder::earthquake",
		"exploder::effect_soundalias",
		"exploder::exploder",
		"exploder::exploder_before_load",
		"exploder::exploder_damage",
		"exploder::exploder_delay",
		"exploder::exploder_duration",
		"exploder::exploder_earthquake",
		"exploder::exploder_is_lightning_exploder",
		"exploder::exploder_playSound",
		"exploder::exploder_sound",
		"exploder::exploder_stop",
		"exploder::exploder_trigger",
		"exploder::fire_effect",
		"exploder::getExploderId",
		"exploder::kill_exploder",
		"exploder::player_init",
		"exploder::playExploderFX",
		"exploder::playLightLoopExploder",
		"exploder::reportExploderIds",
		"exploder::rumble",
		"exploder::sound_effect",
		"exploder::stopLightLoopExploder",
		"exploder::stop_after_duration",
		"exploder::stop_exploder",
		"exploder::trail_effect",
		"exploder::trail_effect_ender",
		"face::PlayFaceThread",
		"face::PlayFace_WaitForNotify",
		"face::PlayFace_WaitForTime",
		"face::PlayIdleFace",
		"face::SayGenericDialogue",
		"face::SayGenericDialogueWithImportance",
		"face::SaySpecificDialogue",
		"face::SetIdleFace",
		"face::SetIdleFaceDelayed",
		"filter::disable_filter_base_frame_transition",
		"filter::disable_filter_binoculars",
		"filter::disable_filter_binoculars_with_outline",
		"filter::disable_filter_blood_spatter",
		"filter::disable_filter_drowning_damage",
		"filter::disable_filter_emp",
		"filter::disable_filter_ev_interference",
		"filter::disable_filter_feedback_blood",
		"filter::disable_filter_frame_transition",
		"filter::disable_filter_frost",
		"filter::disable_filter_hazmat",
		"filter::disable_filter_helmet",
		"filter::disable_filter_hud_projected_grid",
		"filter::disable_filter_keyline_blend",
		"filter::disable_filter_oob",
		"filter::disable_filter_overdrive",
		"filter::disable_filter_radialblur",
		"filter::disable_filter_raindrops",
		"filter::disable_filter_speed_burst",
		"filter::disable_filter_sprite_blood",
		"filter::disable_filter_sprite_dirt",
		"filter::disable_filter_sprite_rain",
		"filter::disable_filter_sprite_transition",
		"filter::disable_filter_squirrel_raindrops",
		"filter::disable_filter_tactical",
		"filter::disable_filter_tacticalmask",
		"filter::disable_filter_teleportation",
		"filter::disable_filter_teleporter_base",
		"filter::disable_filter_teleporter_sprite",
		"filter::disable_filter_teleporter_top",
		"filter::disable_filter_vehicleHijack",
		"filter::disable_filter_vehicle_damage",
		"filter::disable_filter_vehicle_hijack_oor",
		"filter::disable_filter_vision_pulse",
		"filter::disable_filter_water_dive",
		"filter::disable_filter_water_sheeting",
		"filter::disable_filter_zm_turned",
		"filter::enable_filter_base_frame_transition",
		"filter::enable_filter_binoculars",
		"filter::enable_filter_binoculars_with_outline",
		"filter::enable_filter_blood_spatter",
		"filter::enable_filter_drowning_damage",
		"filter::enable_filter_emp",
		"filter::enable_filter_ev_interference",
		"filter::enable_filter_feedback_blood",
		"filter::enable_filter_frame_transition",
		"filter::enable_filter_frost",
		"filter::enable_filter_hazmat",
		"filter::enable_filter_helmet",
		"filter::enable_filter_hud_projected_grid",
		"filter::enable_filter_hud_projected_grid_haiti",
		"filter::enable_filter_keyline_blend",
		"filter::enable_filter_oob",
		"filter::enable_filter_overdrive",
		"filter::enable_filter_radialblur",
		"filter::enable_filter_raindrops",
		"filter::enable_filter_sgen_sprite_rain",
		"filter::enable_filter_speed_burst",
		"filter::enable_filter_sprite_blood",
		"filter::enable_filter_sprite_blood_heavy",
		"filter::enable_filter_sprite_dirt",
		"filter::enable_filter_sprite_rain",
		"filter::enable_filter_sprite_transition",
		"filter::enable_filter_squirrel_raindrops",
		"filter::enable_filter_tactical",
		"filter::enable_filter_tacticalmask",
		"filter::enable_filter_teleportation",
		"filter::enable_filter_teleporter_base",
		"filter::enable_filter_teleporter_sprite",
		"filter::enable_filter_teleporter_top",
		"filter::enable_filter_vehicleHijack",
		"filter::enable_filter_vehicle_damage",
		"filter::enable_filter_vehicle_hijack_oor",
		"filter::enable_filter_vision_pulse",
		"filter::enable_filter_water_dive",
		"filter::enable_filter_water_sheeting",
		"filter::enable_filter_zm_turned",
		"filter::init_filter_base_frame_transition",
		"filter::init_filter_binoculars",
		"filter::init_filter_binoculars_with_outline",
		"filter::init_filter_blood_spatter",
		"filter::init_filter_drowning_damage",
		"filter::init_filter_emp",
		"filter::init_filter_ev_interference",
		"filter::init_filter_feedback_blood",
		"filter::init_filter_frame_transition",
		"filter::init_filter_frost",
		"filter::init_filter_hazmat",
		"filter::init_filter_helmet",
		"filter::init_filter_hud_projected_grid",
		"filter::init_filter_hud_projected_grid_haiti",
		"filter::init_filter_indices",
		"filter::init_filter_keyline_blend",
		"filter::init_filter_oob",
		"filter::init_filter_overdrive",
		"filter::init_filter_radialblur",
		"filter::init_filter_raindrops",
		"filter::init_filter_sgen_sprite_rain",
		"filter::init_filter_speed_burst",
		"filter::init_filter_sprite_blood",
		"filter::init_filter_sprite_blood_heavy",
		"filter::init_filter_sprite_dirt",
		"filter::init_filter_sprite_rain",
		"filter::init_filter_sprite_transition",
		"filter::init_filter_squirrel_raindrops",
		"filter::init_filter_tactical",
		"filter::init_filter_tacticalmask",
		"filter::init_filter_teleportation",
		"filter::init_filter_teleporter_base",
		"filter::init_filter_teleporter_sprite",
		"filter::init_filter_teleporter_top",
		"filter::init_filter_vehicleHijack",
		"filter::init_filter_vehicle_damage",
		"filter::init_filter_vehicle_hijack_oor",
		"filter::init_filter_vision_pulse",
		"filter::init_filter_water_dive",
		"filter::init_filter_water_sheeting",
		"filter::init_filter_zm_turned",
		"filter::mapped_material_id",
		"filter::map_material_helper",
		"filter::map_material_helper_by_localclientnum",
		"filter::map_material_if_undefined",
		"filter::SetTransported",
		"filter::set_filter_base_frame_transition_boost",
		"filter::set_filter_base_frame_transition_durden",
		"filter::set_filter_base_frame_transition_durden_blur",
		"filter::set_filter_base_frame_transition_warp",
		"filter::set_filter_blood_spatter_reveal",
		"filter::set_filter_drowning_damage_inner_radius",
		"filter::set_filter_drowning_damage_opacity",
		"filter::set_filter_drowning_damage_outer_radius",
		"filter::set_filter_emp_amount",
		"filter::set_filter_ev_interference_amount",
		"filter::set_filter_ev_vehicleHijack_amount",
		"filter::set_filter_feedback_blood_drowning",
		"filter::set_filter_feedback_blood_opacity",
		"filter::set_filter_feedback_blood_sundir",
		"filter::set_filter_feedback_blood_vignette",
		"filter::set_filter_frame_transition_blur",
		"filter::set_filter_frame_transition_flare",
		"filter::set_filter_frame_transition_heavy_hexagons",
		"filter::set_filter_frame_transition_iris",
		"filter::set_filter_frame_transition_light_hexagons",
		"filter::set_filter_frame_transition_saved_frame_reveal",
		"filter::set_filter_frame_transition_warp",
		"filter::set_filter_frost_layer_one",
		"filter::set_filter_frost_layer_two",
		"filter::set_filter_frost_reveal_direction",
		"filter::set_filter_hazmat_opacity",
		"filter::set_filter_hud_projected_grid_position",
		"filter::set_filter_hud_projected_grid_radius",
		"filter::set_filter_keyline_blend_opacity",
		"filter::set_filter_overdrive",
		"filter::set_filter_radialblur_amount",
		"filter::set_filter_raindrops_amount",
		"filter::set_filter_speed_burst",
		"filter::set_filter_sprite_blood_elapsed",
		"filter::set_filter_sprite_blood_opacity",
		"filter::set_filter_sprite_blood_seed_offset",
		"filter::set_filter_sprite_dirt_elapsed",
		"filter::set_filter_sprite_dirt_opacity",
		"filter::set_filter_sprite_dirt_seed_offset",
		"filter::set_filter_sprite_dirt_source_position",
		"filter::set_filter_sprite_dirt_sun_position",
		"filter::set_filter_sprite_rain_elapsed",
		"filter::set_filter_sprite_rain_opacity",
		"filter::set_filter_sprite_rain_seed_offset",
		"filter::set_filter_sprite_transition_blur",
		"filter::set_filter_sprite_transition_boost",
		"filter::set_filter_sprite_transition_elapsed",
		"filter::set_filter_sprite_transition_move_radii",
		"filter::set_filter_sprite_transition_octogons",
		"filter::set_filter_squirrel_raindrops_amount",
		"filter::set_filter_tactical_amount",
		"filter::set_filter_teleportation_anus_amount",
		"filter::set_filter_teleportation_anus_zoom",
		"filter::set_filter_teleportation_faces_amount",
		"filter::set_filter_teleportation_glow_radius",
		"filter::set_filter_teleportation_lightning_reveal",
		"filter::set_filter_teleportation_panther_amount",
		"filter::set_filter_teleportation_panther_zoom",
		"filter::set_filter_teleportation_space_background",
		"filter::set_filter_teleportation_sparkle_amount",
		"filter::set_filter_teleportation_warp_amount",
		"filter::set_filter_teleportation_warp_direction",
		"filter::set_filter_teleporter_base_amount",
		"filter::set_filter_teleporter_sprite_elapsed",
		"filter::set_filter_teleporter_sprite_opacity",
		"filter::set_filter_teleporter_sprite_seed_offset",
		"filter::set_filter_teleporter_top_reveal",
		"filter::set_filter_vehicle_damage_amount",
		"filter::set_filter_vehicle_hijack_oor_amount",
		"filter::set_filter_vehicle_hijack_oor_noblack",
		"filter::set_filter_vehicle_sun_position",
		"filter::set_filter_vision_pulse_constant",
		"filter::set_filter_water_dive_bubbles",
		"filter::set_filter_water_scuba_bubbles",
		"filter::set_filter_water_scuba_bubble_attitude",
		"filter::set_filter_water_scuba_dive_speed",
		"filter::set_filter_water_sheet_reveal",
		"filter::set_filter_water_sheet_rivulet_reveal",
		"filter::set_filter_water_sheet_speed",
		"filter::set_filter_water_wash_color",
		"filter::set_filter_water_wash_reveal_dir",
		"flag::clear",
		"flag::delay_set",
		"flag::delete",
		"flag::exists",
		"flag::get",
		"flag::get_any",
		"flag::init",
		"flag::script_flag_wait",
		"flag::set",
		"flag::set_for_time",
		"flag::toggle",
		"flag::wait_till",
		"flag::wait_till_all",
		"flag::wait_till_all_timeout",
		"flag::wait_till_any",
		"flag::wait_till_any_timeout",
		"flag::wait_till_clear",
		"flag::wait_till_clear_all",
		"flag::wait_till_clear_all_timeout",
		"flag::wait_till_clear_any",
		"flag::wait_till_clear_any_timeout",
		"flag::wait_till_clear_timeout",
		"flag::wait_till_timeout",
		"flagsys::clear",
		"flagsys::delete",
		"flagsys::get",
		"flagsys::script_flag_wait",
		"flagsys::set",
		"flagsys::set_for_time",
		"flagsys::set_val",
		"flagsys::toggle",
		"flagsys::wait_till",
		"flagsys::wait_till_all",
		"flagsys::wait_till_all_timeout",
		"flagsys::wait_till_any",
		"flagsys::wait_till_any_timeout",
		"flagsys::wait_till_clear",
		"flagsys::wait_till_clear_all",
		"flagsys::wait_till_clear_all_timeout",
		"flagsys::wait_till_clear_any",
		"flagsys::wait_till_clear_any_timeout",
		"flagsys::wait_till_clear_timeout",
		"flagsys::wait_till_timeout",
		"flashback::clone_watch_death",
		"flashback::deactivateFlashbackWarpAfterTime",
		"flashback::debug_star",
		"flashback::drop_unlinked_grenades",
		"flashback::flashbackTrailFx",
		"flashback::flashBackTrailImpact",
		"flashback::gadget_flashback_is_flickering",
		"flashback::gadget_flashback_is_inuse",
		"flashback::gadget_flashback_is_primed",
		"flashback::gadget_flashback_off",
		"flashback::gadget_flashback_on",
		"flashback::gadget_flashback_on_connect",
		"flashback::gadget_flashback_on_flicker",
		"flashback::gadget_flashback_on_give",
		"flashback::gadget_flashback_on_take",
		"flashback::gadget_flashback_spawned",
		"flashback::unlink_grenades",
		"flashback::watchClientfields",
		"flashgrenades::applyFlash",
		"flashgrenades::deleteEntOnOwnerDeath",
		"flashgrenades::flashRumbleLoop",
		"flashgrenades::init_shared",
		"flashgrenades::monitorFlash",
		"flashgrenades::monitorFlash_Internal",
		"flashgrenades::monitorRCBombFlash",
		"flashgrenades::playFlashSound",
		"floor_collapse_shared::damage_floor_watcher",
		"floor_collapse_shared::floor_collapse_init",
		"floor_collapse_shared::precache_destruct_fx",
		"floor_collapse_shared::walk_floor_watcher",
		"footsteps::buildAndCacheSoundAlias",
		"footsteps::checkSurfaceTypeIsCorrect",
		"footsteps::createSoundAliasSlot",
		"footsteps::do_foot_effect",
		"footsteps::missing_ai_footstep_callback",
		"footsteps::playAIFootstep",
		"footsteps::playerFoliage",
		"footsteps::playerJump",
		"footsteps::playerLand",
		"fx::blinky_emp_wait",
		"fx::blinky_light",
		"fx::create_effect",
		"fx::create_looper",
		"fx::create_loop_effect",
		"fx::create_loop_sound",
		"fx::create_oneshot_effect",
		"fx::create_trigger",
		"fx::get",
		"fx::GrenadeExplosionfx",
		"fx::gunfireloopfx",
		"fx::gunfireloopfxthread",
		"fx::gunfireloopfxVec",
		"fx::gunfireloopfxVecthread",
		"fx::lightning",
		"fx::loop",
		"fx::loop_sound",
		"fx::loop_stop",
		"fx::loop_thread",
		"fx::oneshot_thread",
		"fx::play",
		"fx::player_init",
		"fx::print_org",
		"fx::report_num_effects",
		"fx::set_forward_and_up_vectors",
		"fx::stop_blinky_light",
		"fx::validate",
		"FxClientUtils::PlayFxBundle",
		"FxClientUtils::StopAllFXBundles",
		"FxClientUtils::StopFxBundle",
		"gadget_camo_render::doReveal",
		"gadget_camo_render::forceOn",
		"gadget_clone_render::transition_shader",
		"gadget_roulette::on_localplayer_spawned",
		"gadget_roulette::roulette_clientfield_cb",
		"gadget_roulette::update_roulette",
		"gadget_thief::on_localplayer_spawned",
		"gadget_thief::thief_clientfield_cb",
		"gadget_thief::thief_ui_model_clientfield_cb",
		"gadget_thief::thief_weapon_option_ui_model_clientfield_cb",
		"gadget_thief::update_thief",
		"gadget_thief::update_thief_weapon",
		"gadget_vision_pulse::disableShader",
		"gadget_vision_pulse::do_reveal_enemy_pulse",
		"gadget_vision_pulse::do_vision_local_pulse",
		"gadget_vision_pulse::do_vision_world_pulse",
		"gadget_vision_pulse::gadget_visionpulse_reveal",
		"gadget_vision_pulse::on_localplayer_spawned",
		"gadget_vision_pulse::on_player_spawned",
		"gadget_vision_pulse::set_reveal_enemy",
		"gadget_vision_pulse::set_reveal_self",
		"gadget_vision_pulse::vision_pulse_changed",
		"gadget_vision_pulse::vision_pulse_owner_valid",
		"gadget_vision_pulse::watch_emped",
		"gadget_vision_pulse::watch_vision_pulse_owner_death",
		"gadget_vision_pulse::watch_world_pulse_end",
		"gameobjects::adjust_remaining_packIcons",
		"gameobjects::allow_carry",
		"gameobjects::allow_use",
		"gameobjects::can_claim",
		"gameobjects::can_contest_claim",
		"gameobjects::can_interact_with",
		"gameobjects::carry_object_prox_think",
		"gameobjects::carry_object_use_think",
		"gameobjects::clear_allowed_gameobjects",
		"gameobjects::clear_carrier",
		"gameobjects::clear_progress",
		"gameobjects::continue_hold_think_loop",
		"gameobjects::continue_trigger_touch_think",
		"gameobjects::create_carry_object",
		"gameobjects::create_pack_object",
		"gameobjects::create_use_object",
		"gameobjects::destroy_object",
		"gameobjects::disable_object",
		"gameobjects::enable_object",
		"gameobjects::entity_is_allowed",
		"gameobjects::filter_script_vehicles_from_vehicle_descriptors",
		"gameobjects::gameObjects_dropped",
		"gameobjects::gameobject_is_player_looking_at",
		"gameobjects::get_carrier",
		"gameobjects::get_claim_team",
		"gameobjects::get_earliest_claim_player",
		"gameobjects::get_enemy_team",
		"gameobjects::get_flags",
		"gameobjects::get_label",
		"gameobjects::get_next_obj_id",
		"gameobjects::get_num_touching_except_team",
		"gameobjects::get_objective_ids",
		"gameobjects::get_owner_team",
		"gameobjects::get_packIcon_offset",
		"gameobjects::get_relative_team",
		"gameobjects::get_update_teams",
		"gameobjects::get_visible_carrier_model",
		"gameobjects::ghost_visuals",
		"gameobjects::give_object",
		"gameobjects::give_pack_object",
		"gameobjects::has_key_object",
		"gameobjects::hide_icons",
		"gameobjects::hide_icon_distance_and_los",
		"gameobjects::hide_waypoint",
		"gameobjects::is_excluded",
		"gameobjects::is_friendly_team",
		"gameobjects::is_object_away_from_home",
		"gameobjects::is_relative_team",
		"gameobjects::is_team",
		"gameobjects::is_touching_any_trigger",
		"gameobjects::is_touching_any_trigger_key_value",
		"gameobjects::location_is_allowed",
		"gameobjects::main",
		"gameobjects::make_solid",
		"gameobjects::manual_drop_think",
		"gameobjects::move_visuals_to_base",
		"gameobjects::must_maintain_claim",
		"gameobjects::on_death",
		"gameobjects::on_disconnect",
		"gameobjects::on_player_last_stand",
		"gameobjects::on_player_spawned",
		"gameobjects::personal_use_bar",
		"gameobjects::pickup_object_delay",
		"gameobjects::pickup_timeout",
		"gameobjects::prox_trigger_think",
		"gameobjects::register_allowed_gameobject",
		"gameobjects::release_all_objective_ids",
		"gameobjects::release_obj_id",
		"gameobjects::return_home",
		"gameobjects::set_2d_icon",
		"gameobjects::set_3d_icon",
		"gameobjects::set_3d_icon_color",
		"gameobjects::set_3d_is_waypoint",
		"gameobjects::set_3d_use_icon",
		"gameobjects::set_can_use",
		"gameobjects::set_carrier",
		"gameobjects::set_carrier_visible",
		"gameobjects::set_carry_icon",
		"gameobjects::set_claim_team",
		"gameobjects::set_decay_time",
		"gameobjects::set_dropped",
		"gameobjects::set_drop_offset",
		"gameobjects::set_flags",
		"gameobjects::set_key_object",
		"gameobjects::set_model_visibility",
		"gameobjects::set_objective_color",
		"gameobjects::set_objective_entity",
		"gameobjects::set_owner_team",
		"gameobjects::set_pack_icon",
		"gameobjects::set_picked_up",
		"gameobjects::set_position",
		"gameobjects::set_team_use_text",
		"gameobjects::set_team_use_time",
		"gameobjects::set_use_hint_text",
		"gameobjects::set_use_text",
		"gameobjects::set_use_time",
		"gameobjects::set_visible_carrier_model",
		"gameobjects::set_visible_team",
		"gameobjects::should_be_reset",
		"gameobjects::should_ping_object",
		"gameobjects::should_show_compass_due_to_radar",
		"gameobjects::show_icons",
		"gameobjects::show_waypoint",
		"gameobjects::take_carry_weapon",
		"gameobjects::take_carry_weapon_on_death",
		"gameobjects::take_object",
		"gameobjects::take_use_weapon",
		"gameobjects::track_carrier",
		"gameobjects::trigger_touch_think",
		"gameobjects::unlink_grenades",
		"gameobjects::update_carry_object_objective_origin",
		"gameobjects::update_carry_object_origin",
		"gameobjects::update_compass_icon",
		"gameobjects::update_compass_icons",
		"gameobjects::update_current_progress",
		"gameobjects::update_icons_and_objective",
		"gameobjects::update_objective",
		"gameobjects::update_prox_bar",
		"gameobjects::update_trigger",
		"gameobjects::update_use_rate",
		"gameobjects::update_visibility_according_to_radar",
		"gameobjects::update_world_icon",
		"gameobjects::update_world_icons",
		"gameobjects::use_hold_think",
		"gameobjects::use_hold_think_loop",
		"gameobjects::use_object_locked_for_team",
		"gameobjects::use_object_onUse",
		"gameobjects::use_object_prox_think",
		"gameobjects::use_object_use_think",
		"gameobjects::WaitThenFreezePlayerControlsIfGameEndedStill",
		"gameobjects::wait_take_carry_weapon",
		"gameskill::accuracy_buildup_before_fire",
		"gameskill::accuracy_buildup_over_time_init",
		"gameskill::add_hudelm_position_internal",
		"gameskill::adjust_damage_for_player_health",
		"gameskill::adjust_melee_damage",
		"gameskill::alliesAccuracyControl",
		"gameskill::always_pain",
		"gameskill::apply_difficulty_var_with_func",
		"gameskill::apply_threat_bias_to_all_players",
		"gameskill::axisAccuracyControl",
		"gameskill::coop_allies_accuracy_scaler",
		"gameskill::coop_axis_accuracy_scaler",
		"gameskill::coop_damage_and_accuracy_scaling",
		"gameskill::coop_enemy_accuracy_scalar_watcher",
		"gameskill::coop_friendly_accuracy_scalar_watcher",
		"gameskill::coop_player_threat_bias_adjuster",
		"gameskill::cover_warning_check",
		"gameskill::create_warning_elem",
		"gameskill::DebugTakeCoverWarnings",
		"gameskill::delayed_delete",
		"gameskill::destroyHealthDebug",
		"gameskill::destroy_warning_elem",
		"gameskill::destroy_warning_elem_when_mission_failed",
		"gameskill::difficulty_pump_thread",
		"gameskill::empty_kill_func",
		"gameskill::enable_auto_adjust_threatbias",
		"gameskill::fadeFunc",
		"gameskill::fontScaler",
		"gameskill::get_base_enemy_accuracy",
		"gameskill::get_coop_enemy_accuracy_modifier",
		"gameskill::get_coop_enemy_pain_chance_modifier",
		"gameskill::get_coop_friendly_accuracy_modifier",
		"gameskill::get_coop_friendly_threat_bias_scalar",
		"gameskill::get_coop_hit_invulnerability_modifier",
		"gameskill::get_coop_player_death_invulnerable_time_modifier",
		"gameskill::get_coop_player_health_modifier",
		"gameskill::get_dog_health",
		"gameskill::get_dog_hits_before_kill",
		"gameskill::get_dog_press_time",
		"gameskill::get_enemy_pain_chance",
		"gameskill::get_general_difficulty_level",
		"gameskill::get_health_overlay_cutoff",
		"gameskill::get_locked_difficulty_val",
		"gameskill::get_long_regen_time",
		"gameskill::get_miss_time_constant",
		"gameskill::get_miss_time_distance_factor",
		"gameskill::get_miss_time_reset_delay",
		"gameskill::get_player_death_invulnerable_time",
		"gameskill::get_player_difficulty_health",
		"gameskill::get_player_health_regular_regen_delay",
		"gameskill::get_player_hit_invuln_time",
		"gameskill::get_player_threat_bias",
		"gameskill::get_player_xp_difficulty_multiplier",
		"gameskill::get_worthy_damage_ratio",
		"gameskill::grenadeAwareness",
		"gameskill::healthfadeOffWatcher",
		"gameskill::healthOverlay",
		"gameskill::healthOverlay_remove",
		"gameskill::increment_take_cover_warnings_on_death",
		"gameskill::mayChangeCoverWarningAlpha",
		"gameskill::monitor_player_death_invulnerability_eligibility",
		"gameskill::new_style_health_overlay",
		"gameskill::pain_protection",
		"gameskill::pain_protection_check",
		"gameskill::playerHealthDebug",
		"gameskill::playerHealthRegen",
		"gameskill::playerheartbeatloop",
		"gameskill::playerHurtcheck",
		"gameskill::playerInvul",
		"gameskill::player_eligible_for_death_invulnerability",
		"gameskill::play_hurt_vox",
		"gameskill::printHealthDebug",
		"gameskill::reduceTakeCoverWarnings",
		"gameskill::setDiffStructArrays",
		"gameskill::setSkill",
		"gameskill::setTakeCoverWarnings",
		"gameskill::set_difficulty_from_locked_settings",
		"gameskill::shouldShowCoverWarning",
		"gameskill::update_skill_level",
		"gameskill::update_skill_on_change",
		"gameskill::waitTillPlayerIsHitAgain",
		"gfx::getShaderConstantIndex",
		"gfx::getShaderConstantValue",
		"gfx::GetStructFieldOrZero",
		"gfx::SetStage",
		"GibClientUtils::AddGibCallback",
		"GibClientUtils::ClientEntGibAnnihilate",
		"GibClientUtils::ClientEntGibHead",
		"GibClientUtils::ClientEntGibLeftArm",
		"GibClientUtils::ClientEntGibLeftLeg",
		"GibClientUtils::ClientEntGibRightArm",
		"GibClientUtils::ClientEntGibRightLeg",
		"GibClientUtils::CreateScriptModelOfEntity",
		"GibClientUtils::GibEntity",
		"GibClientUtils::HandleGibNotetracks",
		"GibClientUtils::IsGibbed",
		"GibClientUtils::IsUndamaged",
		"GibClientUtils::PlayerGibLeftArm",
		"GibClientUtils::PlayerGibLeftLeg",
		"GibClientUtils::PlayerGibLegs",
		"GibClientUtils::PlayerGibRightArm",
		"GibClientUtils::PlayerGibRightLeg",
		"GibClientUtils::PlayerGibTag",
		"GibServerUtils::Annihilate",
		"GibServerUtils::CopyGibState",
		"GibServerUtils::GibHat",
		"GibServerUtils::GibHead",
		"GibServerUtils::GibLeftArm",
		"GibServerUtils::GibLeftLeg",
		"GibServerUtils::GibLegs",
		"GibServerUtils::GibRightArm",
		"GibServerUtils::GibRightLeg",
		"GibServerUtils::IsGibbed",
		"GibServerUtils::PlayerGibLeftArm",
		"GibServerUtils::PlayerGibLeftArmVel",
		"GibServerUtils::PlayerGibLeftLeg",
		"GibServerUtils::PlayerGibLeftLegVel",
		"GibServerUtils::PlayerGibLegs",
		"GibServerUtils::PlayerGibLegsVel",
		"GibServerUtils::PlayerGibRightArm",
		"GibServerUtils::PlayerGibRightArmVel",
		"GibServerUtils::PlayerGibRightLeg",
		"GibServerUtils::PlayerGibRightLegVel",
		"GibServerUtils::ReapplyHiddenGibPieces",
		"GibServerUtils::ShowHiddenGibPieces",
		"GibServerUtils::ToggleSpawnGibs",
		"glaive::back_to_near_owner_check",
		"glaive::back_to_owner_check",
		"glaive::check_glaive_playable_area_conditions",
		"glaive::chooseSwordAnim",
		"glaive::defaultRole",
		"glaive::glaive_AllowFriendlyFireDamage",
		"glaive::glaive_callback_damage",
		"glaive::glaive_ignore_cooldown",
		"glaive::glaive_initialize",
		"glaive::go_back_on_navvolume",
		"glaive::go_to_near_owner",
		"glaive::go_to_owner",
		"glaive::should_go_to_near_owner",
		"glaive::should_go_to_owner",
		"glaive::state_combat_enter",
		"glaive::state_combat_update",
		"glaive::state_slash_update",
		"globallogic::allDeadTeamCount",
		"globallogic::allTeamsUnderScoreLimit",
		"globallogic::anyTeamHasWaveDelay",
		"globallogic::areAllTeamsDead",
		"globallogic::assertTeamVariables",
		"globallogic::bbPlayerMatchEnd",
		"globallogic::blank",
		"globallogic::Callback_StartGameType",
		"globallogic::checkForAnyTeamForfeit",
		"globallogic::checkIfTeamForfeits",
		"globallogic::checkPlayerScoreLimitSoon",
		"globallogic::checkRoundSwitch",
		"globallogic::checkScoreLimit",
		"globallogic::checkTeamScoreLimitSoon",
		"globallogic::checkTimeLimit",
		"globallogic::compareTeamByGameStat",
		"globallogic::compareTeamByTeamScore",
		"globallogic::determineTeamWinnerByGameStat",
		"globallogic::determineTeamWinnerByTeamScore",
		"globallogic::displayGameEnd",
		"globallogic::displayRoundEnd",
		"globallogic::displayRoundSwitch",
		"globallogic::doDeadEventUpdates",
		"globallogic::doOneLeftEventUpdates",
		"globallogic::doSpawnQueueUpdates",
		"globallogic::endGame",
		"globallogic::ForceDebugHostMigration",
		"globallogic::forceEnd",
		"globallogic::gameHistoryPlayerQuit",
		"globallogic::getEndReasonText",
		"globallogic::getGameLength",
		"globallogic::getKillStreaks",
		"globallogic::getPlacementForPlayer",
		"globallogic::gracePeriod",
		"globallogic::hostIdledOut",
		"globallogic::IncrementMatchCompletionStat",
		"globallogic::init",
		"globallogic::initTeamVariables",
		"globallogic::isOnlyOneLeftAliveOnTeam",
		"globallogic::isTeamAllDead",
		"globallogic::killserverPc",
		"globallogic::listenForGameEnd",
		"globallogic::matchStartTimer",
		"globallogic::matchStartTimerSkip",
		"globallogic::notifyTeamWaveSpawn",
		"globallogic::precache_mp_leaderboards",
		"globallogic::prematchPeriod",
		"globallogic::recordZMEndGameComScoreEvent",
		"globallogic::registerDvars",
		"globallogic::registerFriendlyFireDelay",
		"globallogic::removeDisconnectedPlayerFromPlacement",
		"globallogic::resetOutcomeForAllPlayers",
		"globallogic::resetTeamVariables",
		"globallogic::roundEndDOF",
		"globallogic::roundEndWait",
		"globallogic::SetMatchCompletionStat",
		"globallogic::setTopPlayerStats",
		"globallogic::setTopTeamStats",
		"globallogic::SetupCallbacks",
		"globallogic::someoneOnEachTeam",
		"globallogic::sortDeadPlayers",
		"globallogic::startGame",
		"globallogic::startNextRound",
		"globallogic::timeLimitClock",
		"globallogic::timeLimitClock_Intermission",
		"globallogic::totalAliveCount",
		"globallogic::totalPlayerLives",
		"globallogic::updateGameEvents",
		"globallogic::updateGameTypeDvars",
		"globallogic::updatePlacement",
		"globallogic::updateRankedMatch",
		"globallogic::updateTeamPlacement",
		"globallogic::updateTeamStatus",
		"globallogic::waitForPlayers",
		"globallogic::watchMatchEndingSoon",
		"globallogic::waveSpawnTimer",
		"globallogic_actor::Callback_ActorCloned",
		"globallogic_actor::Callback_ActorDamage",
		"globallogic_actor::Callback_ActorKilled",
		"globallogic_actor::Callback_ActorSpawned",
		"globallogic_audio::actionMusicSet",
		"globallogic_audio::addGroupDialogToPlayer",
		"globallogic_audio::announceGameWinner",
		"globallogic_audio::announceRoundWinner",
		"globallogic_audio::announceTeamIsWinning",
		"globallogic_audio::doFlameAudio",
		"globallogic_audio::flushDialog",
		"globallogic_audio::flushDialogOnPlayer",
		"globallogic_audio::flushGroupDialog",
		"globallogic_audio::flushGroupDialogOnPlayer",
		"globallogic_audio::getRoundSwitchDialog",
		"globallogic_audio::init",
		"globallogic_audio::isTeamWinning",
		"globallogic_audio::leaderDialog",
		"globallogic_audio::leaderDialogAllTeams",
		"globallogic_audio::leaderDialogForOtherTeams",
		"globallogic_audio::leaderDialogOnPlayer",
		"globallogic_audio::musicController",
		"globallogic_audio::musicTimesOut",
		"globallogic_audio::playLeaderDialogOnPlayer",
		"globallogic_audio::play_2d_on_team",
		"globallogic_audio::post_match_snapshot_watcher",
		"globallogic_audio::registerDialogGroup",
		"globallogic_audio::return_music_state_player",
		"globallogic_audio::return_music_state_team",
		"globallogic_audio::set_music_on_player",
		"globallogic_audio::set_music_on_team",
		"globallogic_audio::set_next_music_state",
		"globallogic_audio::sndStartMusicSystem",
		"globallogic_audio::suspenseMusic",
		"globallogic_audio::suspenseMusicForPlayer",
		"globallogic_audio::testDialogQueue",
		"globallogic_audio::waitForSound",
		"globallogic_defaults::default_getTimeLimit",
		"globallogic_defaults::default_onAliveCountChange",
		"globallogic_defaults::default_onDeadEvent",
		"globallogic_defaults::default_onForfeit",
		"globallogic_defaults::default_onOneLeftEvent",
		"globallogic_defaults::default_onRoundEndGame",
		"globallogic_defaults::default_onScoreLimit",
		"globallogic_defaults::default_onSpawnIntermission",
		"globallogic_defaults::default_onSpawnSpectator",
		"globallogic_defaults::default_onTimeLimit",
		"globallogic_defaults::getWinningTeamFromLoser",
		"globallogic_player::allowedAssistWeapon",
		"globallogic_player::ArrayToString",
		"globallogic_player::Callback_PlayerConnect",
		"globallogic_player::Callback_PlayerDamage",
		"globallogic_player::Callback_PlayerDisconnect",
		"globallogic_player::Callback_PlayerKilled",
		"globallogic_player::Callback_PlayerLastStand",
		"globallogic_player::Callback_PlayerMelee",
		"globallogic_player::Callback_PlayerMigrated",
		"globallogic_player::chooseNextBestNemesis",
		"globallogic_player::createDeadBody",
		"globallogic_player::custom_gamemodes_modified_damage",
		"globallogic_player::damageShellshockAndRumble",
		"globallogic_player::delayStartRagdoll",
		"globallogic_player::doDamageFeedback",
		"globallogic_player::doPerkFeedBack",
		"globallogic_player::figureOutAttacker",
		"globallogic_player::figureOutFriendlyFire",
		"globallogic_player::figureOutWeapon",
		"globallogic_player::finishPlayerDamageWrapper",
		"globallogic_player::freezePlayerForRoundEnd",
		"globallogic_player::getClosestKillcamEntity",
		"globallogic_player::getKillcamEntity",
		"globallogic_player::giveAttackerAndInflictorOwnerAssist",
		"globallogic_player::IgnoreTeamKills",
		"globallogic_player::inform_clientvm_of_migration",
		"globallogic_player::isAIKillstreakDamage",
		"globallogic_player::isPlayerImmuneToKillstreak",
		"globallogic_player::isTacticalHitMarker",
		"globallogic_player::is_explosive_ragdoll",
		"globallogic_player::notifyConnecting",
		"globallogic_player::playKillBattleChatter",
		"globallogic_player::recordActivePlayersEndGameMatchRecordStats",
		"globallogic_player::recordZMEndGameComScoreEventForPlayer",
		"globallogic_player::reduceTeamKillsOverTime",
		"globallogic_player::resetAttackerList",
		"globallogic_player::ShouldTeamKillKick",
		"globallogic_player::spectate_player_watcher",
		"globallogic_player::start_explosive_ragdoll",
		"globallogic_player::TeamKillDelay",
		"globallogic_player::TeamKillKick",
		"globallogic_player::trackAttackerDamage",
		"globallogic_player::updateAttacker",
		"globallogic_player::updateGlobalBotKilledCounter",
		"globallogic_player::updateInflictor",
		"globallogic_player::updateMeansOfDeath",
		"globallogic_player::updateWeapon",
		"globallogic_player::WaitTillKillStreakDone",
		"globallogic_score::areTeamArraysEqual",
		"globallogic_score::backupAndClearWinStreaks",
		"globallogic_score::default_isKillBoosting",
		"globallogic_score::default_onPlayerScore",
		"globallogic_score::default_onTeamScore",
		"globallogic_score::getHighestScoringPlayer",
		"globallogic_score::getHighestTeamScoreTeam",
		"globallogic_score::getPersStat",
		"globallogic_score::giveKillStats",
		"globallogic_score::giveMatchBonus",
		"globallogic_score::givePlayerMomentumNotification",
		"globallogic_score::givePlayerScore",
		"globallogic_score::givePlayerXPDisplay",
		"globallogic_score::giveTeamScore",
		"globallogic_score::giveTeamScoreForObjective",
		"globallogic_score::incKillstreakTracker",
		"globallogic_score::incPersStat",
		"globallogic_score::incTotalKills",
		"globallogic_score::initPersStat",
		"globallogic_score::onTeamScore",
		"globallogic_score::processAssist",
		"globallogic_score::processShieldAssist",
		"globallogic_score::resetAllScores",
		"globallogic_score::resetPlayerMomentumOnDeath",
		"globallogic_score::resetPlayerScores",
		"globallogic_score::resetScoreChain",
		"globallogic_score::resetTeamScores",
		"globallogic_score::restoreWinStreaks",
		"globallogic_score::roundToNearestFive",
		"globallogic_score::scoreChainTimer",
		"globallogic_score::setInflictorStat",
		"globallogic_score::setPlayerMomentumDebug",
		"globallogic_score::threadedRecordPlayerStats",
		"globallogic_score::trackAttackeeDeath",
		"globallogic_score::trackAttackerKill",
		"globallogic_score::updateAllTeamScores",
		"globallogic_score::updateLossStats",
		"globallogic_score::updateMatchBonusScores",
		"globallogic_score::updateTeamScores",
		"globallogic_score::updateTieStats",
		"globallogic_score::updateWinLossStats",
		"globallogic_score::updateWinStats",
		"globallogic_score::xpRateThread",
		"globallogic_spawn::allTeamsHaveExisted",
		"globallogic_spawn::allTeamsNearScoreLimit",
		"globallogic_spawn::default_spawnMessage",
		"globallogic_spawn::forceSpawn",
		"globallogic_spawn::giveLoadoutLevelSpecific",
		"globallogic_spawn::giveStartLoadout",
		"globallogic_spawn::in_spawnSpectator",
		"globallogic_spawn::kickIfDontSpawn",
		"globallogic_spawn::kickIfIDontSpawnInternal",
		"globallogic_spawn::kickWait",
		"globallogic_spawn::maySpawn",
		"globallogic_spawn::respawn_asSpectator",
		"globallogic_spawn::setSpawnVariables",
		"globallogic_spawn::setThirdPerson",
		"globallogic_spawn::shouldShowRespawnMessage",
		"globallogic_spawn::showSpawnMessage",
		"globallogic_spawn::spawnClient",
		"globallogic_spawn::spawnIntermission",
		"globallogic_spawn::spawnInterRoundIntermission",
		"globallogic_spawn::spawnPlayer",
		"globallogic_spawn::spawnPlayerPrediction",
		"globallogic_spawn::spawnQueuedClient",
		"globallogic_spawn::spawnQueuedClientOnTeam",
		"globallogic_spawn::spawnSpectator",
		"globallogic_spawn::spectatorThirdPersonness",
		"globallogic_spawn::stopPoisoningAndFlareOnSpawn",
		"globallogic_spawn::TimeUntilSpawn",
		"globallogic_spawn::TimeUntilWaveSpawn",
		"globallogic_spawn::waitAndSpawnClient",
		"globallogic_spawn::waitInSpawnQueue",
		"globallogic_spawn::waitRespawnOrSafeSpawnButton",
		"globallogic_ui::beginClassChoice",
		"globallogic_ui::closeMenus",
		"globallogic_ui::freeGameplayHudElems",
		"globallogic_ui::getSplitscreenTeam",
		"globallogic_ui::menuAutoAssign",
		"globallogic_ui::menuClass",
		"globallogic_ui::menuSpectator",
		"globallogic_ui::menuTeam",
		"globallogic_ui::pickTeamFromScores",
		"globallogic_ui::removeSpawnMessageShortly",
		"globallogic_ui::SetupCallbacks",
		"globallogic_ui::showMainMenuForTeam",
		"globallogic_ui::teamPlayerCountsEqual",
		"globallogic_ui::teamScoresEqual",
		"globallogic_ui::teamWithLowestPlayerCount",
		"globallogic_ui::teamWithLowestScore",
		"globallogic_ui::updateObjectiveText",
		"globallogic_utils::assertProperPlacement",
		"globallogic_utils::debugLine",
		"globallogic_utils::executePostRoundEvents",
		"globallogic_utils::gameTimer",
		"globallogic_utils::getEstimatedTimeUntilScoreLimit",
		"globallogic_utils::getHitLocHeight",
		"globallogic_utils::getScorePerMinute",
		"globallogic_utils::getScoreRemaining",
		"globallogic_utils::getTimePassed",
		"globallogic_utils::getTimeRemaining",
		"globallogic_utils::getValueInRange",
		"globallogic_utils::isExcluded",
		"globallogic_utils::isHeadShot",
		"globallogic_utils::isValidClass",
		"globallogic_utils::logTeamWinString",
		"globallogic_utils::pauseTimer",
		"globallogic_utils::playTickingSound",
		"globallogic_utils::registerPostRoundEvent",
		"globallogic_utils::resumeTimer",
		"globallogic_utils::rumbler",
		"globallogic_utils::stopTickingSound",
		"globallogic_utils::testHPs",
		"globallogic_utils::testMenu",
		"globallogic_utils::testShock",
		"globallogic_utils::timeUntilRoundEnd",
		"globallogic_utils::waitForTimeOrNotifies",
		"globallogic_utils::waitForTimeOrNotify",
		"globallogic_utils::waitForTimeOrNotifyNoArtillery",
		"globallogic_vehicle::AllowFriendlyFireDamage",
		"globallogic_vehicle::Callback_VehicleDamage",
		"globallogic_vehicle::Callback_VehicleKilled",
		"globallogic_vehicle::Callback_VehicleRadiusDamage",
		"globallogic_vehicle::Callback_VehicleSpawned",
		"globallogic_vehicle::GetVehicleUnderneathSplashScalar",
		"globallogic_vehicle::vehicleCrush",
		"global_fx::check_for_wind_override",
		"global_fx::main",
		"global_fx::wind_initial_setting",
		"grapple::can_see",
		"grapple::clear_lockon_after_grapple",
		"grapple::get_a_target",
		"grapple::get_target_lock_on_origin",
		"grapple::get_target_score",
		"grapple::get_target_type_score",
		"grapple::inside_screen_angles",
		"grapple::inside_screen_crosshair_radius",
		"grapple::inside_screen_lockon_radius",
		"grapple::inside_screen_radius",
		"grapple::is_valid_target",
		"grapple::pick_a_target_from",
		"grapple::place_dummy_target",
		"grapple::trace",
		"grapple::translate_notify_1",
		"grapple::watch_for_grapple",
		"grapple::watch_lockon",
		"grapple::watch_lockon_angles",
		"hackable::add_hackable_object",
		"hackable::cleanup_hackable_objects",
		"hackable::complete_hacking_object",
		"hackable::continue_hacking_object",
		"hackable::fail_hacking_object",
		"hackable::filter_deleted",
		"hackable::find_hackable_object",
		"hackable::init",
		"hackable::is_object_hackable",
		"hackable::on_player_connect",
		"hackable::remove_hackable_object",
		"hackable::set_hacked_ent",
		"hackable::start_hacking_object",
		"hackable::watch_timeout",
		"hacker::gadget_hacker_flicker",
		"hacker::gadget_hacker_is_flickering",
		"hacker::gadget_hacker_is_inuse",
		"hacker::gadget_hacker_off",
		"hacker::gadget_hacker_on",
		"hacker::gadget_hacker_on_connect",
		"hacker::gadget_hacker_on_flicker",
		"hacker::gadget_hacker_on_give",
		"hacker::gadget_hacker_on_take",
		"hacker::hack_things",
		"hacker::set_gadget_status",
		"hacker_tool::canTargetEntity",
		"hacker_tool::clearHackerTarget",
		"hacker_tool::getBestHackerToolTarget",
		"hacker_tool::getHackerToolInnerRadius",
		"hacker_tool::getHackerToolOuterRadius",
		"hacker_tool::getHackOuterTime",
		"hacker_tool::getHackTime",
		"hacker_tool::getLockOnTime",
		"hacker_tool::getWeaponObjectHackerRadius",
		"hacker_tool::getWeaponObjectHackTimeMs",
		"hacker_tool::hackerSoftSightTest",
		"hacker_tool::hackerToolTargetLoop",
		"hacker_tool::hackingTimeNoLineOfSightScale",
		"hacker_tool::hackingTimeScale",
		"hacker_tool::init_shared",
		"hacker_tool::isEntityHackableCarePackage",
		"hacker_tool::isEntityHackableWeaponObject",
		"hacker_tool::isEntityPreviouslyHacked",
		"hacker_tool::isValidHackerToolTarget",
		"hacker_tool::isWithinHackerToolReticle",
		"hacker_tool::on_localplayer_spawned",
		"hacker_tool::on_player_spawned",
		"hacker_tool::player_hacking",
		"hacker_tool::playHackerToolSoundLoop",
		"hacker_tool::registerWithHackerTool",
		"hacker_tool::stopHackerToolSoundLoop",
		"hacker_tool::tunables",
		"hacker_tool::watchForEMP",
		"hacker_tool::watchForGrenadeFire",
		"hacker_tool::watchHackableEntityDeath",
		"hacker_tool::watchHackerPlayerShutdown",
		"hacker_tool::watchHackerToolEnd",
		"hacker_tool::watchHackerToolFired",
		"hacker_tool::watchHackerToolInterrupt",
		"hacker_tool::watchHackerToolUse",
		"hacker_tool::watchHackSpeed",
		"hacker_tool::watchTargetEntityUpdate",
		"hacker_tool::watchTargetHack",
		"heatseekingmissile::CalcLockOnLossRadius",
		"heatseekingmissile::CalcLockOnRadius",
		"heatseekingmissile::ClearIRTarget",
		"heatseekingmissile::debug_missile",
		"heatseekingmissile::debug_tracker",
		"heatseekingmissile::DestroyLockOnCanceledMessage",
		"heatseekingmissile::DisplayLockOnCanceledMessage",
		"heatseekingmissile::GetBestStingerTarget",
		"heatseekingmissile::InitLockField",
		"heatseekingmissile::init_shared",
		"heatseekingmissile::InsideStingerReticleDetect",
		"heatseekingmissile::InsideStingerReticleLocked",
		"heatseekingmissile::InsideStingerReticleNoLock",
		"heatseekingmissile::IsStillValidTarget",
		"heatseekingmissile::LockedOn",
		"heatseekingmissile::LockingOn",
		"heatseekingmissile::LockSightTest",
		"heatseekingmissile::LoopLocalLockSound",
		"heatseekingmissile::LoopLocalSeekSound",
		"heatseekingmissile::MissileTarget_DeployFlares",
		"heatseekingmissile::MissileTarget_HandleIncomingMissile",
		"heatseekingmissile::MissileTarget_isMissileIncoming",
		"heatseekingmissile::MissileTarget_isOtherPlayerMissileIncoming",
		"heatseekingmissile::MissileTarget_LockOnMonitor",
		"heatseekingmissile::MissileTarget_PlayFlareFx",
		"heatseekingmissile::MissileTarget_ProximityDetonate",
		"heatseekingmissile::MissileTarget_ProximityDetonateIncomingMissile",
		"heatseekingmissile::on_player_spawned",
		"heatseekingmissile::PlayerStingerAds",
		"heatseekingmissile::PlaySoundForLocalPlayer",
		"heatseekingmissile::RatioDistanceFromScreenCenter",
		"heatseekingmissile::setFriendlyFlags",
		"heatseekingmissile::setFriendlyHacking",
		"heatseekingmissile::setFriendlyTargetLocked",
		"heatseekingmissile::setFriendlyTargetting",
		"heatseekingmissile::SoftSightTest",
		"heatseekingmissile::StingerFiredNotify",
		"heatseekingmissile::StingerIRTLoop",
		"heatseekingmissile::StingerToggleLoop",
		"heatseekingmissile::StingerWaitForAds",
		"heatseekingmissile::TargetingHacking",
		"heatseekingmissile::TargetWithinRangeOfPlaySpace",
		"heatseekingmissile::watchClearHacking",
		"heatseekingmissile::watchClearLockedOn",
		"heatseekingmissile::watchClearLockingOn",
		"heat_wave::apply_burn",
		"heat_wave::gadget_heat_wave_flicker",
		"heat_wave::gadget_heat_wave_is_flickering",
		"heat_wave::gadget_heat_wave_is_inuse",
		"heat_wave::gadget_heat_wave_on_activate",
		"heat_wave::gadget_heat_wave_on_connect",
		"heat_wave::gadget_heat_wave_on_deactivate",
		"heat_wave::gadget_heat_wave_on_flicker",
		"heat_wave::gadget_heat_wave_on_give",
		"heat_wave::gadget_heat_wave_on_player_spawn",
		"heat_wave::gadget_heat_wave_on_take",
		"heat_wave::heat_wave_burn_entities",
		"heat_wave::heat_wave_burn_sound",
		"heat_wave::heat_wave_damage_entities",
		"heat_wave::heat_wave_damage_projectiles",
		"heat_wave::heat_wave_fx",
		"heat_wave::heat_wave_fx_cleanup",
		"heat_wave::heat_wave_setup",
		"heat_wave::heat_wave_think",
		"heat_wave::heat_wave_trace_entity",
		"heat_wave::heat_wave_update_rumble",
		"heat_wave::is_entity_valid",
		"heat_wave::projectileExplode",
		"heat_wave::set_gadget_status",
		"heat_wave::toggle_activate_clientfields",
		"heat_wave::updateDvars",
		"heat_wave::update_last_burned_by",
		"heat_wave::watch_burn_clear",
		"heat_wave::watch_entity_shutdown",
		"hive_gun::cleanup_killcam_entity",
		"hive_gun::createFireflyPodWatcher",
		"hive_gun::end_damage_effects",
		"hive_gun::fireflies_attacking",
		"hive_gun::fireflies_chasing",
		"hive_gun::firefly_attack",
		"hive_gun::firefly_attacking",
		"hive_gun::firefly_chase",
		"hive_gun::firefly_check_for_collisions",
		"hive_gun::firefly_check_move",
		"hive_gun::firefly_damage_target",
		"hive_gun::firefly_death",
		"hive_gun::firefly_deploying",
		"hive_gun::firefly_dieing",
		"hive_gun::firefly_hunting",
		"hive_gun::firefly_init",
		"hive_gun::firefly_killcam_move",
		"hive_gun::firefly_killcam_stop",
		"hive_gun::firefly_link_attacking",
		"hive_gun::firefly_move",
		"hive_gun::firefly_mover_damage",
		"hive_gun::firefly_partial_move",
		"hive_gun::firefly_pod_destroyed",
		"hive_gun::firefly_pod_detonate",
		"hive_gun::firefly_pod_random_movement",
		"hive_gun::firefly_pod_random_point",
		"hive_gun::firefly_pod_release_fireflies",
		"hive_gun::firefly_pod_rotated_point",
		"hive_gun::firefly_pod_should_damage",
		"hive_gun::firefly_pod_start",
		"hive_gun::firefly_rotate",
		"hive_gun::firefly_spyrograph_patrol",
		"hive_gun::firefly_state_change",
		"hive_gun::firefly_watch_for_game_ended",
		"hive_gun::firefly_watch_for_target_death",
		"hive_gun::firefly_watch_fx_finished",
		"hive_gun::getOtherTeam",
		"hive_gun::get_attack_speed",
		"hive_gun::get_crumb_position",
		"hive_gun::get_target_bread_crumb",
		"hive_gun::gib_corpse",
		"hive_gun::gib_fx",
		"hive_gun::init_shared",
		"hive_gun::kill_firefly_mover",
		"hive_gun::on_damage_firefly_pod",
		"hive_gun::on_shutdown",
		"hive_gun::on_spawn_firefly_pod",
		"hive_gun::register",
		"hive_gun::spawn_firefly_mover",
		"hive_gun::start_damage_effects",
		"hive_gun::stop_effects",
		"hive_gun::stop_player_fx",
		"hive_gun::target_bread_crumbs",
		"hive_gun::target_bread_crumbs_render",
		"hive_gun::update_dvars",
		"hive_gun::watch_for_death",
		"hive_gun::watch_for_gib_notetracks",
		"hive_gun::watch_player_fx_finished",
		"hostmigration::Callback_HostMigration",
		"hostmigration::Callback_HostMigrationSave",
		"hostmigration::Callback_PreHostMigrationSave",
		"hostmigration::debug_script_structs",
		"hostmigration::find_alternate_player_place",
		"hostmigration::hostMigrationTimerThink",
		"hostmigration::hostMigrationTimerThink_Internal",
		"hostmigration::hostMigrationWait",
		"hostmigration::hostMigrationWaitForPlayers",
		"hostmigration::hostmigration_put_player_in_better_place",
		"hostmigration::host_migration_respawn",
		"hostmigration::lockTimer",
		"hostmigration::matchStartBlacscreen",
		"hostmigration::matchStartTimerConsole",
		"hostmigration::matchStartTimerConsole_Internal",
		"hostmigration::MigrationAwareWait",
		"hostmigration::pauseTimer",
		"hostmigration::post_migration_become_vulnerable",
		"hostmigration::post_migration_invulnerability",
		"hostmigration::resumeTimer",
		"hostmigration::UpdateTimerPausedness",
		"hostmigration::waitLongDurationWithGameEndTimeUpdate",
		"hostmigration::waitLongDurationWithHostMigrationPause",
		"hostmigration::waitLongDurationWithHostMigrationPauseEMP",
		"hostmigration::waittillHostMigrationCountDown",
		"hostmigration::waitTillHostMigrationDone",
		"hostmigration::waitTillHostMigrationStarts",
		"hud::addChild",
		"hud::createBar",
		"hud::createClientTimer",
		"hud::createFontString",
		"hud::createIcon",
		"hud::createLoadoutIcon",
		"hud::createLoadoutText",
		"hud::createPrimaryProgressBar",
		"hud::createPrimaryProgressBarText",
		"hud::createSecondaryProgressBar",
		"hud::createSecondaryProgressBarText",
		"hud::createServerBar",
		"hud::createServerFontString",
		"hud::createServerIcon",
		"hud::createServerTimer",
		"hud::createTeamProgressBar",
		"hud::createTeamProgressBarText",
		"hud::destroyElem",
		"hud::fade_to_black_for_x_sec",
		"hud::flashThread",
		"hud::font_pulse",
		"hud::font_pulse_init",
		"hud::getCurrentFraction",
		"hud::getParent",
		"hud::hideElem",
		"hud::hideKillstreak",
		"hud::hideLoadoutAttribute",
		"hud::hidePerk",
		"hud::init",
		"hud::removeChild",
		"hud::screen_fade_in",
		"hud::setFlashFrac",
		"hud::setGamemodeInfoPoint",
		"hud::setHeight",
		"hud::setIconShader",
		"hud::setLoadoutIconCoords",
		"hud::setLoadoutTextCoords",
		"hud::setParent",
		"hud::setPoint",
		"hud::setPointBar",
		"hud::setSize",
		"hud::setWidth",
		"hud::showElem",
		"hud::showKillstreak",
		"hud::showLoadoutAttribute",
		"hud::showPerk",
		"hud::showPerks",
		"hud::updateBar",
		"hud::updateBarScale",
		"hud::updateChildren",
		"hud_message::canReadText",
		"hud_message::clearShoutcasterWaitingMessage",
		"hud_message::destroyHudElem",
		"hud_message::hintMessage",
		"hud_message::hintMessageDeathThink",
		"hud_message::hintMessagePlayers",
		"hud_message::init",
		"hud_message::initCustomGametypeHeader",
		"hud_message::initNotifyMessage",
		"hud_message::isInTop",
		"hud_message::lowerMessageThink",
		"hud_message::notifyMessage",
		"hud_message::oldNotifyMessage",
		"hud_message::on_player_connect",
		"hud_message::on_player_disconnect",
		"hud_message::outcomeNotify",
		"hud_message::playNotifyLoop",
		"hud_message::resetNotify",
		"hud_message::resetOnCancel",
		"hud_message::resetOnDeath",
		"hud_message::resetOutcomeNotify",
		"hud_message::resetWagerOutcomeNotify",
		"hud_message::setMatchScoreHUDElemForTeam",
		"hud_message::setShoutcasterWaitingMessage",
		"hud_message::showInitialFactionPopup",
		"hud_message::showNotifyMessage",
		"hud_message::teamOutcomeNotify",
		"hud_message::teamOutcomeNotifyZombie",
		"hud_message::teamWagerOutcomeNotify",
		"hud_message::updateOutcome",
		"hud_message::updateWagerOutcome",
		"hud_message::wagerOutcomeNotify",
		"hud_message::waitRequireVisibility",
		"hud_message::waitTillNotifiesDone",
		"HumanClientUtils::facialDialogueHandler",
		"HumanInterface::RegisterHumanInterfaceAttributes",
		"HumanRiotshieldBehavior::RegisterBehaviorScriptFunctions",
		"HumanRiotshieldInterface::RegisterHumanRiotshieldInterfaceAttributes",
		"HumanRiotshieldServerUtils::humanRiotshieldSpawnSetup",
		"HumanRpgBehavior::RegisterBehaviorScriptFunctions",
		"HumanRpgInterface::RegisterHumanRpgInterfaceAttributes",
		"HumanSoldierServerUtils::cqbAttributeCallback",
		"HumanSoldierServerUtils::forceTacticalWalkCallback",
		"HumanSoldierServerUtils::moveModeAttributeCallback",
		"HumanSoldierServerUtils::UseAnimationOverrideCallback",
		"HumanSoldierServerUtils::VignetteModeCallback",
		"hunter::Attack_Thread_MainTurret",
		"hunter::Attack_Thread_rocket",
		"hunter::defaultRole",
		"hunter::Delay_Target_ToEnemy_Thread",
		"hunter::disable_turrets",
		"hunter::enable_turrets",
		"hunter::getEnemyArray",
		"hunter::GetNextMovePosition_tactical",
		"hunter::get_enemies_in_view",
		"hunter::HunterCallback_VehicleDamage",
		"hunter::hunter_blink_lights",
		"hunter::hunter_collision_player",
		"hunter::hunter_emped",
		"hunter::hunter_exit_vehicle",
		"hunter::hunter_fire_one_missile",
		"hunter::hunter_frontScanning",
		"hunter::hunter_initialize",
		"hunter::hunter_initTagArrays",
		"hunter::hunter_level_out_for_landing",
		"hunter::hunter_lockon_fx",
		"hunter::hunter_pain_explosive_weakspot",
		"hunter::hunter_pain_for_time",
		"hunter::hunter_pain_small",
		"hunter::hunter_pain_weakspot",
		"hunter::hunter_scanner_ClearLookTarget",
		"hunter::hunter_scanner_init",
		"hunter::hunter_scanner_SetTargetEntity",
		"hunter::hunter_scanner_SetTargetPosition",
		"hunter::hunter_scripted",
		"hunter::hunter_self_destruct",
		"hunter::hunter_SpawnDrones",
		"hunter::hunter_temp_bullet_shield",
		"hunter::hunter_update_rumble",
		"hunter::is_point_in_view",
		"hunter::is_valid_target",
		"hunter::kill_drones",
		"hunter::Movement_Thread_StayInDistance",
		"hunter::Movement_Thread_Wander",
		"hunter::player_fire_update_rocket",
		"hunter::player_fire_update_side_turret_1",
		"hunter::player_fire_update_side_turret_2",
		"hunter::RegisterInterfaceAttributes",
		"hunter::remote_missile_life",
		"hunter::shut_off_fx",
		"hunter::side_turrets_forward",
		"hunter::side_turret_get_best_target",
		"hunter::state_combat_enter",
		"hunter::state_combat_exit",
		"hunter::state_combat_update",
		"hunter::state_death_enter",
		"hunter::state_death_update",
		"hunter::state_strafe_enter",
		"hunter::state_strafe_exit",
		"hunter::state_strafe_update",
		"hunter::state_unaware_enter",
		"hunter::state_unaware_exit",
		"hunter::state_unaware_update",
		"hunter::wait_and_do_death",
		"init::AddToMissiles",
		"init::beginGrenadeTracking",
		"init::checkApproachAngles",
		"init::DoNothing",
		"init::endOnDeath",
		"init::end_script",
		"init::firstInit",
		"init::getExitSplitTime",
		"init::getTransSplitTime",
		"init::globalGrenadeLauncherTracking",
		"init::globalGrenadeTracking",
		"init::globalMissileTracking",
		"init::grenade_earthQuake",
		"init::initWeapon",
		"init::main",
		"init::onPlayerConnect",
		"init::setNameAndRank",
		"init::setNextPlayerGrenadeTime",
		"init::set_anim_playback_rate",
		"init::trackVelocity",
		"killcam::get_killcam_entity_start_time",
		"killcam::store_killcam_entity_on_entity",
		"killstreaks::DestroyActiveVehicles",
		"killstreaks::DestroyEntities",
		"killstreaks::DestroyEquipment",
		"killstreaks::DestroyNeutralGameplayVehicles",
		"killstreaks::DestroyOtherTeamsActiveVehicles",
		"killstreaks::DestroyOtherTeamsEquipment",
		"killstreaks::DestroyTacticalInsertions",
		"killstreaks::EMP_IsEMPd",
		"killstreaks::get_killstreak_weapon",
		"killstreaks::HasSatellite",
		"killstreaks::HasUav",
		"killstreaks::isHeldInventoryKillstreakWeapon",
		"killstreaks::is_killstreak_weapon",
		"killstreaks::is_weapon_associated_with_killstreak",
		"killstreaks::switch_to_last_non_killstreak_weapon",
		"killstreaks::WaitForTimecheck",
		"killstreaks::WaitTillEMP",
		"laststand::cleanup_laststand_on_disconnect",
		"laststand::cleanup_suicide_hud",
		"laststand::clean_up_suicide_hud_on_bled_out",
		"laststand::clean_up_suicide_hud_on_end_game",
		"laststand::drawcylinder",
		"laststand::get_lives_remaining",
		"laststand::is_facing",
		"laststand::laststand_allowed",
		"laststand::laststand_getup_damage_watcher",
		"laststand::laststand_getup_hud",
		"laststand::laststand_getup_hud_destroy",
		"laststand::player_all_players_in_laststand",
		"laststand::player_any_player_in_laststand",
		"laststand::player_getup_setup",
		"laststand::player_is_in_laststand",
		"laststand::player_num_in_laststand",
		"laststand::revive_hud_create",
		"laststand::revive_hud_show",
		"laststand::revive_hud_show_n_fade",
		"laststand::update_lives_remaining",
		"lightninggun::create_killcam_entity",
		"lightninggun::init_shared",
		"lightninggun::killcam_move",
		"lightninggun::lightninggun_arc",
		"lightninggun::lightninggun_arc_fx",
		"lightninggun::lightninggun_arc_killcam",
		"lightninggun::lightninggun_damage_response",
		"lightninggun::lightninggun_find_arc_targets",
		"lightninggun::lightninggun_start_damage_effects",
		"lightninggun::on_damage_lightninggun",
		"lightninggun::update_dvars",
		"lightning_chain::arc_damage",
		"lightning_chain::arc_damage_ent",
		"lightning_chain::create_lightning_chain_params",
		"lightning_chain::init",
		"lightning_chain::lc_play_arc_fx",
		"lightning_chain::lc_play_death_fx",
		"lightning_chain::lc_shock_fx",
		"load::add_cleanup_msg",
		"load::all_players_spawned",
		"load::art_review",
		"load::ascii_logo",
		"load::badplace_think",
		"load::calculate_map_center",
		"load::client_notify_listener",
		"load::count_network_frames",
		"load::explosive_arrow_death_indicator_hudelement",
		"load::explosive_dart_death_indicator_hudelement",
		"load::explosive_nitrogen_tank_death_indicator_hudelement",
		"load::explosive_vehice_death_indicator_hudelement",
		"load::first_frame",
		"load::footsteps",
		"load::grenade_death_indicator_hudelement",
		"load::grenade_death_indicator_hudelement_cleanup",
		"load::grenade_death_text_hudelement",
		"load::indicate_start",
		"load::keep_time",
		"load::lerp_trigger_dvar_value",
		"load::levelNotifyHandler",
		"load::level_notify_listener",
		"load::link_ents",
		"load::load_checkpoint_on_notify",
		"load::main",
		"load::map_is_early_in_the_game",
		"load::on_spawned",
		"load::playerDamageRumble",
		"load::player_special_death_hint",
		"load::player_throwgrenade_timer",
		"load::register_clientfields",
		"load::save_checkpoint_on_notify",
		"load::server_time",
		"load::setup_traversals",
		"load::set_fog_progress",
		"load::set_objective_text_colors",
		"load::shock_ondeath",
		"load::shock_onexplosion",
		"load::shock_onpain",
		"load::special_death_death_indicator_hudelement_cleanup",
		"load::special_death_indicator_hudelement",
		"load::start_intro_screen_zm",
		"load::t7_cleanup_output",
		"load::warnMissileFired",
		"load::warnMissileLocked",
		"load::warnMissileLocking",
		"load::water_think",
		"load::weapon_ammo",
		"loadout::getLoadoutItemFromDDLStats",
		"loadout::initWeaponAttachments",
		"loadout::is_item_excluded",
		"loadout::is_warlord_perk",
		"lui::addMenuExploders",
		"lui::client_menus",
		"lui::createCameraMenu",
		"lui::createCustomCameraMenu",
		"lui::createCustomExtraCamXCamData",
		"lui::createExtraCamXCamData",
		"lui::getCharacterDataForMenu",
		"lui::initMenuData",
		"lui::linkToCustomCharacter",
		"lui::on_player_connect",
		"lui::open_generic_script_dialog",
		"lui::open_script_dialog",
		"lui::play_animation",
		"lui::play_movie",
		"lui::play_movie_with_timeout",
		"lui::prime_movie",
		"lui::screen_close_menu",
		"lui::screen_fade",
		"lui::screen_fade_in",
		"lui::screen_fade_out",
		"lui::screen_flash",
		"lui::setup_menu",
		"lui::set_color",
		"lui::set_global",
		"lui::set_value_for_player",
		"lui::timer",
		"MannequinBehavior::mannequinCollisionService",
		"MannequinBehavior::mannequinSpawnSetup",
		"MannequinInterface::RegisterMannequinInterfaceAttributes",
		"MargwaBehavior::AddDirectHitWeapon",
		"MargwaBehavior::margwaReactIDGunTerminate",
		"MargwaBehavior::margwaReactStunTerminate",
		"MargwaBehavior::margwaShouldSmashAttack",
		"MargwaBehavior::margwaShouldSwipeAttack",
		"MargwaBehavior::margwaSmashAttackTerminate",
		"MargwaBehavior::margwaSwipeAttackStart",
		"MargwaBehavior::margwaTeleportInTerminate",
		"MargwaClientUtils::margwaProcessFootstep",
		"MargwaServerUtils::margwaCanDamageAnyHead",
		"MargwaServerUtils::margwaCanDamageHead",
		"MargwaServerUtils::margwaDamage",
		"MargwaServerUtils::margwaEnableStun",
		"MargwaServerUtils::margwaForceSprint",
		"MargwaServerUtils::margwaKillHead",
		"MargwaServerUtils::margwaSetGoal",
		"MargwaServerUtils::margwaSetHeadHealth",
		"MargwaServerUtils::margwaTell",
		"MargwaServerUtils::shouldUpdateJaw",
		"MargwaServerUtils::show_hit_marker",
		"math::angle_dif",
		"math::array_average",
		"math::array_std_deviation",
		"math::clamp",
		"math::closest_point_on_line",
		"math::cointoss",
		"math::expand_maxs",
		"math::expand_mins",
		"math::find_box_center",
		"math::get_2d_yaw",
		"math::get_dot_direction",
		"math::get_dot_forward",
		"math::get_dot_from_eye",
		"math::get_dot_right",
		"math::get_dot_up",
		"math::lag",
		"math::linear_map",
		"math::pow",
		"math::randomSign",
		"math::random_normal_distribution",
		"math::random_vector",
		"math::sign",
		"math::vector_compare",
		"math::vec_to_angles",
		"MechzBehavior::mechzGoBerserk",
		"MechzBehavior::mechzShootFlameActionEnd",
		"MechzBehavior::mechzShootFlameActionStart",
		"MechzBehavior::mechzShootFlameActionUpdate",
		"MechzBehavior::mechzShouldMelee",
		"MechzBehavior::mechzStopFlame",
		"MechzBehavior::mechzTargetService",
		"MechzBehavior::playerFlameDamage",
		"MechzClientUtils::mechzProcessFootstep",
		"MechzClientUtils::mechzSndContext",
		"MechzClientUtils::mechz_115_gun_muzzle_flash",
		"MechzClientUtils::mechz_detach_claw",
		"MechzClientUtils::mechz_detach_faceplate",
		"MechzClientUtils::mechz_detach_lknee_armor",
		"MechzClientUtils::mechz_detach_lshoulder_armor",
		"MechzClientUtils::mechz_detach_powercap",
		"MechzClientUtils::mechz_detach_rknee_armor",
		"MechzClientUtils::mechz_detach_rshoulder_armor",
		"MechzClientUtils::mechz_headlamp_off",
		"MechzServerUtils::hide_part",
		"MechzServerUtils::mechzCheckInArc",
		"MechzServerUtils::mechzDamageCallback",
		"MechzServerUtils::mechz_play_pain_audio",
		"MechzServerUtils::mechz_track_faceplate_damage",
		"MechzServerUtils::mechz_track_lknee_armor_damage",
		"MechzServerUtils::mechz_track_lshoulder_armor_damage",
		"MechzServerUtils::mechz_track_powercap_cover_damage",
		"MechzServerUtils::mechz_track_powercap_damage",
		"MechzServerUtils::mechz_track_rknee_armor_damage",
		"MechzServerUtils::mechz_track_rshoulder_armor_damage",
		"MechzServerUtils::mechz_turn_off_headlamp",
		"MechzServerUtils::show_hit_marker",
		"medals::defenseGlobalCount",
		"medals::init",
		"medals::offenseGlobalCount",
		"medals::on_player_connect",
		"medals::setLastKilledBy",
		"metal_storm::bootup",
		"metal_storm::can_enter_main",
		"metal_storm::cleanup_fx_ents",
		"metal_storm::death_fx",
		"metal_storm::death_turret_rotate",
		"metal_storm::field_toggle_gas_freeze",
		"metal_storm::get_damage_fx_ent",
		"metal_storm::main",
		"metal_storm::MetalStormCallback_VehicleDamage",
		"metal_storm::metalstorm_blink_lights",
		"metal_storm::metalstorm_check_move",
		"metal_storm::metalstorm_crash_movement",
		"metal_storm::metalstorm_death",
		"metal_storm::metalstorm_debug",
		"metal_storm::metalstorm_emped",
		"metal_storm::metalstorm_exit_vehicle",
		"metal_storm::metalstorm_find_new_position",
		"metal_storm::metalstorm_fire_for_time",
		"metal_storm::metalstorm_freeze_blink_lights",
		"metal_storm::metalstorm_freeze_death",
		"metal_storm::metalstorm_grenade_watcher",
		"metal_storm::metalstorm_main",
		"metal_storm::metalstorm_movementupdate",
		"metal_storm::metalstorm_off",
		"metal_storm::metalstorm_on",
		"metal_storm::metalstorm_player_bullet_shake",
		"metal_storm::metalstorm_player_enter",
		"metal_storm::metalstorm_player_hit_dudes_sound",
		"metal_storm::metalstorm_player_rocket_recoil",
		"metal_storm::metalstorm_rocket_recoil",
		"metal_storm::metalstorm_scripted",
		"metal_storm::metalstorm_setup",
		"metal_storm::metalstorm_set_team",
		"metal_storm::metalstorm_start_ai",
		"metal_storm::metalstorm_stop_ai",
		"metal_storm::metalstorm_think",
		"metal_storm::metalstorm_turret_on_target_thread",
		"metal_storm::metalstorm_turret_on_vis_target_thread",
		"metal_storm::metalstorm_turret_scan",
		"metal_storm::metalstorm_update_damage_fx",
		"metal_storm::metalstorm_update_rumble",
		"metal_storm::metalstorm_weapon_think",
		"metal_storm::path_update_interrupt",
		"metal_storm::precache_damage_fx",
		"metal_storm::spin_crash",
		"metal_storm::update_damage_states",
		"metal_storm::waittill_enemy_too_close_or_timeout",
		"multilockap_guidance::APFiredNotify",
		"multilockap_guidance::APLockLoop",
		"multilockap_guidance::APToggleLoop",
		"multilockap_guidance::ClearAPTarget",
		"multilockap_guidance::DestroyLockOnCanceledMessage",
		"multilockap_guidance::DisplayLockOnCanceledMessage",
		"multilockap_guidance::GetBestTarget",
		"multilockap_guidance::InsideAPReticleLocked",
		"multilockap_guidance::InsideAPReticleNoLock",
		"multilockap_guidance::IsStillValidTarget",
		"multilockap_guidance::LockSightTest",
		"multilockap_guidance::on_player_spawned",
		"multilockap_guidance::SeekerSound",
		"multilockap_guidance::TargetInsertionSortCompare",
		"music::declareMusicState",
		"music::demoFixup",
		"music::fadeOutAndStopSound",
		"music::musicAlias",
		"music::musicAliasloop",
		"music::musicCmdHandler",
		"music::musicStinger",
		"music::musicwaittilldone",
		"music::musicWaitTillStingerDone",
		"music::on_player_spawned",
		"music::setMusicState",
		"music::transitionIn",
		"music::transitionOut",
		"music::updateMusic",
		"name::add_name",
		"name::add_nationality_names",
		"name::add_override_name_func",
		"name::agent_names",
		"name::american_names",
		"name::chinese_names",
		"name::egyptian_names",
		"name::get",
		"name::getRankFromName",
		"name::get_ai_classname",
		"name::get_name_for_nationality",
		"name::initialize_nationality",
		"name::issubstr_match_any",
		"name::is_navy_member",
		"name::is_police_member",
		"name::is_seal_member",
		"name::is_security_member",
		"name::is_special_agent_member",
		"name::navy_names",
		"name::police_names",
		"name::randomize_name_list",
		"name::russian_names",
		"name::seal_names",
		"name::security_names",
		"name::setup",
		"name::sing_police_names",
		"navmesh_debug::AiPathingTest",
		"objpoints::create",
		"objpoints::delete",
		"objpoints::get_by_index",
		"objpoints::get_by_name",
		"objpoints::set_origin_by_name",
		"objpoints::start_flashing",
		"objpoints::stop_flashing",
		"objpoints::update_origin",
		"oob::disablePlayerOOB",
		"oob::GetAdjusedPlayer",
		"oob::GetDistanceFromLastValidPlayerLoc",
		"oob::GetOObUIModel",
		"oob::IsOutOfBounds",
		"oob::IsTouchingAnyOOBTrigger",
		"oob::killEntity",
		"oob::onOutOfBoundsChange",
		"oob::on_localplayer_connect",
		"oob::on_localplayer_shutdown",
		"oob::on_localplayer_spawned",
		"oob::on_player_spawned",
		"oob::ResetOOBTimer",
		"oob::run_oob_trigger",
		"oob::StopOutOfBoundsEffects",
		"oob::UpdateVisualEffects",
		"oob::waitForCloneTouch",
		"oob::waitForPlayerTouch",
		"oob::watchForDeath",
		"oob::watchForHostMigration",
		"oob::watchForLeave",
		"parasite::defaultRole",
		"parasite::drone_callback_damage",
		"parasite::drone_pain",
		"parasite::drone_pain_for_time",
		"parasite::fire_pod_logic",
		"parasite::GetNextMovePosition_forwardjuke",
		"parasite::GetNextMovePosition_tactical",
		"parasite::getParasiteFiringRate",
		"parasite::get_parasite_enemy",
		"parasite::parasite_damage",
		"parasite::parasite_initialize",
		"parasite::path_update_interrupt",
		"parasite::set_parasite_enemy",
		"parasite::state_combat_enter",
		"parasite::state_combat_update",
		"parasite::state_death_update",
		"perplayer::disable",
		"perplayer::enable",
		"perplayer::handlePlayer",
		"perplayer::init",
		"perplayer::onJoinedSpectators",
		"perplayer::onJoinedTeam",
		"perplayer::onPlayerConnect",
		"perplayer::onPlayerDisconnect",
		"perplayer::onPlayerKilled",
		"perplayer::onPlayerSpawned",
		"perplayer::unHandlePlayer",
		"persistence::add_contract_to_queue",
		"persistence::add_match_history_stat",
		"persistence::add_recent_stat",
		"persistence::adjust_recent_stats",
		"persistence::can_set_aar_stat",
		"persistence::check_contract_expirations",
		"persistence::get_gametype_name",
		"persistence::get_recent_stat",
		"persistence::increment_contract_times",
		"persistence::init",
		"persistence::initialize_match_stats",
		"persistence::initialize_stat_tracking",
		"persistence::is_party_gamemode",
		"persistence::is_stat_modifiable",
		"persistence::on_player_connect",
		"persistence::process_contracts_on_add_stat",
		"persistence::set_after_action_report_player_medal",
		"persistence::set_after_action_report_player_stat",
		"persistence::set_after_action_report_stat",
		"persistence::set_match_history_stat",
		"persistence::set_recent_stat",
		"persistence::stat_get_with_gametype",
		"persistence::stat_set_with_gametype",
		"persistence::upload_global_stat_counters",
		"persistence::upload_stats_soon",
		"pineapple_gun::watch_bolt_detonation",
		"player::allow_stance_change",
		"player::fill_current_clip",
		"player::gameplay_started_callback",
		"player::generate_weapon_data",
		"player::get_snapped_spot_origin",
		"player::get_weapondata",
		"player::give_back_weapons",
		"player::is_spawn_protected",
		"player::is_valid_weapon",
		"player::last_valid_position",
		"player::on_player_spawned",
		"player::simple_respawn",
		"player::switch_to_primary_weapon",
		"player::take_weapons",
		"player::weapondata_give",
		"popups::devgui_notif_getGunLevelTableName",
		"popups::devgui_notif_init",
		"popups::DisplayKillstreakHackedTeamMessageToAll",
		"popups::DisplayKillstreakTeamMessageToAll",
		"popups::displayPopUpsWaiter",
		"popups::DisplayTeamMessageToAll",
		"popups::DisplayTeamMessageToTeam",
		"popups::displayTeamMessageWaiter",
		"popups::init",
		"popups::milestoneNotify",
		"popups::notif_devgui_gun_level_think",
		"popups::notif_devgui_gun_rank",
		"popups::notif_devgui_rank",
		"popups::notif_devgui_rank_up_think",
		"popups::on_player_connect",
		"popups::popupsFromConsole",
		"popups::shouldDisplayTeamMessages",
		"postfx::exitPostfxBundle",
		"postfx::finishPlayingPostfxBundle",
		"postfx::getShaderConstantIndex",
		"postfx::getShaderConstantValue",
		"postfx::GetStructFieldOrZero",
		"postfx::init_postfx_bundles",
		"postfx::localplayer_postfx_bundle_init",
		"postfx::playPostfxBundle",
		"postfx::postfxBundleDebugListen",
		"postfx::postfx_bundle_init",
		"postfx::SetFilterConstants",
		"postfx::setFrontendStreamingOverlay",
		"postfx::stopPlayingPostfxBundle",
		"postfx::stopPostfxBundle",
		"postfx::watchEntityShutdown",
		"prowler::main",
		"prowler::ProwlerCallback_VehicleDamage",
		"prowler::update",
		"prowler::watch_transform",
		"proximity_grenade::addPlayerToChain",
		"proximity_grenade::begin_other_grenade_tracking",
		"proximity_grenade::chainIsActive",
		"proximity_grenade::chainPlayer",
		"proximity_grenade::cleanupKillCamEntOnDeath",
		"proximity_grenade::cleanUpProximityChainEnt",
		"proximity_grenade::createGadgetProximityGrenadeWatcher",
		"proximity_grenade::createProximityGrenadeWatcher",
		"proximity_grenade::damagePlayerInRadius",
		"proximity_grenade::debugChainSphere",
		"proximity_grenade::deleteEntAfterTime",
		"proximity_grenade::deleteEntOnOwnerDeath",
		"proximity_grenade::deleteEntOnTimeout",
		"proximity_grenade::getProximityChain",
		"proximity_grenade::init_shared",
		"proximity_grenade::isInChain",
		"proximity_grenade::onSpawnProximityGrenadeWeaponObject",
		"proximity_grenade::on_damage",
		"proximity_grenade::on_player_spawned",
		"proximity_grenade::performHudEffects",
		"proximity_grenade::proximityDeathWait",
		"proximity_grenade::proximityDetonate",
		"proximity_grenade::proximityGrenadeChain",
		"proximity_grenade::proximityGrenadeDamagePlayer",
		"proximity_grenade::proximity_spawned",
		"proximity_grenade::register",
		"proximity_grenade::setupKillCamEnt",
		"proximity_grenade::tesla_play_arc_fx",
		"proximity_grenade::trackOnOwner",
		"proximity_grenade::updateDvars",
		"proximity_grenade::watchForProximityExplosion",
		"proximity_grenade::watchProximityGrenadeHitPlayer",
		"proximity_grenade::watch_death",
		"quadrotor::can_enter_main",
		"quadrotor::death_fire_loop_audio",
		"quadrotor::death_fx",
		"quadrotor::goal_flag_monitor",
		"quadrotor::make_sure_goal_is_well_above_ground",
		"quadrotor::qrotor_dmg_snd",
		"quadrotor::QuadrotorCallback_VehicleDamage",
		"quadrotor::quadrotor_adjust_goal_for_enemy_height",
		"quadrotor::quadrotor_blink_lights",
		"quadrotor::quadrotor_check_move",
		"quadrotor::quadrotor_cleanup_fx",
		"quadrotor::quadrotor_collision",
		"quadrotor::quadrotor_collision_player",
		"quadrotor::quadrotor_crash_accel",
		"quadrotor::quadrotor_crash_movement",
		"quadrotor::quadrotor_damage",
		"quadrotor::quadrotor_death",
		"quadrotor::quadrotor_emped",
		"quadrotor::quadrotor_exit_vehicle",
		"quadrotor::quadrotor_find_new_position",
		"quadrotor::quadrotor_fireupdate",
		"quadrotor::quadrotor_fire_for_time",
		"quadrotor::quadrotor_get_closest_node",
		"quadrotor::quadrotor_get_damage_effect",
		"quadrotor::quadrotor_level_out_for_landing",
		"quadrotor::quadrotor_main",
		"quadrotor::quadrotor_movementupdate",
		"quadrotor::quadrotor_off",
		"quadrotor::quadrotor_on",
		"quadrotor::quadrotor_play_single_fx_on_tag",
		"quadrotor::quadrotor_predicted_collision",
		"quadrotor::quadrotor_scripted",
		"quadrotor::quadrotor_self_destruct",
		"quadrotor::quadrotor_set_team",
		"quadrotor::quadrotor_start_ai",
		"quadrotor::quadrotor_start_scripted",
		"quadrotor::quadrotor_teleport_to_nearest_node",
		"quadrotor::quadrotor_temp_bullet_shield",
		"quadrotor::quadrotor_think",
		"quadrotor::quadrotor_update_damage_fx",
		"quadrotor::quadrotor_update_rumble",
		"quadrotor::waittill_pathing_done",
		"quadtank::Attack_Thread_rocket",
		"quadtank::bootup",
		"quadtank::defaultRole",
		"quadtank::do_melee",
		"quadtank::enemyIsQuadtank",
		"quadtank::footstep_handler",
		"quadtank::javeline_incoming",
		"quadtank::Movement_Thread_Wander",
		"quadtank::pain_update",
		"quadtank::path_update_interrupt",
		"quadtank::player_shock_fx_fade_off",
		"quadtank::player_shock_fx_handler",
		"quadtank::QuadtankCallback_VehicleDamage",
		"quadtank::quadtank_automelee_update",
		"quadtank::quadtank_death",
		"quadtank::quadtank_destroyturret",
		"quadtank::quadtank_disabletrophy",
		"quadtank::quadtank_display_weakpoint_marker",
		"quadtank::quadtank_emped",
		"quadtank::quadtank_enabletrophy",
		"quadtank::quadtank_exit_vehicle",
		"quadtank::quadtank_initialize",
		"quadtank::quadtank_movementupdate",
		"quadtank::quadtank_off",
		"quadtank::quadtank_on",
		"quadtank::quadtank_player_fireupdate",
		"quadtank::quadtank_projectile_watcher",
		"quadtank::quadtank_remove_weakpoint_marker",
		"quadtank::quadtank_set_team",
		"quadtank::quadtank_side_turrets_forward",
		"quadtank::quadtank_target_hijackers",
		"quadtank::quadtank_turret_scan",
		"quadtank::quadtank_update_difficulty",
		"quadtank::quadtank_weakpoint_display",
		"quadtank::quadtank_weakpoint_trigger",
		"quadtank::quadtank_weapon_think_cannon",
		"quadtank::qudtank_clear_target_when_hijack_stops",
		"quadtank::railgun_sound",
		"quadtank::remove_repulsor",
		"quadtank::repulsor_fx",
		"quadtank::set_detonation_time",
		"quadtank::set_side_turrets_enabled",
		"quadtank::set_trophy_state",
		"quadtank::show_weak_spots",
		"quadtank::side_turrets_take_it_easy_on_one_guy",
		"quadtank::side_turret_is_target_in_view_score",
		"quadtank::state_combat_exit",
		"quadtank::state_combat_update",
		"quadtank::state_driving_update",
		"quadtank::state_off_enter",
		"quadtank::state_off_exit",
		"quadtank::state_scripted_update",
		"quadtank::trigger_player_shock_fx",
		"quadtank::trophy_destroyed",
		"quadtank::trophy_disabled",
		"quadtank::turn_off_laser_after",
		"quadtank::update_trophy_system_state",
		"quadtank::wait_for_bullet_impact",
		"radiant_live_udpate::render_struct",
		"radiant_live_udpate::scriptstruct_debug_render",
		"rank::atLeastOnePlayerOnEachTeam",
		"rank::doesScoreInfoCountTowardRampage",
		"rank::endGameUpdate",
		"rank::getArenaPointsStat",
		"rank::getCodPointsCapped",
		"rank::getCodPointsStat",
		"rank::getCombatEfficiencyEvent",
		"rank::getItemIndex",
		"rank::getRank",
		"rank::getRankForXp",
		"rank::getRankInfoCodPointsEarned",
		"rank::getRankInfoFull",
		"rank::getRankInfoIcon",
		"rank::getRankInfoLevel",
		"rank::getRankInfoMaxXp",
		"rank::getRankInfoMinXP",
		"rank::getRankInfoXPAmt",
		"rank::getRankXP",
		"rank::getRankXPCapped",
		"rank::getRankXpStat",
		"rank::getScoreInfoLabel",
		"rank::getScoreInfoValue",
		"rank::getScoreInfoXP",
		"rank::getSPM",
		"rank::giveRankXP",
		"rank::incCodPoints",
		"rank::incRankXP",
		"rank::init",
		"rank::initScoreInfo",
		"rank::on_joined_spectators",
		"rank::on_joined_team",
		"rank::on_player_connect",
		"rank::on_player_spawned",
		"rank::registerScoreInfo",
		"rank::removeRankHUD",
		"rank::round_this_number",
		"rank::setCodPointsStat",
		"rank::shouldKickByRank",
		"rank::shouldSkipMomentumDisplay",
		"rank::syncXPStat",
		"rank::updateMomentumHUD",
		"rank::updateRank",
		"rank::updateRankScoreHUD",
		"raps::adjust_side_death_dir_if_trace_fail",
		"raps::check_detonation_dist",
		"raps::collision_fx",
		"raps::defaultRole",
		"raps::detonate",
		"raps::detonate_damage_monitored",
		"raps::detonate_sides",
		"raps::detonation_monitor",
		"raps::do_death_fx",
		"raps::do_side_death_fx",
		"raps::drivableRapsInAir",
		"raps::force_get_enemies",
		"raps::isDrivablePlayerVehicle",
		"raps::jump_detonate",
		"raps::nudge_collision",
		"raps::path_update_interrupt",
		"raps::prevent_stuck",
		"raps::raps_AllowFriendlyFireDamage",
		"raps::raps_audio_cleanup",
		"raps::raps_callback_damage",
		"raps::raps_get_target_position",
		"raps::raps_initialize",
		"raps::raps_in_air_audio",
		"raps::raps_spawn_audio",
		"raps::slow_raps",
		"raps::slow_raps_trigger",
		"raps::sndFunctions",
		"raps::state_combat_update",
		"raps::state_death_update",
		"raps::state_emped_update",
		"raps::state_scripted_update",
		"raps::try_detonate",
		"rat::DerRieseZombieSpawnNavmeshTest",
		"rat_shared::addRatScriptCmd",
		"rat_shared::init",
		"rat_shared::rscRecTeleport",
		"rat_shared::rscSimulateScriptError",
		"rat_shared::rscTeleport",
		"rat_shared::rscTeleportEnemies",
		"RazBehavior::findNodesService",
		"RazBehavior::razShouldMelee",
		"RazBehavior::shouldSkipTeardown",
		"RazClientUtils::razChestArmorDetach",
		"RazClientUtils::razHelmetDetach",
		"RazClientUtils::razLeftShoulderArmorDetach",
		"RazClientUtils::razLeftThighArmorDetach",
		"RazClientUtils::razProcessFootstep",
		"RazClientUtils::razRightThighArmorDetach",
		"replay_gun::can_see_projected_crosshair",
		"replay_gun::get_a_target",
		"replay_gun::get_potential_targets",
		"replay_gun::get_target_lock_on_origin",
		"replay_gun::inside_screen_crosshair_radius",
		"replay_gun::inside_screen_lockon_radius",
		"replay_gun::inside_screen_radius",
		"replay_gun::is_valid_target",
		"replay_gun::pick_a_target_from",
		"replay_gun::player_init",
		"replay_gun::trace",
		"replay_gun::watch_for_replay_gun",
		"replay_gun::watch_lockon",
		"resurrect::bot_wait_for_activate",
		"resurrect::do_resurrected_on_dead_body_fx",
		"resurrect::do_resurrected_on_spawned_player_fx",
		"resurrect::do_resurrect_hint_fx",
		"resurrect::enter_rejack_standby",
		"resurrect::gadget_resurrect_delay_updateTeamStatus",
		"resurrect::gadget_resurrect_is_flickering",
		"resurrect::gadget_resurrect_is_inuse",
		"resurrect::gadget_resurrect_is_player_predead",
		"resurrect::gadget_resurrect_is_primed",
		"resurrect::gadget_resurrect_is_ready",
		"resurrect::gadget_resurrect_off",
		"resurrect::gadget_resurrect_on",
		"resurrect::gadget_resurrect_on_connect",
		"resurrect::gadget_resurrect_on_flicker",
		"resurrect::gadget_resurrect_on_give",
		"resurrect::gadget_resurrect_on_spawned",
		"resurrect::gadget_resurrect_on_take",
		"resurrect::gadget_resurrect_secondary_deathcam_time",
		"resurrect::gadget_resurrect_start",
		"resurrect::glow_for_time",
		"resurrect::init_rejack_ui",
		"resurrect::is_jumping",
		"resurrect::overrideSpawn",
		"resurrect::player_position_valid",
		"resurrect::player_suicide",
		"resurrect::rejack_suicide",
		"resurrect::rejack_ui_activate",
		"resurrect::reload_clip_on_stand",
		"resurrect::remove_rejack_ui",
		"resurrect::resurrect_breadcrumbs",
		"resurrect::resurrect_delay",
		"resurrect::resurrect_drain_power",
		"resurrect::resurrect_watch_for_death",
		"resurrect::wait_for_activate",
		"resurrect::wait_for_time",
		"resurrect::watch_bad_trigger_touch",
		"resurrect::watch_rejack_activate",
		"resurrect::watch_rejack_activate_requested",
		"resurrect::watch_rejack_suicide",
		"resurrect::watch_rejack_timeout",
		"resurrect::watch_smoke_death",
		"resurrect::watch_smoke_detonate",
		"resurrect::watch_smoke_effect_watch_resurrect",
		"resurrect::watch_smoke_effect_watch_suicide",
		"riotshield::attachReconModel",
		"riotshield::begin_other_grenade_tracking",
		"riotshield::check_stuck_to_shield",
		"riotshield::damageThenDestroyRiotshield",
		"riotshield::deleteShieldOnPlayerDeathOrDisconnect",
		"riotshield::deleteShieldOnTriggerDeath",
		"riotshield::init_shared",
		"riotshield::isValidNonShieldWeapon",
		"riotshield::on_player_connect",
		"riotshield::on_player_spawned",
		"riotshield::player_damage_override_callback",
		"riotshield::player_damage_shield",
		"riotshield::player_init_shield_health",
		"riotshield::player_set_shield_health",
		"riotshield::player_shield_absorb_damage",
		"riotshield::player_shield_facing_attacker",
		"riotshield::player_take_riotshield",
		"riotshield::player_watch_shield_melee",
		"riotshield::player_watch_shield_melee_power",
		"riotshield::player_watch_weapon_change",
		"riotshield::register",
		"riotshield::resetReconModelOnEvent",
		"riotshield::resetReconModelVisibility",
		"riotshield::riotshieldDistanceTest",
		"riotshield::riotshield_deploy_anim",
		"riotshield::riotshield_destroy_anim",
		"riotshield::riotshield_fling_zombie",
		"riotshield::riotshield_get_enemies_in_range",
		"riotshield::riotshield_knockdown_zombie",
		"riotshield::riotshield_melee",
		"riotshield::riotshield_network_choke",
		"riotshield::shield_state_change",
		"riotshield::should_shield_absorb_damage",
		"riotshield::spawnRiotshieldCover",
		"riotshield::startRiotshieldDeploy",
		"riotshield::trackRiotShield",
		"riotshield::UpdateRiotShieldModel",
		"riotshield::watchDeployedRiotshieldDamage",
		"riotshield::watchDeployedRiotshieldEnts",
		"riotshield::watchPregameClassChange",
		"riotshield::watchRiotshieldDeploy",
		"riotshield::watchRiotshieldPickup",
		"riotshield::watchRiotshieldStuckEntityDeath",
		"riotshield::watch_riotshield_damage",
		"riotshield::watch_riot_shield_use",
		"riotshield::zombie_knockdown",
		"RobotClientUtils::robotMindControlExplosionHandler",
		"RobotInterface::RegisterRobotInterfaceAttributes",
		"RobotSoldierBehavior::RegisterBehaviorScriptFunctions",
		"RobotSoldierBehavior::robotCalcProceduralTraversal",
		"RobotSoldierBehavior::robotCanJuke",
		"RobotSoldierBehavior::robotCanPreemptiveJuke",
		"RobotSoldierBehavior::robotCanTacticalJuke",
		"RobotSoldierBehavior::robotCleanupChargeMeleeAttack",
		"RobotSoldierBehavior::robotIsAtCoverModeScan",
		"RobotSoldierBehavior::robotIsCrawler",
		"RobotSoldierBehavior::robotProceduralLandingUpdate",
		"RobotSoldierBehavior::robotProceduralTraversalUpdate",
		"RobotSoldierBehavior::robotShouldBecomeCrawler",
		"RobotSoldierBehavior::robotTraverseEnd",
		"RobotSoldierBehavior::robotTraverseStart",
		"RobotSoldierServerUtils::RandomGibRogueRobot",
		"RobotSoldierServerUtils::removeDestructAndGibDamageOverride",
		"RobotSoldierServerUtils::robotEquipMiniRaps",
		"RobotSoldierServerUtils::robotForceCrawler",
		"RobotSoldierServerUtils::robotLights",
		"RobotSoldierServerUtils::robotMoveModeAttributeCallback",
		"RobotSoldierServerUtils::robotTraversalAttributeCallback",
		"RobotSoldierServerUtils::rogueControlAttributeCallback",
		"RobotSoldierServerUtils::rogueControlForceGoalAttributeCallback",
		"RobotSoldierServerUtils::rogueControlSpeedAttributeCallback",
		"rocketshield::bottle_trigger_activate",
		"rocketshield::bottle_trigger_visibility",
		"rocketshield::check_weapon_ammo",
		"rocketshield::create_bottle_unitrigger",
		"rocketshield::on_player_connect",
		"rocketshield::on_player_spawned",
		"rocketshield::player_damage_rocketshield",
		"rocketshield::player_watch_ammo_change",
		"rocketshield::player_watch_max_ammo",
		"rocketshield::player_watch_shield_juke",
		"rocketshield::player_watch_upgraded_pickup_from_table",
		"rocketshield::riotshield_get_juke_enemies_in_range",
		"rocketshield::riotshield_melee_juke",
		"rocketshield::shield_recharge_trigger_think",
		"rocketshield::spawn_recharge_tanks",
		"rocketshield::watchFirstUse",
		"roulette::disable_hero_gadget_activation",
		"roulette::dpad_left_pressed",
		"roulette::failsafe_reenable_offhand_special",
		"roulette::gadget_roulette_flicker",
		"roulette::gadget_roulette_give_earned_specialist",
		"roulette::gadget_roulette_is_flickering",
		"roulette::gadget_roulette_is_inuse",
		"roulette::gadget_roulette_is_ready",
		"roulette::gadget_roulette_on_activate",
		"roulette::gadget_roulette_on_connect",
		"roulette::gadget_roulette_on_deactivate",
		"roulette::gadget_roulette_on_deactivate_helper",
		"roulette::gadget_roulette_on_flicker",
		"roulette::gadget_roulette_on_give",
		"roulette::gadget_roulette_on_player_spawn",
		"roulette::gadget_roulette_on_take",
		"roulette::getRandomGadget",
		"roulette::giveRandomWeapon",
		"roulette::registerGadgetType",
		"roulette::reset_roulette_state_to_default",
		"roulette::roulette_init_allow_spin",
		"roulette::set_gadget_status",
		"roulette::watchGadgetActivated",
		"roulette::watchRespin",
		"roulette::watchRespinGadgetActivated",
		"roulette::watch_entity_shutdown",
		"satchel_charge::createSatchelWatcher",
		"satchel_charge::init_shared",
		"satchel_charge::satchelDetonate",
		"satchel_charge::satchelSpawn",
		"satchel_charge::satchel_spawned",
		"scene::add_player_linked_scene",
		"scene::add_scene_func",
		"scene::add_scene_ordered_notetrack",
		"scene::add_wait_for_streamer_hint_scene",
		"scene::any_button_pressed",
		"scene::cancel",
		"scene::capture_scene",
		"scene::cf_server_sync",
		"scene::clear_old_ents",
		"scene::clear_scene_skipping_ui",
		"scene::create_scene_hud",
		"scene::debug_display",
		"scene::delete_scene_data",
		"scene::display_mode",
		"scene::display_scene_menu",
		"scene::get_active_scene",
		"scene::get_active_scenes",
		"scene::get_actor_count",
		"scene::get_existing_ent",
		"scene::get_player_count",
		"scene::get_prop_count",
		"scene::get_scenedef",
		"scene::get_scenedefs",
		"scene::get_shared_player_scene",
		"scene::get_vehicle_count",
		"scene::has_init_state",
		"scene::init",
		"scene::in_igc",
		"scene::is_active",
		"scene::is_capture_mode",
		"scene::is_igc",
		"scene::is_igc_active",
		"scene::is_playing",
		"scene::is_ready",
		"scene::is_scene_initialized",
		"scene::is_scene_playing",
		"scene::is_skipping_in_progress",
		"scene::is_valid_ent",
		"scene::move_to_scene",
		"scene::on_load_wait",
		"scene::on_player_connect",
		"scene::on_player_disconnect",
		"scene::play",
		"scene::player_scene_animation_skip",
		"scene::player_scene_skip",
		"scene::player_scene_skip_completed",
		"scene::postfx_igc",
		"scene::postfx_igc_short",
		"scene::postfx_igc_zombies",
		"scene::remove_invalid_scene_objects",
		"scene::remove_player_linked_scene",
		"scene::remove_scene_func",
		"scene::run_instances",
		"scene::run_scene_tests",
		"scene::scene_disable_player_stuff",
		"scene::scene_enable_player_stuff",
		"scene::scene_list_menu",
		"scene::scene_list_settext",
		"scene::scene_menu_cleanup",
		"scene::set_igc_active",
		"scene::set_origin",
		"scene::should_skip_scene_loop",
		"scene::should_spectate_on_join",
		"scene::skipto_end",
		"scene::skipto_end_noai",
		"scene::skip_scene",
		"scene::spawn",
		"scene::stop",
		"scene::synced_delete",
		"scene::test_init",
		"scene::test_play",
		"scene::toggle_postfx_igc_loop",
		"scene::toggle_scene_menu",
		"scene::updateIGCViewtime",
		"scene::waittill_skip_sequence_completed",
		"scene::wait_until_spectate_on_join_completes",
		"scene::watch_scene_ending",
		"scene::watch_scene_skipping",
		"scene::watch_scene_skip_requests",
		"scoreboard::main",
		"scoreevents::decrementLastObituaryPlayerCountAfterFade",
		"scoreevents::getColumnOffsetForGametype",
		"scoreevents::getScoreEventColumn",
		"scoreevents::getScoreEventTableID",
		"scoreevents::getScoreEventTableName",
		"scoreevents::getXPEventColumn",
		"scoreevents::giveCrateCaptureMedal",
		"scoreevents::hero_ability_kill_event",
		"scoreevents::hero_ability_multikill_event",
		"scoreevents::hero_weapon_multikill_event",
		"scoreevents::isRegisteredEvent",
		"scoreevents::is_hero_score_event_restricted",
		"scoreevents::killstreakWeaponsAllowedScore",
		"scoreevents::processScoreEvent",
		"scoreevents::register_hero_ability_kill_event",
		"scoreevents::register_hero_ability_multikill_event",
		"scoreevents::register_hero_weapon_multikill_event",
		"scoreevents::register_thief_shutdown_enemy_event",
		"scoreevents::shouldAddRankXP",
		"scoreevents::thief_shutdown_enemy_event",
		"scoreevents::uninterruptedObitFeedKills",
		"scout_drone::defend",
		"scout_drone::get_custom_damage_effect",
		"scout_drone::guard",
		"scout_drone::loiter",
		"scout_drone::patrol",
		"scout_drone::scout_callback_damage",
		"scout_drone::scout_drone_initialize",
		"scout_drone::scout_find_new_position",
		"scout_drone::set_patrol_path",
		"scout_drone::state_alert_update",
		"scout_drone::state_combat_enter",
		"scout_drone::state_combat_update",
		"scout_drone::state_highalert_enter",
		"scout_drone::state_lowalert_enter",
		"scout_drone::state_unaware_enter",
		"scout_drone::state_unaware_update",
		"scrambler::checkForPlayerSwitch",
		"scrambler::checkScramblerStun",
		"scrambler::cleanUpScramblerOnDelete",
		"scrambler::createScramblerWatcher",
		"scrambler::destroyEnt",
		"scrambler::init_shared",
		"scrambler::isEnemyScrambler",
		"scrambler::onSpawnScrambler",
		"scrambler::ownerSameTeam",
		"scrambler::restartSound",
		"scrambler::scramblerDetonate",
		"scrambler::scramblerUpdate",
		"scrambler::spawned",
		"scrambler::spawnedGlobalScramber",
		"scrambler::spawnedPerClient",
		"scrambler::spawnedScrambler",
		"scrambler::watchScramblerDamage",
		"scrambler::watchShutdown",
		"scriptbundle::error_on_screen",
		"scriptbundle::warning_on_screen",
		"scripted::end_script",
		"scripted::init",
		"scripted::main",
		"sensor_grenade::checkForTracking",
		"sensor_grenade::createSensorGrenadeWatcher",
		"sensor_grenade::get_decoy_spawn_loc",
		"sensor_grenade::init_shared",
		"sensor_grenade::isPlayerTracked",
		"sensor_grenade::onSpawnSensorGrenade",
		"sensor_grenade::sensorGrenadeDestroyed",
		"sensor_grenade::trackSensorGrenadeVictim",
		"sensor_grenade::watchForExplode",
		"sensor_grenade::watchForStationary",
		"sensor_grenade::watchSensorGrenadeDamage",
		"sensor_grenade::watch_decoy",
		"sensor_grenade::watch_for_decoys",
		"sentinel_drone::defaultRole",
		"sentinel_drone::get_sentinel_drone_enemy",
		"sentinel_drone::get_sentinel_nearest_zombie",
		"sentinel_drone::IsCamera",
		"sentinel_drone::IsCore",
		"sentinel_drone::IsLeftArm",
		"sentinel_drone::IsRightArm",
		"sentinel_drone::IsTopArm",
		"sentinel_drone::sentinel_CallbackDamage",
		"sentinel_drone::sentinel_CanSeeEnemy",
		"sentinel_drone::sentinel_ChargeAtPlayer",
		"sentinel_drone::sentinel_ChargeAtPlayerNavigation",
		"sentinel_drone::sentinel_DamageBeamTouchingEntity",
		"sentinel_drone::sentinel_DamagePlayer",
		"sentinel_drone::sentinel_DeactivateAllEffects",
		"sentinel_drone::sentinel_DebugBehavior",
		"sentinel_drone::sentinel_DebugDrawSize",
		"sentinel_drone::sentinel_DebugFX",
		"sentinel_drone::sentinel_DeleteDroneDeathFX",
		"sentinel_drone::sentinel_DestroyAllArms",
		"sentinel_drone::sentinel_DodgeRoll",
		"sentinel_drone::sentinel_drone_arm_cut",
		"sentinel_drone::sentinel_drone_arm_cut_1",
		"sentinel_drone::sentinel_drone_arm_cut_2",
		"sentinel_drone::sentinel_drone_arm_cut_3",
		"sentinel_drone::sentinel_drone_beam_charge",
		"sentinel_drone::sentinel_drone_beam_fire",
		"sentinel_drone::sentinel_drone_beam_fire1",
		"sentinel_drone::sentinel_drone_beam_fire2",
		"sentinel_drone::sentinel_drone_beam_fire3",
		"sentinel_drone::sentinel_drone_beam_set_source_to_target",
		"sentinel_drone::sentinel_drone_beam_set_target_id",
		"sentinel_drone::sentinel_drone_CallbackRadiusDamage",
		"sentinel_drone::sentinel_drone_camera_destroyed",
		"sentinel_drone::sentinel_drone_camera_scanner",
		"sentinel_drone::sentinel_drone_damage_player_fx",
		"sentinel_drone::sentinel_drone_deathfx",
		"sentinel_drone::sentinel_drone_face_cut",
		"sentinel_drone::sentinel_drone_initialize",
		"sentinel_drone::sentinel_ElectrifyZombie",
		"sentinel_drone::sentinel_FireBeam",
		"sentinel_drone::sentinel_FireBeamBurst",
		"sentinel_drone::sentinel_FireBeamSuccession",
		"sentinel_drone::sentinel_FireLogic",
		"sentinel_drone::sentinel_ForceGoAndStayInPosition",
		"sentinel_drone::sentinel_GetArmNumber",
		"sentinel_drone::sentinel_GetEngagementDistMax",
		"sentinel_drone::sentinel_GetEngagementDistMin",
		"sentinel_drone::sentinel_GetEngagementHeightMax",
		"sentinel_drone::sentinel_GetEngagementHeightMin",
		"sentinel_drone::sentinel_GetNextMovePositionTactical",
		"sentinel_drone::sentinel_HideInitialBrokenParts",
		"sentinel_drone::sentinel_InitBeamLaunchers",
		"sentinel_drone::sentinel_Intro",
		"sentinel_drone::sentinel_IntroCompleted",
		"sentinel_drone::sentinel_IsEnemyIndoors",
		"sentinel_drone::sentinel_IsEnemyInNarrowPlace",
		"sentinel_drone::sentinel_IsInsideEngagementDistance",
		"sentinel_drone::sentinel_IsNearAnotherPlayer",
		"sentinel_drone::sentinel_IsNearAnotherSentinel",
		"sentinel_drone::sentinel_is_drone_initialized",
		"sentinel_drone::sentinel_KillMyself",
		"sentinel_drone::sentinel_launch_piece",
		"sentinel_drone::sentinel_NavigateTheWorld",
		"sentinel_drone::sentinel_NavigationStandStill",
		"sentinel_drone::sentinel_PathUpdateInterrupt",
		"sentinel_drone::sentinel_play_claws_ambient_fx",
		"sentinel_drone::sentinel_play_engine_fx",
		"sentinel_drone::sentinel_play_taunt",
		"sentinel_drone::sentinel_RemoveFromLevelArray",
		"sentinel_drone::sentinel_SelfDestruct",
		"sentinel_drone::sentinel_SetCompactMode",
		"sentinel_drone::sentinel_spawn_broken_arm",
		"sentinel_drone::sentinel_Trace",
		"sentinel_drone::sentine_RumbleWhenNearPlayer",
		"sentinel_drone::set_sentinel_drone_enemy",
		"sentinel_drone::state_combat_update",
		"sentinel_drone::state_death_update",
		"serverfaceanim::init_serverfaceanim",
		"serverfaceanim::wait_for_face_event",
		"serversettings::constrainGameType",
		"serversettings::constrainMapSize",
		"serversettings::main",
		"serversettings::updateServerSettings",
		"shaderanim::animate_crack",
		"shaderanim::shaderanim_update_opacity",
		"shared::detachAllWeaponModels",
		"shared::detachWeapon",
		"shared::DoNoteTracks",
		"shared::DoNoteTracksForever",
		"shared::DoNoteTracksForeverIntercept",
		"shared::DoNoteTracksForeverProc",
		"shared::DoNoteTracksForTime",
		"shared::doNoteTracksForTimeEndNotify",
		"shared::DoNoteTracksForTimeIntercept",
		"shared::DoNoteTracksForTimeProc",
		"shared::DoNoteTracksIntercept",
		"shared::DoNoteTracksPostCallback",
		"shared::DropAIWeapon",
		"shared::DropAllAIWeapons",
		"shared::getTagForPos",
		"shared::HandleNoteTrack",
		"shared::placeWeaponOn",
		"shared::player_weapon_drop",
		"shared::StowWeapon",
		"shared::ThrowWeapon",
		"shared::updateAttachedWeaponModels",
		"shared::updateScriptWeaponInfoAndPos",
		"shellshock::endOnDeath",
		"shellshock::endOnTimer",
		"shellshock::main",
		"shellshock::on_damage",
		"shellshock::rcbomb_earthQuake",
		"siegebot::Attack_Decision",
		"siegebot::Attack_Javelin",
		"siegebot::Attack_MachinegunBarrage",
		"siegebot::Attack_Rocket",
		"siegebot::Attack_Thread_machinegun",
		"siegebot::Attack_Thread_Rocket",
		"siegebot::clean_up_spawned",
		"siegebot::clean_up_spawnedOnDeath",
		"siegebot::defaultRole",
		"siegebot::emped_enter",
		"siegebot::emped_exit",
		"siegebot::emped_reenter",
		"siegebot::emped_update",
		"siegebot::face_target",
		"siegebot::GetNextMovePosition_tactical",
		"siegebot::GetNextMovePosition_unaware",
		"siegebot::initJumpStruct",
		"siegebot::Javelin_LoseTargetAtRightTime",
		"siegebot::locomotion_start",
		"siegebot::locomotion_stop",
		"siegebot::locomotion_thread",
		"siegebot::MissileCleanup",
		"siegebot::Movement_Thread",
		"siegebot::Movement_Thread_Unaware",
		"siegebot::pain_toggle",
		"siegebot::pain_update",
		"siegebot::path_update_interrupt",
		"siegebot::Scan",
		"siegebot::siegebot_callback_damage",
		"siegebot::siegebot_driving",
		"siegebot::siegebot_initialize",
		"siegebot::siegebot_kill_on_tilting",
		"siegebot::siegebot_player_aimUpdate",
		"siegebot::siegebot_player_fireupdate",
		"siegebot::siegebot_update_difficulty",
		"siegebot::state_combat_exit",
		"siegebot::state_combat_update",
		"siegebot::state_death_update",
		"siegebot::state_jump_can_enter",
		"siegebot::state_jump_enter",
		"siegebot::state_jump_exit",
		"siegebot::state_jump_update",
		"siegebot::state_unaware_update",
		"siegebot::stopMovementAndSetBrake",
		"siegebot::waittill_something_happens_stopped",
		"siegebot::weapon_doors_state",
		"simple_hostmigration::Migration_GetIndexForPlayer",
		"simple_hostmigration::Migration_OnPlayerConnect",
		"simple_hostmigration::Migration_SetupGameType",
		"simple_hostmigration::Migration_SetupPlayerData",
		"simple_hostmigration::Migration_WriteGameData",
		"simple_hostmigration::Migration_WritePlayerData",
		"simple_hostmigration::Migration_WriteTeamData",
		"simple_hostmigration::UpdateHostmigrationData",
		"singlelockap_guidance::APFiredNotify",
		"singlelockap_guidance::APLockLoop",
		"singlelockap_guidance::APToggleLoop",
		"singlelockap_guidance::ClearAPTarget",
		"singlelockap_guidance::DestroyLockOnCanceledMessage",
		"singlelockap_guidance::DisplayLockOnCanceledMessage",
		"singlelockap_guidance::GetBestTarget",
		"singlelockap_guidance::InsideAPReticleLocked",
		"singlelockap_guidance::InsideAPReticleNoLock",
		"singlelockap_guidance::IsStillValidTarget",
		"singlelockap_guidance::LockSightTest",
		"singlelockap_guidance::on_player_spawned",
		"singlelockap_guidance::SeekerSound",
		"singlelockap_guidance::TargetInsertionSortCompare",
		"SkeletonBehavior::BB_GetArmsPosition",
		"SkeletonBehavior::BB_GetHasLegsStatus",
		"SkeletonBehavior::BB_GetLocomotionSpeedType",
		"SkeletonBehavior::getClosestTo",
		"SkeletonBehavior::getClosestToMe",
		"SkeletonBehavior::GetYaw",
		"SkeletonBehavior::GetYawToEnemy",
		"SkeletonBehavior::get_closest_valid_player",
		"SkeletonBehavior::isSkeletonWalking",
		"SkeletonBehavior::isValidEnemy",
		"SkeletonBehavior::is_player_valid",
		"SkeletonBehavior::is_within_fov",
		"SkeletonBehavior::skeletonCanSeePlayer",
		"SkeletonBehavior::skeletonDeathAction",
		"SkeletonBehavior::skeletonGibLegsCondition",
		"SkeletonBehavior::skeletonNotetrackMeleeFire",
		"SkeletonBehavior::skeletonSetGoal",
		"SkeletonBehavior::skeletonShouldMeleeCondition",
		"SkeletonBehavior::skeletonSpawnSetup",
		"SkeletonBehavior::skeletonTargetService",
		"smokegrenade::begin_other_grenade_tracking",
		"smokegrenade::damageEffectArea",
		"smokegrenade::init_shared",
		"smokegrenade::IsInSmokeGrenade",
		"smokegrenade::on_player_spawned",
		"smokegrenade::playSmokeSound",
		"smokegrenade::smokeBlockSight",
		"smokegrenade::smokeDetonate",
		"smokegrenade::spawnSmokeGrenadeTrigger",
		"smokegrenade::watchSmokeGrenadeDetonation",
		"sound::delete_on_death_wait",
		"sound::loop_delete",
		"sound::loop_fx_sound",
		"sound::loop_in_space",
		"sound::loop_on_client",
		"sound::loop_on_entity",
		"sound::loop_on_tag",
		"sound::play_in_space",
		"sound::play_on_client",
		"sound::play_on_entity",
		"sound::play_on_players",
		"sound::play_on_tag",
		"sound::stop_loop_on_entity",
		"sound::wait_for_sounddone_or_death",
		"spawner::AddDeadNPCToList",
		"spawner::add_archetype_spawn_function",
		"spawner::add_global_spawn_function",
		"spawner::add_spawn_function",
		"spawner::add_spawn_function_ai_group",
		"spawner::add_spawn_function_group",
		"spawner::add_to_female_table",
		"spawner::aigroup_init",
		"spawner::aigroup_spawner_death",
		"spawner::aigroup_think",
		"spawner::callback_Track_Dead_NPCs_By_Type",
		"spawner::CheckForDeathTrackingReset",
		"spawner::check_player_requirements",
		"spawner::coverprint",
		"spawner::crawl_target_and_init_flags",
		"spawner::crawl_through_targets_to_init_flags",
		"spawner::disable_replace_on_death",
		"spawner::drop_gear",
		"spawner::fallback_add_previous_group",
		"spawner::fallback_ai",
		"spawner::fallback_ai_think",
		"spawner::fallback_ai_think_death",
		"spawner::fallback_death",
		"spawner::fallback_goal",
		"spawner::fallback_interrupt",
		"spawner::fallback_overmind",
		"spawner::fallback_overmind_internal",
		"spawner::fallback_spawner_think",
		"spawner::fallback_text",
		"spawner::fallback_think",
		"spawner::fallback_wait",
		"spawner::flood_spawner_init",
		"spawner::flood_spawner_scripted",
		"spawner::flood_spawner_think",
		"spawner::flood_trigger_think",
		"spawner::getScoreInfoXP",
		"spawner::get_ai_group_ai",
		"spawner::get_ai_group_count",
		"spawner::get_ai_group_sentient_count",
		"spawner::get_ai_group_spawner_count",
		"spawner::get_goal",
		"spawner::get_least_used_from_array",
		"spawner::get_node_funcs_based_on_target",
		"spawner::get_spawner_target_nodes",
		"spawner::get_target_ents",
		"spawner::get_target_nodes",
		"spawner::get_target_structs",
		"spawner::global_ai_array",
		"spawner::global_spawn_throttle",
		"spawner::goal_volume_init",
		"spawner::go_to_node",
		"spawner::go_to_node_set_goal_node",
		"spawner::go_to_node_set_goal_pos",
		"spawner::go_to_node_using_funcs",
		"spawner::go_to_node_wait_for_player",
		"spawner::go_to_origin",
		"spawner::go_to_spawner_target",
		"spawner::go_to_struct",
		"spawner::kill_spawnernum",
		"spawner::kill_trigger",
		"spawner::ListenForNPCDeaths",
		"spawner::living_ai_prethink",
		"spawner::node_has_radius",
		"spawner::player_saw_kill",
		"spawner::precache_player_weapon_drops",
		"spawner::process_deathflags",
		"spawner::reincrement_count_if_deleted",
		"spawner::release_spawner_target_node",
		"spawner::remove_crawled",
		"spawner::remove_global_spawn_function",
		"spawner::remove_spawner_values",
		"spawner::remove_spawn_function",
		"spawner::remove_spawn_function_ai_group",
		"spawner::replace_on_death",
		"spawner::run_spawn_functions",
		"spawner::set_ai_group_cleared_count",
		"spawner::set_ai_group_cleared_flag",
		"spawner::set_female_percent",
		"spawner::set_goalradius_based_on_settings",
		"spawner::set_goal_volume",
		"spawner::set_targets",
		"spawner::show_actor_damage",
		"spawner::show_bad_path",
		"spawner::show_number_popup",
		"spawner::show_vehicle_damage",
		"spawner::show_xp_popup_for_enemy",
		"spawner::simple_flood_spawn",
		"spawner::simple_spawn",
		"spawner::simple_spawn_single",
		"spawner::spawn",
		"spawner::spawner_targets_init",
		"spawner::spawn_failed",
		"spawner::spawn_grenade_bag",
		"spawner::spawn_guys_until_death_or_no_count",
		"spawner::spawn_prethink",
		"spawner::spawn_think",
		"spawner::spawn_think_action",
		"spawner::spawn_throttle_reset",
		"spawner::teleport_spawned",
		"spawner::Track_NPC_Deaths",
		"spawner::Track_Vehicle_Deaths",
		"spawner::trigger_requires_player",
		"spawner::update_nav_triggers",
		"spawner::update_nav_triggers_for_actor",
		"spawner::update_target_array",
		"spawner::waittillDeathOrPainDeath",
		"spawner::waittill_ai_group_ai_count",
		"spawner::waittill_ai_group_amount_killed",
		"spawner::waittill_ai_group_cleared",
		"spawner::waittill_ai_group_count",
		"spawner::waittill_ai_group_spawner_count",
		"spawner::watches_for_friendly_fire",
		"spawning::create_enemy_influencer",
		"spawning::create_entity_enemy_influencer",
		"spawning::create_entity_friendly_influencer",
		"spawning::create_entity_influencer",
		"spawning::create_entity_masked_enemy_influencer",
		"spawning::create_entity_masked_friendly_influencer",
		"spawning::create_friendly_influencer",
		"spawning::create_grenade_influencers",
		"spawning::create_influencer",
		"spawning::create_map_placed_influencer",
		"spawning::create_map_placed_influencers",
		"spawning::create_player_influencers",
		"spawning::delete_all_spawns",
		"spawning::enable_influencers",
		"spawning::enable_player_influencers",
		"spawning::gatherSpawnPoints",
		"spawning::getSpawnPoint",
		"spawning::get_best_spawnpoint",
		"spawning::get_debug_spawnpoint",
		"spawning::get_enemy_team_mask",
		"spawning::get_friendly_team_mask",
		"spawning::initialSpawnProtection",
		"spawning::init_spawn_system",
		"spawning::is_hardcore",
		"spawning::onDeath",
		"spawning::onGrenadeThrow",
		"spawning::onSpawnPlayer_Unified",
		"spawning::on_joined_team",
		"spawning::on_player_connecting",
		"spawning::on_player_spawned",
		"spawning::player_influencers_set_team",
		"spawning::remove_influencers",
		"spawning::remove_unused_spawn_entities",
		"spawning::spawn_point_class_name_being_used",
		"spawning::teams_have_enmity",
		"spawning::updateAllSpawnPoints",
		"spawning::watch_remove_influencer",
		"spawnlogic::addSpawnPointClassName",
		"spawnlogic::addSpawnPoints",
		"spawnlogic::addSpawnPointsInternal",
		"spawnlogic::addSpawnPointTeamClassName",
		"spawnlogic::allowSpawnDataReading",
		"spawnlogic::avoidSameSpawn",
		"spawnlogic::avoidSpawnReuse",
		"spawnlogic::avoidVisibleEnemies",
		"spawnlogic::avoidWeaponDamage",
		"spawnlogic::badSpawnLine",
		"spawnlogic::checkBad",
		"spawnlogic::checkForSimilarDeaths",
		"spawnlogic::clearSpawnPoints",
		"spawnlogic::deathOccured",
		"spawnlogic::debugNearbyPlayers",
		"spawnlogic::drawSpawnData",
		"spawnlogic::drawSpawnGraph",
		"spawnlogic::dropSpawnPoints",
		"spawnlogic::expandMaxs",
		"spawnlogic::expandMins",
		"spawnlogic::finalizeSpawnpointChoice",
		"spawnlogic::findBoxCenter",
		"spawnlogic::getAllAlliedAndEnemyPlayers",
		"spawnlogic::getAllOtherPlayers",
		"spawnlogic::getBestWeightedSpawnpoint",
		"spawnlogic::getLosPenalty",
		"spawnlogic::getNonTeamMinDist",
		"spawnlogic::getNonTeamSum",
		"spawnlogic::getRandomIntermissionPoint",
		"spawnlogic::getSpawnpointArray",
		"spawnlogic::getSpawnpoint_DM",
		"spawnlogic::getSpawnpoint_Final",
		"spawnlogic::getSpawnpoint_NearTeam",
		"spawnlogic::getSpawnpoint_Random",
		"spawnlogic::getSpawnpoint_Turned",
		"spawnlogic::getTeamSpawnPoints",
		"spawnlogic::initWeights",
		"spawnlogic::isPointVulnerable",
		"spawnlogic::lastMinuteSightTraces",
		"spawnlogic::loopbotspawns",
		"spawnlogic::main",
		"spawnlogic::placeSpawnPoints",
		"spawnlogic::profileDebug",
		"spawnlogic::readSpawnData",
		"spawnlogic::rebuildSpawnPoints",
		"spawnlogic::setupSpawnGraphPoint",
		"spawnlogic::showDeathsDebug",
		"spawnlogic::spawnGraph",
		"spawnlogic::spawnGraphCheck",
		"spawnlogic::spawnGraphLine",
		"spawnlogic::Spawnlogic_Begin",
		"spawnlogic::spawnPerFrameUpdate",
		"spawnlogic::spawnPointInit",
		"spawnlogic::spawnPointUpdate",
		"spawnlogic::spawnPointUpdate_zm",
		"spawnlogic::spawnProfile",
		"spawnlogic::spawnWeightDebug",
		"spawnlogic::storeSpawnData",
		"spawnlogic::strtovec",
		"spawnlogic::updateDeathInfo",
		"spawnlogic::updateDeathInfoDebug",
		"spawnlogic::vectostr",
		"spawnlogic::watchSpawnProfile",
		"spectating::allowSpectateAllTeams",
		"spectating::allowSpectateAllTeamsExceptTeam",
		"spectating::getSplitscreenTeam",
		"spectating::main",
		"spectating::on_joined_spectate",
		"spectating::on_joined_team",
		"spectating::on_player_connecting",
		"spectating::on_player_spawned",
		"spectating::OtherLocalPlayerStillAlive",
		"spectating::setSpectatePermissions",
		"spectating::setSpectatePermissionsForMachine",
		"spectating::updateSpectateSettings",
		"speedburst::gadget_speed_burst_flicker",
		"speedburst::gadget_speed_burst_is_flickering",
		"speedburst::gadget_speed_burst_is_inuse",
		"speedburst::gadget_speed_burst_off",
		"speedburst::gadget_speed_burst_on",
		"speedburst::gadget_speed_burst_on_connect",
		"speedburst::gadget_speed_burst_on_flicker",
		"speedburst::gadget_speed_burst_on_give",
		"speedburst::gadget_speed_burst_on_take",
		"speedburst::set_gadget_status",
		"spider::defaultRole",
		"spider::do_melee_attack",
		"spider::do_ranged_attack",
		"spider::force_get_enemies",
		"spider::GetNextMovePosition_ranged",
		"spider::NO_SWITCH_ON",
		"spider::nudge_collision",
		"spider::path_update_interrupt_melee",
		"spider::prevent_stuck",
		"spider::should_switch_to_melee",
		"spider::should_switch_to_range",
		"spider::spider_callback_damage",
		"spider::spider_get_target_position",
		"spider::spider_initialize",
		"spider::state_death_update",
		"spider::state_driving_update",
		"spider::state_melee_combat_attack",
		"spider::state_melee_combat_update",
		"spider::state_range_combat_attack",
		"spider::state_range_combat_update",
		"spider::switch_to_melee",
		"spike_charge_siegebot::fx_think",
		"spike_charge_siegebot::spawned",
		"spike_charge_siegebot::start_light_fx",
		"spike_charge_siegebot::stop_light_fx",
		"spike_charge_siegebot::watch_bolt_detonation",
		"statemachine::add_interrupt_connection",
		"statemachine::add_state",
		"statemachine::add_utility_connection",
		"statemachine::clear",
		"statemachine::connection_on_notify",
		"statemachine::create",
		"statemachine::debugOn",
		"statemachine::evaluate_connections",
		"statemachine::get_state",
		"statemachine::set_state",
		"statemachine::threadNotifyConnections",
		"sticky_grenade::fullscreen_fx",
		"sticky_grenade::fx_think",
		"sticky_grenade::spawned",
		"sticky_grenade::spawned_spike_charge",
		"sticky_grenade::spike_detonation",
		"sticky_grenade::start_light_fx",
		"sticky_grenade::sticky_indicator",
		"sticky_grenade::stick_indicator_watch_early_shutdown",
		"sticky_grenade::stop_light_fx",
		"sticky_grenade::stop_sound_on_ent_shutdown",
		"sticky_grenade::watch_bolt_detonation",
		"string::rfill",
		"struct::CreateScriptBundleList",
		"struct::CreateStruct",
		"struct::delete",
		"struct::delete_script_bundle",
		"struct::FindStruct",
		"struct::get",
		"struct::get_array",
		"struct::get_script_bundle",
		"struct::get_script_bundles",
		"struct::get_script_bundles_of_type",
		"struct::get_script_bundle_instances",
		"struct::get_script_bundle_list",
		"struct::init",
		"struct::init_structs",
		"struct::spawn",
		"system::exec_post_system",
		"system::exec_pre_system",
		"system::ignore",
		"system::is_system_running",
		"system::register",
		"system::run_post_systems",
		"system::run_pre_systems",
		"system::wait_till",
		"table::load",
		"table::str_to_num",
		"tabun::checkDvarUpdates",
		"tabun::damageEffectArea",
		"tabun::damageInPoisonArea",
		"tabun::deleteEntOnOwnerDeath",
		"tabun::generateLocations",
		"tabun::getcenter",
		"tabun::getCenterOfLocations",
		"tabun::hide_hud",
		"tabun::hitPos",
		"tabun::init_shared",
		"tabun::playTabunSound",
		"tabun::setUpTabunFx",
		"tabun::show_hud",
		"tabun::singleLocation",
		"tabun::spawnAllLocs",
		"tabun::tabun_debug_line",
		"tabun::watchTabunGrenadeDetonation",
		"tabun::watch_death",
		"tacticalinsertion::begin_other_grenade_tracking",
		"tacticalinsertion::cancelTackInsertionButton",
		"tacticalinsertion::cancel_button_press",
		"tacticalinsertion::cancel_button_think",
		"tacticalinsertion::cancel_text_create",
		"tacticalinsertion::checkForPlayerSwitch",
		"tacticalinsertion::destroy_tactical_insertion",
		"tacticalinsertion::fizzle",
		"tacticalinsertion::getTacticalInsertions",
		"tacticalinsertion::init_shared",
		"tacticalinsertion::isTacSpawnTouchingCrates",
		"tacticalinsertion::on_player_spawned",
		"tacticalinsertion::overrideSpawn",
		"tacticalinsertion::pickUp",
		"tacticalinsertion::playFlareFX",
		"tacticalinsertion::spawned",
		"tacticalinsertion::spawnTacticalInsertion",
		"tacticalinsertion::stopflareloopWatcher",
		"tacticalinsertion::tacticalInsertionDestroyedByTrophySystem",
		"tacticalinsertion::waitAndDelete",
		"tacticalinsertion::watch",
		"tacticalinsertion::watchDisconnect",
		"tacticalinsertion::watchTacInsertShutdown",
		"tacticalinsertion::watchUseTrigger",
		"teamgather::mike_debug_line",
		"teamgather::setup_teamgather",
		"thief::disable_hero_gadget_activation",
		"thief::dpad_left_pressed",
		"thief::earnedSpecialistWeapon",
		"thief::failsafe_reenable_offhand_special",
		"thief::gadget_give_random_gadget",
		"thief::gadget_thief_active",
		"thief::gadget_thief_flicker",
		"thief::gadget_thief_is_flickering",
		"thief::gadget_thief_is_inuse",
		"thief::gadget_thief_is_ready",
		"thief::gadget_thief_kill_callback",
		"thief::gadget_thief_on_activate",
		"thief::gadget_thief_on_connect",
		"thief::gadget_thief_on_deactivate",
		"thief::gadget_thief_on_flicker",
		"thief::gadget_thief_on_give",
		"thief::gadget_thief_on_player_spawn",
		"thief::gadget_thief_on_take",
		"thief::getStolenHeroWeapon",
		"thief::getThiefPowerGain",
		"thief::GetVictimBodyIndex",
		"thief::giveFlipWeapon",
		"thief::givePreviouslyEarnedSpecialistWeapon",
		"thief::handleStolenScoreEvent",
		"thief::handleThiefKill",
		"thief::resetFlashStartAndEndAfterDelay",
		"thief::setup_gadget_thief_array",
		"thief::set_gadget_status",
		"thief::spawnThiefBeamEffect",
		"thief::waitthendelete",
		"thief::watchForHeroKill",
		"thief::watchForOptionUse",
		"thief::watchGadgetActivated",
		"thief::watchHeroWeaponChanged",
		"thief::watch_entity_shutdown",
		"ThrasherBehavior::thrasherShouldMelee",
		"ThrasherClientUtils::thrasherProcessFootstep",
		"ThrasherInterface::RegisterThrasherInterfaceAttributes",
		"ThrasherServerUtils::check_revive_after_consumed",
		"ThrasherServerUtils::thrasherCanBeRevived",
		"ThrasherServerUtils::thrasherConsumePlayerUtil",
		"ThrasherServerUtils::thrasherCreatePlayerClone",
		"ThrasherServerUtils::thrasherDamageCallback",
		"ThrasherServerUtils::thrasherGoBerserk",
		"ThrasherServerUtils::thrasherHideFromPlayer",
		"ThrasherServerUtils::thrasherHidePlayerBody",
		"ThrasherServerUtils::thrasherHidePoppedPustules",
		"ThrasherServerUtils::thrasherKillThrasherOnAutoRevive",
		"ThrasherServerUtils::thrasherKnockdownZombie",
		"ThrasherServerUtils::thrasherMoveModeAttributeCallback",
		"ThrasherServerUtils::thrasherPlayerDeath",
		"ThrasherServerUtils::thrasherReleasePlayer",
		"ThrasherServerUtils::thrasherRestorePustule",
		"ThrasherServerUtils::thrasherSporeDamageCallback",
		"ThrasherServerUtils::thrasherStartTraverse",
		"ThrasherServerUtils::thrasherTeleport",
		"ThrasherServerUtils::thrasherTerminateTraverse",
		"traps::precache_all",
		"traps::setup_all_traps",
		"trigger::add_function",
		"trigger::add_tokens_to_trigger_flags",
		"trigger::add_to_ent",
		"trigger::check_spawnflags",
		"trigger::death_monitor",
		"trigger::delete_links_then_self",
		"trigger::delete_link_chain",
		"trigger::display_hint",
		"trigger::ent_already_in",
		"trigger::flag_clear_trigger",
		"trigger::flag_set_touching",
		"trigger::flag_set_trigger",
		"trigger::friendly_respawn_clear",
		"trigger::friendly_respawn_trigger",
		"trigger::function_thread",
		"trigger::get_all",
		"trigger::get_script_linkto_targets",
		"trigger::get_trigger_look_target",
		"trigger::init_flags",
		"trigger::is_look_trigger",
		"trigger::is_trigger_once",
		"trigger::kill_spawner_trigger",
		"trigger::multiple_wait",
		"trigger::multiple_waits",
		"trigger::no_crouch_or_prone_think",
		"trigger::no_prone_think",
		"trigger::remove_from_ent",
		"trigger::report_trigger",
		"trigger::script_flag_false_trigger",
		"trigger::script_flag_set_touching",
		"trigger::script_flag_true_trigger",
		"trigger::set_flag_permissions",
		"trigger::trigger_delete_on_touch",
		"trigger::trigger_exploder",
		"trigger::trigger_group",
		"trigger::trigger_group_remove",
		"trigger::trigger_hint",
		"trigger::trigger_look",
		"trigger::trigger_notify",
		"trigger::trigger_once",
		"trigger::trigger_on_timeout",
		"trigger::trigger_spawner",
		"trigger::trigger_spawner_spawn",
		"trigger::trigger_turns_off",
		"trigger::trigger_unlock",
		"trigger::trigger_unlock_death",
		"trigger::update_based_on_flags",
		"trigger::use",
		"trigger::wait_for_an_unlocked_trigger",
		"trigger::wait_for_either",
		"trigger::wait_or_timeout",
		"trophy_system::ammo_get",
		"trophy_system::ammo_reset",
		"trophy_system::ammo_scavenger",
		"trophy_system::ammo_weapon_hacked",
		"trophy_system::ammo_weapon_pickup",
		"trophy_system::createTrophySystemWatcher",
		"trophy_system::init_shared",
		"trophy_system::onTrophySystemSmashed",
		"trophy_system::onTrophySystemSpawn",
		"trophy_system::projectileExplode",
		"trophy_system::register",
		"trophy_system::setReconModelDeployed",
		"trophy_system::trophyActive",
		"trophy_system::trophyDestroyTacInsert",
		"trophy_system::trophySystemDetonate",
		"trophy_system::trophyWatchHack",
		"trophy_system::trophy_rolling_anim",
		"trophy_system::trophy_state_change",
		"trophy_system::trophy_state_change_recon",
		"trophy_system::trophy_stationary_anim",
		"trophy_system::watchTrophySystemDamage",
		"turret::add_priority_target",
		"turret::can_hit_target",
		"turret::clear_ignore_ent_array",
		"turret::clear_target",
		"turret::clear_target_ent_array",
		"turret::disable",
		"turret::disable_ai_getoff",
		"turret::does_have_target",
		"turret::does_have_user",
		"turret::does_need_user",
		"turret::emp_watcher",
		"turret::enable",
		"turret::enable_auto_use",
		"turret::enable_emp",
		"turret::enable_laser",
		"turret::field_toggle_lensflare",
		"turret::fire",
		"turret::fire_for_time",
		"turret::get_parent",
		"turret::get_target",
		"turret::get_team",
		"turret::get_user",
		"turret::get_weapon",
		"turret::has_turret",
		"turret::is_current_user",
		"turret::is_target",
		"turret::is_target_in_view",
		"turret::is_turret_enabled",
		"turret::laser_death_watcher",
		"turret::pause",
		"turret::set_best_target_func",
		"turret::set_best_target_func_from_weapon_type",
		"turret::set_burst_parameters",
		"turret::set_ignore_ent_array",
		"turret::set_ignore_line_of_sight",
		"turret::set_max_target_distance",
		"turret::set_min_target_distance",
		"turret::set_min_target_distance_squared",
		"turret::set_occupy_no_target_time",
		"turret::set_on_target_angle",
		"turret::set_target",
		"turret::set_target_ent_array",
		"turret::set_target_flags",
		"turret::set_target_leading",
		"turret::set_team",
		"turret::set_torso_targetting",
		"turret::shoot_at_target",
		"turret::shoot_at_target_once",
		"turret::stop",
		"turret::toggle_lensflare",
		"turret::trace_test",
		"turret::track_lens_flare",
		"turret::unpause",
		"turret::watch_for_flash",
		"turret::watch_for_flash_and_stun",
		"turret_gadget_deploy::alert_sound",
		"turret_gadget_deploy::boot_sound",
		"turret_gadget_deploy::has_enough_power",
		"turret_gadget_deploy::has_visible_target",
		"turret_gadget_deploy::hud_marker_create",
		"turret_gadget_deploy::scan_sound",
		"turret_gadget_deploy::TurretCallback_VehicleDamage",
		"turret_gadget_deploy::turret_gadget_deploy_emped",
		"turret_gadget_deploy::turret_gadget_deploy_fireupdate",
		"turret_gadget_deploy::turret_gadget_deploy_fireupdate_old",
		"turret_gadget_deploy::turret_gadget_deploy_fire_for_time",
		"turret_gadget_deploy::turret_gadget_deploy_main",
		"turret_gadget_deploy::turret_gadget_deploy_off",
		"turret_gadget_deploy::turret_gadget_deploy_on",
		"turret_gadget_deploy::turret_gadget_deploy_scripted",
		"turret_gadget_deploy::turret_gadget_deploy_start_ai",
		"turret_gadget_deploy::turret_gadget_deploy_start_scripted",
		"turret_gadget_deploy::turret_gadget_deploy_think",
		"tweakables::getTweakableDVar",
		"tweakables::getTweakableDVarValue",
		"tweakables::getTweakableLastValue",
		"tweakables::getTweakableValue",
		"tweakables::registerTweakable",
		"tweakables::setClientTweakable",
		"tweakables::setTweakableLastValue",
		"tweakables::setTweakableValue",
		"tweakables::updateServerDvar",
		"tweakables::updateUITweakables",
		"util::add_listen_thread",
		"util::add_listen_thread_internal",
		"util::add_queued_debug_command",
		"util::add_remove_list",
		"util::add_trigger_to_ent",
		"util::ads_button_held",
		"util::alert_notify_wrapper",
		"util::anyTeamHitRoundLimitWithDraws",
		"util::anyTeamHitRoundWinLimit",
		"util::any_player_is_touching",
		"util::any_team_hit_round_score_limit",
		"util::any_team_hit_score_limit",
		"util::array_copy_if_array",
		"util::array_ent_thread",
		"util::attack_button_held",
		"util::auto_delete",
		"util::break_glass",
		"util::brush_delete",
		"util::brush_show",
		"util::brush_throw",
		"util::button_held_think",
		"util::button_right_held",
		"util::call_func",
		"util::clean_deleted",
		"util::clearLowerMessage",
		"util::clientNotify",
		"util::coopGame",
		"util::create_flags_and_return_tokens",
		"util::damage_notify_wrapper",
		"util::death_notify_wrapper",
		"util::debug_line",
		"util::debug_magic_bullet_shield_death",
		"util::debug_sphere",
		"util::debug_spherical_cone",
		"util::debug_star",
		"util::delay",
		"util::delayed_delete",
		"util::delayed_notify",
		"util::delay_network_frames",
		"util::delay_notify",
		"util::deleteAfterTime",
		"util::deleteAfterTimeAndNetworkFrame",
		"util::deleteAfterTimeThread",
		"util::delete_on_death",
		"util::delete_on_death_or_notify",
		"util::DoMaxDamage",
		"util::down_button_held",
		"util::down_button_pressed",
		"util::do_chyron_text",
		"util::drawcylinder",
		"util::drawcylinder_think",
		"util::draw_debug_line",
		"util::empty",
		"util::ent_already_in_trigger",
		"util::error",
		"util::explode_notify_wrapper",
		"util::field_set_lighting_ent",
		"util::field_use_lighting_ent",
		"util::fileprint_chk",
		"util::fileprint_end",
		"util::fileprint_map_entity_end",
		"util::fileprint_map_entity_start",
		"util::fileprint_map_header",
		"util::fileprint_map_keypairprint",
		"util::fileprint_map_start",
		"util::fileprint_radiant_vec",
		"util::fileprint_start",
		"util::freeze_player_controls",
		"util::friend_not_foe",
		"util::friend_not_foe_team",
		"util::getClientSysState",
		"util::GetCurrentGameMode",
		"util::getfx",
		"util::getHostPlayer",
		"util::getHostPlayerForBots",
		"util::getLastWeapon",
		"util::getNextObjID",
		"util::getObjectiveHintText",
		"util::getObjectiveScoreText",
		"util::getObjectiveText",
		"util::getOtherTeam",
		"util::getOtherTeamsMask",
		"util::getOtherTeamsRoundsWon",
		"util::getPlayerFromClientNum",
		"util::GetPlaySpaceCenter",
		"util::GetPlaySpaceMaxWidth",
		"util::getRemoteName",
		"util::getRoundsPlayed",
		"util::getRoundsWon",
		"util::getRoundWinLimitWinningTeam",
		"util::getStatsTableName",
		"util::getTeamMask",
		"util::getWeaponClass",
		"util::get_all_alive_players_s",
		"util::get_array_of_closest",
		"util::get_closest_player",
		"util::get_current_round_score_limit",
		"util::get_dvar_float_default",
		"util::get_dvar_int_default",
		"util::get_elapsed_time",
		"util::get_eye",
		"util::get_next_safehouse",
		"util::get_other_teams_alive_players_s",
		"util::get_other_teams_rounds_won",
		"util::get_player_height",
		"util::get_rounds_played",
		"util::get_rounds_won",
		"util::get_start_time",
		"util::get_team_alive_players_s",
		"util::get_time",
		"util::get_time_frac",
		"util::get_time_in_seconds",
		"util::get_time_left",
		"util::get_weapon_by_name",
		"util::ground_position",
		"util::has_awareness_perk_purchased_and_equipped",
		"util::has_blind_eye_perk_purchased_and_equipped",
		"util::has_cold_blooded_perk_purchased_and_equipped",
		"util::has_fast_hands_perk_purchased_and_equipped",
		"util::has_flak_jacket_perk_purchased_and_equipped",
		"util::has_ghost_perk_purchased_and_equipped",
		"util::has_gung_ho_perk_purchased_and_equipped",
		"util::has_hacker_perk_purchased_and_equipped",
		"util::has_hard_wired_perk_purchased_and_equipped",
		"util::has_jetquiet_perk_purchased_and_equipped",
		"util::has_ninja_perk_purchased_and_equipped",
		"util::has_purchased_perk_equipped",
		"util::has_purchased_perk_equipped_with_specific_stat",
		"util::has_scavenger_perk_purchased_and_equipped",
		"util::has_tactical_mask_purchased_and_equipped",
		"util::has_toughness_perk_purchased_and_equipped",
		"util::hitRoundLimit",
		"util::hitRoundScoreLimit",
		"util::hitRoundWinLimit",
		"util::hitScoreLimit",
		"util::init_button_wrappers",
		"util::init_utility",
		"util::IsBulletImpactMOD",
		"util::IsEnemyPlayer",
		"util::isFirstRound",
		"util::isFlashbanged",
		"util::isFlashed",
		"util::isHacked",
		"util::isKillStreaksEnabled",
		"util::isLastRound",
		"util::isOneRound",
		"util::isPressBuild",
		"util::isRankEnabled",
		"util::isRoundBased",
		"util::isStrStart",
		"util::isStunned",
		"util::isUsabilityEnabled",
		"util::isUsingRemote",
		"util::isWeaponEnabled",
		"util::is_ads",
		"util::is_bot",
		"util::is_female",
		"util::is_first_round",
		"util::is_flashbanged",
		"util::is_german_build",
		"util::is_gib_restricted_build",
		"util::is_item_purchased",
		"util::is_killstreaks_enabled",
		"util::is_lastround",
		"util::is_looking_at",
		"util::is_mature",
		"util::is_new_cp_map",
		"util::is_one_round",
		"util::is_player_looking_at",
		"util::is_player_view_linked_to_entity",
		"util::is_primary_damage",
		"util::is_round_based",
		"util::is_safehouse",
		"util::is_time_left",
		"util::is_valid_type_for_callback",
		"util::lerp_dvar",
		"util::local_players_entity_thread",
		"util::local_player_entity_thread",
		"util::local_player_trigger_thread_always_exit",
		"util::magic_bullet_shield",
		"util::mayApplyScreenEffect",
		"util::melee_notify_wrapper",
		"util::new_func",
		"util::new_timer",
		"util::note_elapsed_time",
		"util::orient_to_normal",
		"util::player_lock_control",
		"util::player_set_chyron_menu",
		"util::player_unlock_control",
		"util::playSoundOnPlayers",
		"util::plot_points",
		"util::PositionQuery_PointArray",
		"util::printAndSoundOnEveryone",
		"util::printBoldOnTeam",
		"util::printBoldOnTeamArg",
		"util::printOnPlayers",
		"util::printOnTeam",
		"util::printOnTeamArg",
		"util::query_ents",
		"util::queued_debug_commands",
		"util::registerClientSys",
		"util::registerNumLives",
		"util::registerRoundLimit",
		"util::registerRoundSwitch",
		"util::registerRoundWinLimit",
		"util::registerScoreLimit",
		"util::registerSystem",
		"util::registerTimeLimit",
		"util::register_system",
		"util::releaseObjID",
		"util::remove_trigger_from_ent",
		"util::resetUsability",
		"util::script_delay",
		"util::script_wait",
		"util::serverTime",
		"util::server_wait",
		"util::setClientSysState",
		"util::setLowerMessage",
		"util::setLowerMessageValue",
		"util::setObjectiveHintText",
		"util::setObjectiveScoreText",
		"util::setObjectiveText",
		"util::setUsingRemote",
		"util::set_console_status",
		"util::set_dvar_float_if_unset",
		"util::set_dvar_if_unset",
		"util::set_dvar_int_if_unset",
		"util::set_lighting_state",
		"util::set_sun_shadow_split_distance",
		"util::shoot_notify_wrapper",
		"util::show_hud",
		"util::single_func",
		"util::single_thread",
		"util::spawn_anim_model",
		"util::spawn_anim_player_model",
		"util::spawn_array_struct",
		"util::spawn_model",
		"util::spawn_player_arms",
		"util::spawn_player_clone",
		"util::stance_button_held",
		"util::stop_magic_bullet_shield",
		"util::streamer_wait",
		"util::str_strip_lh",
		"util::timeout",
		"util::timer_wait",
		"util::totalPlayerCount",
		"util::track",
		"util::trackDoubleJumpDistance",
		"util::trackSprintDistance",
		"util::trackWallRunningDistance",
		"util::trigger_thread",
		"util::up_button_held",
		"util::up_button_pressed",
		"util::use_button_held",
		"util::waitforallclients",
		"util::waitforclient",
		"util::waitForTime",
		"util::waitForTimeAndNetworkFrame",
		"util::waitRespawnButton",
		"util::waittillend",
		"util::WaitTillEndOnThreaded",
		"util::waitTillNotMoving",
		"util::waitTillRollingOrNotMoving",
		"util::WaitTillSlowProcessAllowed",
		"util::waittill_ads_button_pressed",
		"util::waittill_any",
		"util::waittill_any_array",
		"util::waittill_any_array_return",
		"util::waittill_any_ents",
		"util::waittill_any_ents_two",
		"util::waittill_any_ex",
		"util::waittill_any_return",
		"util::waittill_any_timeout",
		"util::waittill_asset_loaded",
		"util::waittill_attack_button_pressed",
		"util::waittill_dobj",
		"util::waittill_down_button_pressed",
		"util::waittill_either",
		"util::waittill_level_any_timeout",
		"util::waittill_level_string",
		"util::waittill_multiple",
		"util::waittill_multiple_ents",
		"util::waittill_notify_or_timeout",
		"util::waittill_player_looking_at",
		"util::waittill_player_not_looking_at",
		"util::waittill_stance_button_held",
		"util::waittill_stance_button_pressed",
		"util::waittill_string",
		"util::waittill_up_button_pressed",
		"util::waittill_use_button_held",
		"util::waittill_use_button_pressed",
		"util::waittill_vehicle_move_up_button_pressed",
		"util::wait_endon",
		"util::wait_network_frame",
		"util::wait_till_not_touching",
		"util::warning",
		"util::wasLastRound",
		"util::within_fov",
		"vehicle::addAnimToList",
		"vehicle::addFxAndTagToLists",
		"vehicle::add_hijack_function",
		"vehicle::add_main_callback",
		"vehicle::add_proccess_trigger",
		"vehicle::add_spawn_function",
		"vehicle::add_spawn_function_by_type",
		"vehicle::add_to_target_group",
		"vehicle::add_vehicletype_callback",
		"vehicle::aircraft_dustkick",
		"vehicle::aircraft_dust_kickup",
		"vehicle::ai_should_be_added",
		"vehicle::ambient_anim_toggle",
		"vehicle::array_2d_add",
		"vehicle::attacker_is_on_my_team",
		"vehicle::attacker_troop_is_on_my_team",
		"vehicle::attack_group_think",
		"vehicle::build_drive",
		"vehicle::bullet_shielded",
		"vehicle::can_get_in",
		"vehicle::claim_position",
		"vehicle::connect_paths",
		"vehicle::control_lights_groups",
		"vehicle::crash_derailed_check",
		"vehicle::crash_detour_check",
		"vehicle::create_from_spawngroup_and_go_path",
		"vehicle::damage_filter_disable",
		"vehicle::damage_filter_enable",
		"vehicle::damage_filter_heavy",
		"vehicle::damage_filter_light",
		"vehicle::damage_filter_off",
		"vehicle::debug_resume",
		"vehicle::debug_set_speed",
		"vehicle::debug_vehicle",
		"vehicle::debug_vehicle_paths",
		"vehicle::delayed_fx_thread",
		"vehicle::delete_alert_lights",
		"vehicle::delete_rider_asap",
		"vehicle::detach_getoutrigs",
		"vehicle::detach_path",
		"vehicle::disconnect_paths",
		"vehicle::do_death_dynents",
		"vehicle::do_death_fx",
		"vehicle::do_gib_dynents",
		"vehicle::enable_auto_disconnect_path",
		"vehicle::enable_turrets",
		"vehicle::exit_ground",
		"vehicle::exit_high_loop_anim",
		"vehicle::exit_low",
		"vehicle::exit_variable",
		"vehicle::field_death_spawn_dynents",
		"vehicle::field_do_deathfx",
		"vehicle::field_do_empdeathfx",
		"vehicle::field_do_standarddeathfx",
		"vehicle::field_gib_spawn_dynents",
		"vehicle::field_toggle_ambient_anim_handler1",
		"vehicle::field_toggle_ambient_anim_handler2",
		"vehicle::field_toggle_ambient_anim_handler3",
		"vehicle::field_toggle_ambient_anim_handler4",
		"vehicle::field_toggle_burn",
		"vehicle::field_toggle_dnidamagefx",
		"vehicle::field_toggle_emp",
		"vehicle::field_toggle_exhaustfx_handler",
		"vehicle::field_toggle_lights_group_handler1",
		"vehicle::field_toggle_lights_group_handler2",
		"vehicle::field_toggle_lights_group_handler3",
		"vehicle::field_toggle_lights_group_handler4",
		"vehicle::field_toggle_lights_handler",
		"vehicle::field_toggle_lockon_handler",
		"vehicle::field_toggle_sounds",
		"vehicle::field_toggle_treadfx",
		"vehicle::field_update_alert_level",
		"vehicle::field_update_damage_state",
		"vehicle::field_use_engine_damage_sounds",
		"vehicle::find_next_open_position",
		"vehicle::friendly_fire_shield",
		"vehicle::friendly_fire_shield_callback",
		"vehicle::get_bundle",
		"vehicle::get_bundle_for_ai",
		"vehicle::get_closest_attacker_with_missile_locked_on_to_me",
		"vehicle::get_dummy",
		"vehicle::get_from_entity",
		"vehicle::get_from_entity_target",
		"vehicle::get_from_spawnstruct",
		"vehicle::get_from_spawnstruct_target",
		"vehicle::get_height",
		"vehicle::get_in",
		"vehicle::get_nearest_target",
		"vehicle::get_normal_anim_time",
		"vehicle::get_off_path",
		"vehicle::get_on_and_go_path",
		"vehicle::get_on_path",
		"vehicle::get_out",
		"vehicle::get_rider",
		"vehicle::get_rider_info",
		"vehicle::get_robot_bundle",
		"vehicle::get_vehiclenode_any_dynamic",
		"vehicle::god_off",
		"vehicle::god_on",
		"vehicle::go_path",
		"vehicle::handle_rider_death",
		"vehicle::has_helicopter_dust_kickup",
		"vehicle::impact_fx",
		"vehicle::init",
		"vehicle::init_damage_filter",
		"vehicle::init_target_group",
		"vehicle::islastnode",
		"vehicle::is_cheap",
		"vehicle::is_corpse",
		"vehicle::is_destructible",
		"vehicle::is_node_script_origin",
		"vehicle::is_node_script_struct",
		"vehicle::is_on",
		"vehicle::is_seat_available",
		"vehicle::is_unload_node",
		"vehicle::kill_exhaust_watcher",
		"vehicle::kill_rider",
		"vehicle::kill_treads_forever",
		"vehicle::kill_vehicle",
		"vehicle::land",
		"vehicle::levelstuff",
		"vehicle::liftoff",
		"vehicle::lights_group_toggle",
		"vehicle::lights_off",
		"vehicle::lights_on",
		"vehicle::maingun_fx",
		"vehicle::monitor_damage_as_occupant",
		"vehicle::monitor_missiles_locked_on_to_me",
		"vehicle::node_trigger_process",
		"vehicle::on_ai_spawned",
		"vehicle::on_vehicle_killed",
		"vehicle::on_vehicle_spawned",
		"vehicle::paths",
		"vehicle::path_detour",
		"vehicle::path_detour_get_detourpath",
		"vehicle::path_detour_script_origin",
		"vehicle::path_gate_open",
		"vehicle::path_gate_wait_till_open",
		"vehicle::pause_path",
		"vehicle::player_is_driver",
		"vehicle::play_exhaust",
		"vehicle::play_looped_fx_on_tag",
		"vehicle::play_vehicle_anim",
		"vehicle::print_debug_info",
		"vehicle::print_resume_speed",
		"vehicle::ragdoll_dead_exit_rider",
		"vehicle::remove_from_target_group",
		"vehicle::remove_riders_after_wait",
		"vehicle::resume_path",
		"vehicle::resume_path_vehicle",
		"vehicle::rider_walk_setup",
		"vehicle::rumble",
		"vehicle::script_resume_speed",
		"vehicle::seat_position_to_index",
		"vehicle::setup_dvars",
		"vehicle::setup_dynamic_detour",
		"vehicle::setup_groundnode_detour",
		"vehicle::setup_level_vars",
		"vehicle::setup_nodes",
		"vehicle::setup_script_gatetrigger",
		"vehicle::setup_spawners",
		"vehicle::setup_targetname_spawners",
		"vehicle::setup_triggers",
		"vehicle::set_alert_fx_level",
		"vehicle::set_damage_fx_level",
		"vehicle::set_goal",
		"vehicle::set_goal_pos",
		"vehicle::set_speed",
		"vehicle::set_static_postfxbundle",
		"vehicle::set_variables",
		"vehicle::set_vehicleriders_bundle",
		"vehicle::set_vehicle_drivable_time",
		"vehicle::set_vehicle_drivable_time_starting_now",
		"vehicle::ShouldChangeScreenPostFx",
		"vehicle::should_update_damage_fx_level",
		"vehicle::show_node_debug_info",
		"vehicle::simple_spawn",
		"vehicle::simple_spawn_and_drive",
		"vehicle::simple_spawn_single",
		"vehicle::simple_spawn_single_and_drive",
		"vehicle::sort_by_startingpos",
		"vehicle::spawn",
		"vehicle::spawned_callback",
		"vehicle::spawn_riders",
		"vehicle::spline_debug",
		"vehicle::stop_exhaust",
		"vehicle::stop_monitor_damage_as_occupant",
		"vehicle::stop_monitor_missiles_locked_on_to_me",
		"vehicle::toggle_ambient_anim_group",
		"vehicle::toggle_burn_fx",
		"vehicle::toggle_emp_fx",
		"vehicle::toggle_exhaust_fx",
		"vehicle::toggle_flir_postfxbundle",
		"vehicle::toggle_fx_bundle",
		"vehicle::toggle_lights_group",
		"vehicle::toggle_sounds",
		"vehicle::toggle_tread_fx",
		"vehicle::trigger_process",
		"vehicle::unclaim_position",
		"vehicle::unload",
		"vehicle::unload_node",
		"vehicle::unload_node_helicopter",
		"vehicle::update_damage_as_occupant",
		"vehicle::update_damage_fx_level",
		"vehicle::update_ui_fullscreen_filter_model",
		"vehicle::vehicle_get_occupant_team",
		"vehicle::vehicle_spawner_tool",
		"vehicle::wait_for_DObj",
		"vehicle::wait_till_stable",
		"vehicle::weapon_fired",
		"vehicle_ai::AddCooldownTime",
		"vehicle_ai::add_interrupt_connection",
		"vehicle_ai::add_state",
		"vehicle_ai::add_utility_connection",
		"vehicle_ai::blink_lights_for_time",
		"vehicle_ai::burning_death",
		"vehicle_ai::burning_death_fx",
		"vehicle_ai::burning_thread",
		"vehicle_ai::Callback_VehicleKilled",
		"vehicle_ai::call_custom_add_state_callbacks",
		"vehicle_ai::CanSeeEnemyFromPosition",
		"vehicle_ai::ClearAllCooldowns",
		"vehicle_ai::ClearAllLookingAndTargeting",
		"vehicle_ai::ClearAllMovement",
		"vehicle_ai::ClearCooldown",
		"vehicle_ai::collision_fx",
		"vehicle_ai::Cooldown",
		"vehicle_ai::CooldownInit",
		"vehicle_ai::death_radius_damage_special",
		"vehicle_ai::DebugScore",
		"vehicle_ai::defaultstate_combat_enter",
		"vehicle_ai::defaultstate_combat_exit",
		"vehicle_ai::defaultstate_death_enter",
		"vehicle_ai::defaultstate_death_update",
		"vehicle_ai::defaultstate_driving_enter",
		"vehicle_ai::defaultstate_driving_exit",
		"vehicle_ai::defaultstate_emped_enter",
		"vehicle_ai::defaultstate_emped_exit",
		"vehicle_ai::defaultstate_emped_reenter",
		"vehicle_ai::defaultstate_emped_update",
		"vehicle_ai::defaultstate_off_enter",
		"vehicle_ai::defaultstate_off_exit",
		"vehicle_ai::defaultstate_pain_enter",
		"vehicle_ai::defaultstate_pain_exit",
		"vehicle_ai::defaultstate_scripted_enter",
		"vehicle_ai::defaultstate_scripted_exit",
		"vehicle_ai::defaultstate_surge_enter",
		"vehicle_ai::defaultstate_surge_exit",
		"vehicle_ai::defaultstate_surge_update",
		"vehicle_ai::default_death",
		"vehicle_ai::detonate",
		"vehicle_ai::DistancePointToEngagementHeight",
		"vehicle_ai::emped_death",
		"vehicle_ai::emp_death_fx",
		"vehicle_ai::emp_startup_fx",
		"vehicle_ai::EntityIsArchetype",
		"vehicle_ai::evaluate_connections",
		"vehicle_ai::FindNewPosition",
		"vehicle_ai::FireTurret",
		"vehicle_ai::fire_for_rounds",
		"vehicle_ai::fire_for_time",
		"vehicle_ai::flash_team_switching_lights",
		"vehicle_ai::GetCooldownLeft",
		"vehicle_ai::GetCooldownTimeRaw",
		"vehicle_ai::GetEnemyTarget",
		"vehicle_ai::GetTargetEyeOffset",
		"vehicle_ai::GetTargetPos",
		"vehicle_ai::get_current_state",
		"vehicle_ai::get_death_type",
		"vehicle_ai::get_next_state",
		"vehicle_ai::get_previous_state",
		"vehicle_ai::get_state_callbacks",
		"vehicle_ai::get_state_callbacks_for_role",
		"vehicle_ai::gibbed_death",
		"vehicle_ai::iff_notifyMeInNSec",
		"vehicle_ai::iff_override",
		"vehicle_ai::iff_override_team_switch_behavior",
		"vehicle_ai::immolate",
		"vehicle_ai::InitThreatBias",
		"vehicle_ai::init_state_machine_for_role",
		"vehicle_ai::IsCooldownReady",
		"vehicle_ai::is_instate",
		"vehicle_ai::Javelin_LoseTargetAtRightTime",
		"vehicle_ai::level_out_for_landing",
		"vehicle_ai::nudge_collision",
		"vehicle_ai::on_death_cleanup",
		"vehicle_ai::owner_in_line_of_fire",
		"vehicle_ai::path_update_interrupt",
		"vehicle_ai::PositionQuery_DebugScores",
		"vehicle_ai::PositionQuery_Filter_DistAwayFromTarget",
		"vehicle_ai::PositionQuery_Filter_EngagementDist",
		"vehicle_ai::PositionQuery_Filter_EngagementHeight",
		"vehicle_ai::PositionQuery_Filter_OutOfGoalAnchor",
		"vehicle_ai::PositionQuery_Filter_Random",
		"vehicle_ai::PositionQuery_PostProcess_RemoveOutOfGoalRadius",
		"vehicle_ai::PositionQuery_PostProcess_SortScore",
		"vehicle_ai::predicted_collision",
		"vehicle_ai::RegisterSharedInterfaceAttributes",
		"vehicle_ai::register_custom_add_state_callback",
		"vehicle_ai::SetTurretTarget",
		"vehicle_ai::set_role",
		"vehicle_ai::set_state",
		"vehicle_ai::shared_callback_damage",
		"vehicle_ai::should_burn",
		"vehicle_ai::should_emp",
		"vehicle_ai::StartInitialState",
		"vehicle_ai::start_scripted",
		"vehicle_ai::stop_scripted",
		"vehicle_ai::swap_team_after_time",
		"vehicle_ai::target_hijackers",
		"vehicle_ai::throw_off_balance",
		"vehicle_ai::TimeSince",
		"vehicle_ai::try_detonate",
		"vehicle_ai::TurnOff",
		"vehicle_ai::TurnOffAllAmbientAnims",
		"vehicle_ai::TurnOffAllLightsAndLaser",
		"vehicle_ai::TurnOn",
		"vehicle_ai::UpdatePersonalThreatBias_AttackerLockedOnToMe",
		"vehicle_ai::UpdatePersonalThreatBias_AttackerLockingOnToMe",
		"vehicle_ai::UpdatePersonalThreatBias_Bots",
		"vehicle_ai::UpdatePersonalThreatBias_ViaClientFlags",
		"vehicle_ai::waittill_asm_complete",
		"vehicle_ai::waittill_asm_terminated",
		"vehicle_ai::waittill_asm_timeout",
		"vehicle_ai::waittill_pathing_done",
		"vehicle_ai::waittill_pathresult",
		"vehicle_death::aircraft_crash",
		"vehicle_death::aircraft_crash_move",
		"vehicle_death::barrel_rolling_crash",
		"vehicle_death::boat_crash",
		"vehicle_death::boat_crash_monitor",
		"vehicle_death::boat_crash_movement",
		"vehicle_death::CleanUp",
		"vehicle_death::crash_collision_test",
		"vehicle_death::crash_path_check",
		"vehicle_death::crash_stop",
		"vehicle_death::deathfx_ent",
		"vehicle_death::deathrolloff",
		"vehicle_death::deathrollon",
		"vehicle_death::death_cleanup_level_variables",
		"vehicle_death::death_cleanup_riders",
		"vehicle_death::death_firesound",
		"vehicle_death::death_fire_loop_audio",
		"vehicle_death::death_fx",
		"vehicle_death::death_jolt",
		"vehicle_death::death_make_badplace",
		"vehicle_death::death_radius_damage",
		"vehicle_death::death_update_crash",
		"vehicle_death::DelayedRemove_thread",
		"vehicle_death::delay_set_gravity",
		"vehicle_death::DeleteWhenSafe",
		"vehicle_death::do_scripted_crash",
		"vehicle_death::flipping_shooting_crash_accel",
		"vehicle_death::flipping_shooting_crash_movement",
		"vehicle_death::flipping_shooting_death",
		"vehicle_death::flipping_shooting_dmg_snd",
		"vehicle_death::FreeWhenSafe",
		"vehicle_death::helicopter_collision",
		"vehicle_death::helicopter_crash",
		"vehicle_death::helicopter_crash_accel",
		"vehicle_death::helicopter_crash_move",
		"vehicle_death::helicopter_crash_movement",
		"vehicle_death::helicopter_crash_rotation",
		"vehicle_death::helicopter_crash_zone_accel",
		"vehicle_death::helicopter_explode",
		"vehicle_death::loop_fx_on_vehicle_tag",
		"vehicle_death::main",
		"vehicle_death::plane_crash",
		"vehicle_death::play_crashing_loop",
		"vehicle_death::play_death_audio",
		"vehicle_death::play_spinning_plane_sound",
		"vehicle_death::random_crash",
		"vehicle_death::set_death_model",
		"vehicle_death::set_movement_and_accel",
		"vehicle_death::vehicle_damage_filter",
		"vehicle_death::vehicle_damage_filter_damage_watcher",
		"vehicle_death::vehicle_damage_filter_exit_watcher",
		"vehicle_death::waittill_crash_done_or_stopped",
		"visionset_mgr::activate",
		"visionset_mgr::activate_per_player",
		"visionset_mgr::add_info",
		"visionset_mgr::add_sorted_name_key",
		"visionset_mgr::add_sorted_priority_key",
		"visionset_mgr::calc_ramp_in_lerp",
		"visionset_mgr::calc_remaining_duration_lerp",
		"visionset_mgr::clear_poison_overlay",
		"visionset_mgr::deactivate",
		"visionset_mgr::deactivate_per_player",
		"visionset_mgr::demo_jump_monitor",
		"visionset_mgr::demo_spectate_monitor",
		"visionset_mgr::duration_lerp_thread",
		"visionset_mgr::duration_lerp_thread_per_player",
		"visionset_mgr::finalize_clientfields",
		"visionset_mgr::finalize_initialization",
		"visionset_mgr::finalize_type_clientfields",
		"visionset_mgr::fog_vol_to_visionset_force_instant_transition",
		"visionset_mgr::fog_vol_to_visionset_hostmigration_monitor",
		"visionset_mgr::fog_vol_to_visionset_instant_transition_monitor",
		"visionset_mgr::fog_vol_to_visionset_monitor",
		"visionset_mgr::fog_vol_to_visionset_set_info",
		"visionset_mgr::fog_vol_to_visionset_set_suffix",
		"visionset_mgr::get_first_active_name",
		"visionset_mgr::get_info",
		"visionset_mgr::get_state",
		"visionset_mgr::init_fog_vol_to_visionset_monitor",
		"visionset_mgr::init_states",
		"visionset_mgr::is_type_currently_default",
		"visionset_mgr::killcam_visionset_player_mismatch",
		"visionset_mgr::killcam_visionset_vehicle_mismatch",
		"visionset_mgr::lerp_cb",
		"visionset_mgr::lerp_thread_per_player_wrapper",
		"visionset_mgr::lerp_thread_wrapper",
		"visionset_mgr::monitor",
		"visionset_mgr::on_player_connect",
		"visionset_mgr::overlay_lerp_cb",
		"visionset_mgr::overlay_slot_cb",
		"visionset_mgr::overlay_update_cb",
		"visionset_mgr::player_setup",
		"visionset_mgr::player_shutdown",
		"visionset_mgr::ramp_in_out_thread",
		"visionset_mgr::ramp_in_out_thread_hold_func",
		"visionset_mgr::ramp_in_out_thread_per_player",
		"visionset_mgr::ramp_in_out_thread_per_player_death_shutdown",
		"visionset_mgr::ramp_in_out_thread_per_player_internal",
		"visionset_mgr::ramp_in_out_thread_watch_player_shutdown",
		"visionset_mgr::ramp_in_thread_per_player",
		"visionset_mgr::register_info",
		"visionset_mgr::register_overlay_info_style_blur",
		"visionset_mgr::register_overlay_info_style_burn",
		"visionset_mgr::register_overlay_info_style_electrified",
		"visionset_mgr::register_overlay_info_style_filter",
		"visionset_mgr::register_overlay_info_style_none",
		"visionset_mgr::register_overlay_info_style_poison",
		"visionset_mgr::register_overlay_info_style_postfx_bundle",
		"visionset_mgr::register_overlay_info_style_speed_blur",
		"visionset_mgr::register_overlay_info_style_transported",
		"visionset_mgr::register_type",
		"visionset_mgr::register_visionset_info",
		"visionset_mgr::reset_player_fv2vs_infos_on_respawn",
		"visionset_mgr::set_poison_overlay",
		"visionset_mgr::set_state_active",
		"visionset_mgr::set_state_inactive",
		"visionset_mgr::should_update_state",
		"visionset_mgr::slot_cb",
		"visionset_mgr::timeout_lerp_thread",
		"visionset_mgr::timeout_lerp_thread_per_player",
		"visionset_mgr::transition_state",
		"visionset_mgr::update_clientfields",
		"visionset_mgr::validate_info",
		"visionset_mgr::visionset_lerp_cb",
		"visionset_mgr::visionset_slot_cb",
		"visionset_mgr::visionset_update_cb",
		"WarlordBehavior::canJukeCondition",
		"WarlordBehavior::canTacticalJukeCondition",
		"WarlordBehavior::canTakePainCondition",
		"WarlordBehavior::chooseBetterPositionService",
		"WarlordBehavior::deathAction",
		"WarlordBehavior::exposedPainActionStart",
		"WarlordBehavior::jukeAction",
		"WarlordBehavior::jukeActionTerminate",
		"WarlordBehavior::shouldBeAngryCondition",
		"WarlordBehavior::WarlordAngryAttack",
		"WarlordBehavior::WarlordAngryAttack_ShootThemAll",
		"WarlordBehavior::warlordShouldNormalMelee",
		"WarlordClientUtils::warlordDamageStateHandler",
		"WarlordClientUtils::warlordLightsHandler",
		"WarlordClientUtils::warlordThrusterHandler",
		"WarlordClientUtils::warlordTypeHandler",
		"WarlordDebugHelpers::IsNewState",
		"WarlordDebugHelpers::PrintState",
		"WarlordDebugHelpers::SetCurrentState",
		"WarlordDebugHelpers::SetStateFailed",
		"WarlordDebugHelpers::TryState",
		"WarlordInterface::AddPreferedPoint",
		"WarlordInterface::ClearAllPreferedPoints",
		"WarlordInterface::ClearPreferedPointsOutsideGoal",
		"WarlordInterface::DeletePreferedPoint",
		"WarlordInterface::RegisterWarlordInterfaceAttributes",
		"WarlordInterface::SetWarlordAggressiveMode",
		"WarlordServerUtils::AddPreferedPoint",
		"WarlordServerUtils::CheckifWeShouldMove",
		"WarlordServerUtils::ClearAllPreferedPoints",
		"WarlordServerUtils::ClearPreferedPointsOutsideGoal",
		"WarlordServerUtils::ComputeAttackerThreat",
		"WarlordServerUtils::DeletePreferedPoint",
		"WarlordServerUtils::GetAlivePlayersCount",
		"WarlordServerUtils::GetScaledForPlayers",
		"WarlordServerUtils::HaveTooLowToAttackEnemy",
		"WarlordServerUtils::IsEnemyTooLowToAttack",
		"WarlordServerUtils::remove_repulsor",
		"WarlordServerUtils::repulsor_fx",
		"WarlordServerUtils::SetEnemyTooLowToAttack",
		"WarlordServerUtils::SetWarlordAggressiveMode",
		"WarlordServerUtils::ShouldSwitchToNewThreat",
		"WarlordServerUtils::trigger_player_shock_fx",
		"WarlordServerUtils::UpdateAttackersList",
		"WarlordServerUtils::warlordCanJuke",
		"WarlordServerUtils::warlordCanTacticalJuke",
		"WarlordServerUtils::warlordDamageOverride",
		"WarlordServerUtils::WarlordDangerousEnemyAttack",
		"WarlordServerUtils::warlordSpawnSetup",
		"WarlordServerUtils::warlord_projectile_watcher",
		"wasp::defaultRole",
		"wasp::drone_AllowFriendlyFireDamage",
		"wasp::drone_callback_damage",
		"wasp::drop_leader",
		"wasp::fall_and_bounce",
		"wasp::GetNextMovePosition_tactical",
		"wasp::GetNextMovePosition_wander",
		"wasp::get_guard_points",
		"wasp::guard_points_debug",
		"wasp::handle_lod_display_for_driver",
		"wasp::init_guard_points",
		"wasp::path_update_interrupt",
		"wasp::should_fly_forward",
		"wasp::spawned",
		"wasp::state_combat_enter",
		"wasp::state_combat_update",
		"wasp::state_death_update",
		"wasp::state_emped_update",
		"wasp::state_guard_can_enter",
		"wasp::state_guard_enter",
		"wasp::state_guard_exit",
		"wasp::state_guard_update",
		"wasp::test_get_back_point",
		"wasp::test_get_back_queryresult",
		"wasp::turretFireUpdate",
		"wasp::update_leader",
		"wasp::update_main_guard",
		"wasp::wait_till_something_happens",
		"wasp::wasp_driving",
		"wasp::wasp_initialize",
		"wasp::wasp_manage_camera_swaps",
		"water_surface::localplayer_spawned",
		"water_surface::player_spawned",
		"water_surface::startWaterDive",
		"water_surface::startWaterSheeting",
		"water_surface::stop_player_fx",
		"water_surface::underwaterBegin",
		"water_surface::underwaterEnd",
		"water_surface::underwaterWatchBegin",
		"water_surface::underwaterWatchEnd",
		"weaponobjects::addWeaponObject",
		"weaponobjects::addWeaponObjectToWatcher",
		"weaponobjects::add_supplemental_object",
		"weaponobjects::anyObjectsInWorld",
		"weaponobjects::canHack",
		"weaponobjects::checkTeamEquipment",
		"weaponobjects::claymoreDetonate",
		"weaponobjects::cleanupWatcherOnDeath",
		"weaponobjects::cleanUpWatchers",
		"weaponobjects::cleanWeaponObjectArray",
		"weaponobjects::clearFXOnDeath",
		"weaponobjects::commonOnSpawnUseWeaponObject",
		"weaponobjects::commonOnSpawnUseWeaponObjectProximityAlarm",
		"weaponobjects::createBaseWatchers",
		"weaponobjects::createClaymoreWatcher",
		"weaponobjects::createDestroyHint",
		"weaponobjects::createHackerHint",
		"weaponobjects::createHatchetWatcher",
		"weaponobjects::createPlayerHelicopterWatcher",
		"weaponobjects::createProximityWeaponObjectWatcher",
		"weaponobjects::createQRDroneWatcher",
		"weaponobjects::createRCBombWatcher",
		"weaponobjects::createRetrievableHint",
		"weaponobjects::createSpecialCrossbowWatcher",
		"weaponobjects::createSpecialCrossbowWatcherTypes",
		"weaponobjects::createSpikeLauncherWatcher",
		"weaponobjects::createTactInsertWatcher",
		"weaponobjects::createUseWeaponObjectWatcher",
		"weaponobjects::createWeaponObjectWatcher",
		"weaponobjects::deathDodger",
		"weaponobjects::delayedSpikeDetonation",
		"weaponobjects::deleteEnt",
		"weaponobjects::deleteOnDeath",
		"weaponobjects::deleteOnKillbrush",
		"weaponobjects::deleteWeaponObject",
		"weaponobjects::deleteWeaponObjectArray",
		"weaponobjects::deleteWeaponObjectHelper",
		"weaponobjects::deleteWeaponObjectInstance",
		"weaponobjects::deleteWeaponObjectsOn",
		"weaponobjects::delete_on_notify",
		"weaponobjects::destroyEnt",
		"weaponobjects::destroy_other_teams_supplemental_watcher_objects",
		"weaponobjects::destroy_supplemental_watcher_objects",
		"weaponobjects::detonateWeaponObjectArray",
		"weaponobjects::detonateWhenStationary",
		"weaponobjects::dieOnEntityDeath",
		"weaponobjects::enemyequip_changed",
		"weaponobjects::enemyexplo_changed",
		"weaponobjects::equipmentDR",
		"weaponobjects::equipmentTeamObject",
		"weaponobjects::equipmentWatchPlayerTeamChanged",
		"weaponobjects::equipmentWatchTeamFX",
		"weaponobjects::friendlyFireCheck",
		"weaponobjects::getSpikeLauncherActiveSpikeCount",
		"weaponobjects::GetWatcherForWeapon",
		"weaponobjects::getWeaponObjectWatcher",
		"weaponobjects::getWeaponObjectWatcherByWeapon",
		"weaponobjects::get_held_weapon_match_or_root_match",
		"weaponobjects::get_player_crossbow_weapon",
		"weaponobjects::hackerInit",
		"weaponobjects::hackerNotMoving",
		"weaponobjects::hackerRemoveWeapon",
		"weaponobjects::hackerResult",
		"weaponobjects::hackerThink",
		"weaponobjects::hackerTriggerSetVisibility",
		"weaponobjects::hackerUnfreezePlayer",
		"weaponobjects::init_shared",
		"weaponobjects::isStunned",
		"weaponobjects::ItemHacked",
		"weaponobjects::onDestroyed",
		"weaponobjects::onSpawnCrossbowBolt",
		"weaponobjects::onSpawnCrossbowBoltImpact",
		"weaponobjects::onSpawnCrossbowBoltImpact_internal",
		"weaponobjects::onSpawnCrossbowBolt_internal",
		"weaponobjects::onSpawnHatchet",
		"weaponobjects::onSpawnHatchetTrigger",
		"weaponobjects::onSpawnProximityWeaponObject",
		"weaponobjects::onSpawnRetrievableWeaponObject",
		"weaponobjects::onSpawnSpecialCrossbowTrigger",
		"weaponobjects::onSpawnUseWeaponObject",
		"weaponobjects::on_localplayer_spawned",
		"weaponobjects::on_player_connect",
		"weaponobjects::on_player_spawned",
		"weaponobjects::pickUp",
		"weaponobjects::pickUpCrossbowBolt",
		"weaponobjects::playDialogOnDeath",
		"weaponobjects::playFlareFX",
		"weaponobjects::ProximityAlarmActivate",
		"weaponobjects::ProximityAlarmLoop",
		"weaponobjects::proximityAlarmWeaponObjectDebug",
		"weaponobjects::proximitySphere",
		"weaponobjects::proximityWeaponObjectDebug",
		"weaponobjects::proximityWeaponObjectDetonation",
		"weaponobjects::proximityWeaponObject_ActivationDelay",
		"weaponobjects::proximityWeaponObject_CreateDamageArea",
		"weaponobjects::proximityWeaponObject_DoDetonation",
		"weaponobjects::proximityWeaponObject_IsSpawnProtected",
		"weaponobjects::proximityWeaponObject_RemoveSpawnProtectOnDeath",
		"weaponobjects::proximityWeaponObject_SpawnProtect",
		"weaponobjects::proximityWeaponObject_ValidTriggerEntity",
		"weaponobjects::proximityWeaponObject_WaitTillFrameEndAndDoDetonation",
		"weaponobjects::proximity_alarm_changed",
		"weaponobjects::removeWeaponObject",
		"weaponobjects::resetWatchers",
		"weaponobjects::resetWeaponObjectExplodeThisFrame",
		"weaponobjects::resetWeaponObjectWatcher",
		"weaponobjects::retrievable_changed",
		"weaponobjects::saydamaged",
		"weaponobjects::setIconPos",
		"weaponobjects::setupReconEffect",
		"weaponobjects::setUpRetrievableHintStrings",
		"weaponobjects::setupRetrievableWatcher",
		"weaponobjects::shouldAffectWeaponObject",
		"weaponobjects::showCone",
		"weaponobjects::showHeadIcon",
		"weaponobjects::sndProxAlert_EntCleanup",
		"weaponobjects::spikeDetonate",
		"weaponobjects::spikesDetonating",
		"weaponobjects::start_gametype",
		"weaponobjects::stunFxThink",
		"weaponobjects::stunStart",
		"weaponobjects::stunStop",
		"weaponobjects::switch_team",
		"weaponobjects::teamequip_changed",
		"weaponobjects::testKillbrushOnStationary",
		"weaponobjects::updateDvars",
		"weaponobjects::updateEnemyEquipment",
		"weaponobjects::updateEnemyExplosive",
		"weaponobjects::updateRetrievable",
		"weaponobjects::updateTeamEquipment",
		"weaponobjects::update_sound",
		"weaponobjects::useTeamEquipmentClientField",
		"weaponobjects::vectorcross",
		"weaponobjects::voidOnDamage",
		"weaponobjects::voidOnSpawn",
		"weaponobjects::voidOnSpawnRetrieveTriggers",
		"weaponobjects::voidPickUp",
		"weaponobjects::waitAndDetonate",
		"weaponobjects::waitAndFizzleOut",
		"weaponobjects::WasProximityAlarmActivatedBySelf",
		"weaponobjects::watchForDisconnectCleanUp",
		"weaponobjects::watchHatchetTrigger",
		"weaponobjects::watchObjectDamage",
		"weaponobjects::watchShutdown",
		"weaponobjects::watchSpecialCrossbowTrigger",
		"weaponobjects::watchSpikeLauncherItemCountChanged",
		"weaponobjects::watchUseTrigger",
		"weaponobjects::watchWeaponObjectAltDetonate",
		"weaponobjects::watchWeaponObjectAltDetonation",
		"weaponobjects::watchWeaponObjectDetonation",
		"weaponobjects::watchWeaponObjectSpawn",
		"weaponobjects::watchWeaponObjectUsage",
		"weaponobjects::watch_killstreak_tap_activation",
		"weaponobjects::watch_perks_changed",
		"weaponobjects::watch_supplemental_object_death",
		"weaponobjects::weaponDetonate",
		"weaponobjects::weaponObjectDamage",
		"weaponobjects::weaponObjectDetectionMovable",
		"weaponobjects::weaponObjectDetectionTrigger",
		"weaponobjects::weaponObjectDetectionTrigger_wait",
		"weaponobjects::weaponObjectFizzleOut",
		"weaponobjects::weaponStun",
		"weaponobjects::weapon_object_do_DamageFeedBack",
		"weaponobjects::weapon_object_timeout",
		"weapons::addLimitedWeapon",
		"weapons::add_limited_weapon",
		"weapons::beginGrenadeTracking",
		"weapons::beginOtherGrenadeTracking",
		"weapons::begin_grenade_tracking",
		"weapons::begin_other_grenade_tracking",
		"weapons::checkHatchetBounce",
		"weapons::checkStuckToPlayer",
		"weapons::check_hatchet_bounce",
		"weapons::check_stuck_to_player",
		"weapons::damageEnt",
		"weapons::damage_ent",
		"weapons::damage_trace",
		"weapons::damage_trace_passed",
		"weapons::debugline",
		"weapons::deleteEntOnOwnerDeath",
		"weapons::deletePickupAfterAWhile",
		"weapons::delete_ent_on_owner_death",
		"weapons::delete_pickup_after_aWhile",
		"weapons::detach_all_weapons",
		"weapons::detach_carry_object_model",
		"weapons::dropGrenadesToGround",
		"weapons::dropLimitedWeapon",
		"weapons::dropScavengerForDeath",
		"weapons::dropWeaponForDeath",
		"weapons::dropWeaponsToGround",
		"weapons::drop_all_to_ground",
		"weapons::drop_for_death",
		"weapons::drop_grenades_to_ground",
		"weapons::drop_limited_weapon",
		"weapons::drop_scavenger_for_death",
		"weapons::flash_scavenger_icon",
		"weapons::force_stowed_weapon_update",
		"weapons::getDamageableEnts",
		"weapons::getTimeFromLevelStart",
		"weapons::get_damageable_ents",
		"weapons::has_hero_weapon",
		"weapons::has_launcher",
		"weapons::has_lmg",
		"weapons::has_lockon",
		"weapons::init",
		"weapons::init_shared",
		"weapons::is_grenade",
		"weapons::is_inventory",
		"weapons::is_primary_weapon",
		"weapons::is_side_arm",
		"weapons::is_using_offhand_equipment",
		"weapons::limitedPickup",
		"weapons::limited_pickup",
		"weapons::loadout_get_class_num",
		"weapons::loadout_get_offhand_count",
		"weapons::loadout_get_offhand_weapon",
		"weapons::mayDropWeapon",
		"weapons::may_drop",
		"weapons::multi_detonation_get_cluster_launch_dir",
		"weapons::nineBang_DoEmpDamage",
		"weapons::nineBang_doNineBang",
		"weapons::nineBang_empCanDamage",
		"weapons::nineBang_getSubExplosionPos",
		"weapons::onPlayerConnect",
		"weapons::onPlayerSpawned",
		"weapons::onWeaponDamage",
		"weapons::on_damage",
		"weapons::on_player_connect",
		"weapons::on_player_spawned",
		"weapons::playConcussionSound",
		"weapons::player_is_driver",
		"weapons::play_concussion_sound",
		"weapons::registerGrenadeLauncherDudDvar",
		"weapons::registerKillstreakDelay",
		"weapons::registerThrownGrenadeDudDvar",
		"weapons::scavenger_hud_create",
		"weapons::scavenger_hud_destroyOnDisconnect",
		"weapons::scavenger_think",
		"weapons::shouldDropLimitedWeapon",
		"weapons::should_drop_limited_weapon",
		"weapons::should_suppress_damage",
		"weapons::stow_on_back",
		"weapons::stow_on_hip",
		"weapons::stuckToPlayerTeamChange",
		"weapons::stuck_to_player_team_change",
		"weapons::track",
		"weapons::trackWeapon",
		"weapons::trackWeaponFire",
		"weapons::track_cooked_detonation",
		"weapons::track_fire",
		"weapons::track_multi_detonation",
		"weapons::turnGrenadeIntoADud",
		"weapons::turn_grenade_into_a_dud",
		"weapons::updateLastHeldWeaponTimings",
		"weapons::updateStowedWeapon",
		"weapons::updateWeaponTimings",
		"weapons::update_last_held_weapon_timings",
		"weapons::update_stowed_weapon",
		"weapons::update_timings",
		"weapons::wait_and_delete_dud",
		"weapons::watchForGrenadeDuds",
		"weapons::watchForGrenadeLauncherDuds",
		"weapons::watchForThrowbacks",
		"weapons::watchGrenadeCancel",
		"weapons::watchGrenadeUsage",
		"weapons::watchMissileDeath",
		"weapons::watchMissileUsage",
		"weapons::watchPickup",
		"weapons::watchRiotShieldUse",
		"weapons::watchWeaponChange",
		"weapons::watchWeaponUsage",
		"weapons::watch_for_grenade_duds",
		"weapons::watch_for_grenade_launcher_duds",
		"weapons::watch_for_throwbacks",
		"weapons::watch_grenade_cancel",
		"weapons::watch_grenade_usage",
		"weapons::watch_missile_death",
		"weapons::watch_missile_usage",
		"weapons::watch_offhand_end",
		"weapons::watch_pickup",
		"weapons::watch_usage",
		"weapons::watch_weapon_change",
		"weapons::weaponDamageTrace",
		"weapons::weaponDamageTracePassed",
		"weapon_customization_icon::GetXcam",
		"weapon_customization_icon::get_safehouse_position_struct",
		"weapon_customization_icon::process_wc_paintjobicon_extracam_request",
		"weapon_customization_icon::process_wc_varianticon_extracam_request",
		"weapon_customization_icon::setup_wc_extracam_settings",
		"weapon_customization_icon::setup_wc_weapon_model",
		"weapon_customization_icon::set_wc_icon_cosmetic_variants",
		"weapon_customization_icon::set_wc_icon_weapon_options",
		"weapon_customization_icon::spawn_weapon_model",
		"weapon_customization_icon::update_wc_icon_extracam",
		"weapon_customization_icon::wait_for_extracam_close",
		"weapon_customization_icon::wc_icon_setup",
		"weapon_utils::getBaseWeaponParam",
		"weapon_utils::isFlashOrStunDamage",
		"weapon_utils::isFlashOrStunWeapon",
		"weapon_utils::isKnife",
		"weapon_utils::isMeleeMOD",
		"weapon_utils::isNonBareHandsMelee",
		"weapon_utils::isPistol",
		"weapon_utils::isPunch",
		"zm::actor_damage_override",
		"zm::actor_damage_override_wrapper",
		"zm::actor_killed_override",
		"zm::add_bots",
		"zm::add_map_gamemode",
		"zm::add_map_location_gamemode",
		"zm::award_grenades_for_survivors",
		"zm::basic_player_connect",
		"zm::box_monitor",
		"zm::breakAfter",
		"zm::Callback_PlayerDamage",
		"zm::Callback_PlayerLastStand",
		"zm::can_do_input",
		"zm::cheat_enabled",
		"zm::checkForAllDead",
		"zm::check_actor_damage_callbacks",
		"zm::check_end_game_intermission_delay",
		"zm::check_for_valid_spawn_near_position",
		"zm::check_for_valid_spawn_near_team",
		"zm::check_for_valid_spawn_within_range",
		"zm::check_player_damage_callbacks",
		"zm::check_should_gib",
		"zm::clear_path_timers",
		"zm::createZombieEyes",
		"zm::createZombieEyesInternal",
		"zm::default_delayed_exit",
		"zm::default_exit_level",
		"zm::default_find_exit_point",
		"zm::delay_for_clients_then_execute",
		"zm::deleteZombieEyes",
		"zm::delete_in_createfx",
		"zm::disable_end_game_intermission",
		"zm::do_gib",
		"zm::do_gib_fx",
		"zm::do_hat_gib",
		"zm::do_headshot_gib_fx",
		"zm::drive_client_connected_notifies",
		"zm::end_game",
		"zm::end_game_player_was_spectator",
		"zm::end_last_stand",
		"zm::fade_out_intro_screen_zm",
		"zm::fade_up_over_time",
		"zm::failsafe_revive_give_back_weapons",
		"zm::finishPlayerDamageWrapper",
		"zm::first_consumables_used_watcher",
		"zm::force_update_player_clientfields",
		"zm::game_end_time",
		"zm::game_start_time",
		"zm::getAllOtherPlayers",
		"zm::getFreeSpawnpoint",
		"zm::get_delay_between_rounds",
		"zm::get_eyeball_color",
		"zm::get_eyeball_off_luminance",
		"zm::get_eyeball_on_luminance",
		"zm::get_players_on_team",
		"zm::get_player_out_of_playable_area_monitor_wait_time",
		"zm::get_player_too_many_weapons_monitor_wait_time",
		"zm::get_round_number",
		"zm::get_safe_breadcrumb_pos",
		"zm::get_valid_spawn_location",
		"zm::get_zombie_count_for_round",
		"zm::get_zombie_spawn_delay",
		"zm::handle_zombie_risers",
		"zm::handle_zombie_risers_foliage",
		"zm::handle_zombie_risers_lowg",
		"zm::handle_zombie_risers_water",
		"zm::has_gibbed_piece",
		"zm::increment_dog_round_stat",
		"zm::init",
		"zm::initialBlack",
		"zm::initialBlackEnd",
		"zm::initializeStatTracking",
		"zm::init_blocker_fx",
		"zm::init_clientfields",
		"zm::init_client_field_callback_funcs",
		"zm::init_custom_ai_type",
		"zm::init_duplicaterender_settings",
		"zm::init_dvars",
		"zm::init_flags",
		"zm::init_function_overrides",
		"zm::init_fx",
		"zm::init_levelvars",
		"zm::init_player_levelvars",
		"zm::init_riser_fx",
		"zm::init_shellshocks",
		"zm::init_sounds",
		"zm::init_strings",
		"zm::init_wallbuy_fx",
		"zm::init_zombie_explode_fx",
		"zm::intermission",
		"zm::in_enabled_playable_area",
		"zm::in_kill_brush",
		"zm::in_life_brush",
		"zm::is_idgun_damage",
		"zm::is_sidequest_previously_completed",
		"zm::Laststand",
		"zm::laststand_giveback_player_perks",
		"zm::last_stand_best_pistol",
		"zm::last_stand_compare_pistols",
		"zm::last_stand_grenade_save_and_return",
		"zm::last_stand_minimum_pistol_override",
		"zm::last_stand_monitor",
		"zm::last_stand_pistol_rank_init",
		"zm::last_stand_pistol_swap",
		"zm::last_stand_restore_pistol_ammo",
		"zm::last_stand_revive",
		"zm::last_stand_save_pistol_ammo",
		"zm::last_stand_take_thrown_grenade",
		"zm::last_stand_thread",
		"zm::mark_piece_gibbed",
		"zm::onAllPlayersReady",
		"zm::onPlayerConnect_clientDvars",
		"zm::onPlayerSpawned",
		"zm::on_gib_event",
		"zm::players_playing",
		"zm::players_reached_rounds_counter_watcher",
		"zm::playerzombie_downed_hud",
		"zm::playerzombie_downed_state",
		"zm::playerzombie_infinite_health",
		"zm::playerzombie_player_damage",
		"zm::playerzombie_play_sound",
		"zm::playerzombie_soundboard",
		"zm::playerzombie_waitfor_buttonrelease",
		"zm::player_damage_override",
		"zm::player_damage_override_cheat",
		"zm::player_duplicaterender",
		"zm::player_exit_level",
		"zm::player_eyes_clientfield_cb",
		"zm::player_eye_color_clientfield_cb",
		"zm::player_fake_death",
		"zm::player_grenade_multiattack_bookmark_watcher",
		"zm::player_grenade_watcher",
		"zm::player_intermission",
		"zm::player_killed_override",
		"zm::player_laststand",
		"zm::player_monitor_time_played",
		"zm::player_monitor_travel_dist",
		"zm::player_out_of_playable_area_monitor",
		"zm::player_prevent_damage",
		"zm::player_revive_monitor",
		"zm::player_shield_facing_attacker",
		"zm::player_spawn_protection",
		"zm::player_too_many_players_check",
		"zm::player_too_many_weapons_monitor",
		"zm::player_too_many_weapons_monitor_takeaway_sequence",
		"zm::player_too_many_weapons_monitor_takeaway_simultaneous",
		"zm::player_track_ammo_count",
		"zm::player_umbrahotfixes",
		"zm::player_zombie_breadcrumb",
		"zm::playSwipeSound",
		"zm::play_door_dialog",
		"zm::play_level_start_vox_delayed",
		"zm::post_all_players_connected",
		"zm::post_main",
		"zm::precache_models",
		"zm::precache_zombie_gametype",
		"zm::precache_zombie_leaderboards",
		"zm::printHashIDs",
		"zm::print_zombie_counts",
		"zm::process_friendly_fire_callbacks",
		"zm::quest_complete_time",
		"zm::recordPlayerRoundWeapon",
		"zm::recordPrimaryWeaponsStats",
		"zm::recordRoundEndStats",
		"zm::recordRoundStartStats",
		"zm::refresh_player_navcard_hud",
		"zm::register_actor_damage_callback",
		"zm::register_custom_ai_spawn_check",
		"zm::register_player_damage_callback",
		"zm::register_player_friendly_fire_callback",
		"zm::register_sidequest",
		"zm::register_vehicle_damage_callback",
		"zm::register_zombie_damage_override_callback",
		"zm::remote_revive_watch",
		"zm::remove_ignore_attacker",
		"zm::resetGibCounter",
		"zm::rise_dust_fx",
		"zm::round_complete_num",
		"zm::round_complete_time",
		"zm::round_end_monitor",
		"zm::round_one_up",
		"zm::round_over",
		"zm::round_pause",
		"zm::round_spawning",
		"zm::round_spawning_test",
		"zm::round_spawn_failsafe_debug",
		"zm::round_start",
		"zm::round_think",
		"zm::round_wait",
		"zm::run_custom_ai_spawn_checks",
		"zm::screen_fade_in",
		"zm::setSpectatePermissions",
		"zm::setup_player_navcard_hud",
		"zm::set_default_laststand_pistol",
		"zm::set_intermission_point",
		"zm::set_round_number",
		"zm::set_sidequest_completed",
		"zm::set_third_person",
		"zm::ShowHudAndPlayPromo",
		"zm::sndMusicOnKillRound",
		"zm::spawnSpectator",
		"zm::spawn_kill_brush",
		"zm::spawn_life_brush",
		"zm::spawn_vo",
		"zm::spawn_vo_player",
		"zm::spectators_respawn",
		"zm::spectator_respawn",
		"zm::spectator_respawn_player",
		"zm::spectator_thread",
		"zm::spectator_toggle_3rd_person",
		"zm::startUnitriggers",
		"zm::start_zm_dash_counter_watchers",
		"zm::start_zombie_gametype",
		"zm::start_zombie_logic_in_x_sec",
		"zm::store_crumb",
		"zm::to_mins",
		"zm::updateEndOfMatchCounters",
		"zm::updatePlayerNum",
		"zm::update_aat_hud",
		"zm::update_is_player_valid",
		"zm::update_zone_name",
		"zm::uploadGlobalStatCounters",
		"zm::upload_leaderboards",
		"zm::vehicle_damage_override",
		"zm::wait_and_revive",
		"zm::wait_until_first_player",
		"zm::watchDisconnect",
		"zm::zbot_spawn",
		"zm::zm_on_player_connect",
		"zm::zm_on_player_disconnect",
		"zm::zm_on_player_spawned",
		"zm::zombe_gametype_premain",
		"zm::zombiemode_melee_miss",
		"zm::zombie_eyes_clientfield_cb",
		"zm::zombie_eyes_demo_clientfield_cb",
		"zm::zombie_eyes_demo_watcher",
		"zm::zombie_eyes_handle_demo_jump",
		"zm::zombie_game_over_death",
		"zm::zombie_gut_explosion_cb",
		"zm::zombie_highest_vision_set_apply",
		"zm::zombie_intro_screen",
		"zm::zombie_power_clientfield_off",
		"zm::zombie_power_clientfield_on",
		"zm::zombie_ragdoll_explode_cb",
		"zm::zombie_vision_set_apply",
		"zm::zombie_vision_set_remove",
		"zm::zombie_wait_explode",
		"zm::zombie_zombie_keyline_render_clientfield_cb",
		"zm::zombify_player",
		"zm::ZPOff_listener",
		"zm::ZPO_listener",
		"zm_ai_dogs::dog_behind_audio",
		"zm_ai_dogs::dog_clip_monitor",
		"zm_ai_dogs::dog_death",
		"zm_ai_dogs::dog_explode_fx",
		"zm_ai_dogs::dog_fx",
		"zm_ai_dogs::dog_fx_eye_glow",
		"zm_ai_dogs::dog_fx_trail",
		"zm_ai_dogs::dog_health_increase",
		"zm_ai_dogs::dog_init",
		"zm_ai_dogs::dog_round_aftermath",
		"zm_ai_dogs::dog_round_spawning",
		"zm_ai_dogs::dog_round_start",
		"zm_ai_dogs::dog_round_stop",
		"zm_ai_dogs::dog_round_tracker",
		"zm_ai_dogs::dog_round_wait_func",
		"zm_ai_dogs::dog_run_think",
		"zm_ai_dogs::dog_spawner_init",
		"zm_ai_dogs::dog_spawn_factory_logic",
		"zm_ai_dogs::dog_spawn_fx",
		"zm_ai_dogs::dog_stalk_audio",
		"zm_ai_dogs::dog_thundergun_knockdown",
		"zm_ai_dogs::enable_dog_rounds",
		"zm_ai_dogs::get_favorite_enemy",
		"zm_ai_dogs::init",
		"zm_ai_dogs::init_dog_fx",
		"zm_ai_dogs::play_dog_round",
		"zm_ai_dogs::special_dog_spawn",
		"zm_ai_dogs::stop_dog_sound_on_death",
		"zm_ai_dogs::waiting_for_next_dog_spawn",
		"zm_ai_dogs::zombie_setup_attack_properties_dog",
		"zm_ai_faller::do_zombie_emerge",
		"zm_ai_faller::do_zombie_fall",
		"zm_ai_faller::fallerCeilingDeath",
		"zm_ai_faller::fallerDropAction",
		"zm_ai_faller::fallerDropActionTerminate",
		"zm_ai_faller::fallerDropActionUpdate",
		"zm_ai_faller::faller_death_ragdoll",
		"zm_ai_faller::faller_script_parameters",
		"zm_ai_faller::get_fall_anim",
		"zm_ai_faller::handle_fall_death_notetracks",
		"zm_ai_faller::handle_fall_notetracks",
		"zm_ai_faller::in_player_fov",
		"zm_ai_faller::isFallerInCeiling",
		"zm_ai_faller::potentially_visible",
		"zm_ai_faller::setup_deathfunc",
		"zm_ai_faller::shouldFallerDrop",
		"zm_ai_faller::stop_zombie_emerge_dust_fx",
		"zm_ai_faller::stop_zombie_fall_dust_fx",
		"zm_ai_faller::zombie_emerge_dust_fx",
		"zm_ai_faller::zombie_emerge_fx",
		"zm_ai_faller::zombie_faller_always_drop",
		"zm_ai_faller::zombie_faller_death_wait",
		"zm_ai_faller::zombie_faller_delete",
		"zm_ai_faller::zombie_faller_do_fall",
		"zm_ai_faller::zombie_faller_drop_not_occupied",
		"zm_ai_faller::zombie_faller_emerge",
		"zm_ai_faller::zombie_faller_enable_location",
		"zm_ai_faller::zombie_faller_watch_all_players",
		"zm_ai_faller::zombie_faller_watch_player",
		"zm_ai_faller::zombie_fall_burst_fx",
		"zm_ai_faller::zombie_fall_death",
		"zm_ai_faller::zombie_fall_death_func",
		"zm_ai_faller::zombie_fall_dust_fx",
		"zm_ai_faller::zombie_fall_fx",
		"zm_ai_faller::zombie_fall_get_vicitims",
		"zm_ai_faller::zombie_fall_loop",
		"zm_ai_faller::zombie_fall_should_attack",
		"zm_ai_faller::zombie_fall_wait",
		"zm_ai_faller::zombie_land",
		"zm_ai_raps::calculate_spawn_position",
		"zm_ai_raps::can_we_spawn_raps",
		"zm_ai_raps::cleanup_meteor",
		"zm_ai_raps::cleanup_meteor_fx",
		"zm_ai_raps::create_global_raps_spawn_locations_list",
		"zm_ai_raps::elemental_round_fx",
		"zm_ai_raps::elemental_round_ring_fx",
		"zm_ai_raps::enable_raps_rounds",
		"zm_ai_raps::get_current_raps_count",
		"zm_ai_raps::get_favorite_enemy",
		"zm_ai_raps::get_raps_spawn_total",
		"zm_ai_raps::init",
		"zm_ai_raps::player_watch_shellshock_accumulation",
		"zm_ai_raps::play_raps_round",
		"zm_ai_raps::rapsDamage",
		"zm_ai_raps::raps_custom_player_shellshock",
		"zm_ai_raps::raps_death",
		"zm_ai_raps::raps_explode_fx",
		"zm_ai_raps::raps_find_closest_in_global_pool",
		"zm_ai_raps::raps_health_increase",
		"zm_ai_raps::raps_init",
		"zm_ai_raps::raps_round_aftermath",
		"zm_ai_raps::raps_round_spawning",
		"zm_ai_raps::raps_round_start",
		"zm_ai_raps::raps_round_stop",
		"zm_ai_raps::raps_round_tracker",
		"zm_ai_raps::raps_round_wait_func",
		"zm_ai_raps::raps_run_think",
		"zm_ai_raps::raps_spawner_init",
		"zm_ai_raps::raps_spawn_fx",
		"zm_ai_raps::raps_stalk_audio",
		"zm_ai_raps::raps_thundergun_knockdown",
		"zm_ai_raps::raps_timeout_after_xsec",
		"zm_ai_raps::should_raps_giveup_inaccessible_player",
		"zm_ai_raps::show_hit_marker",
		"zm_ai_raps::spawn_raps",
		"zm_ai_raps::special_raps_spawn",
		"zm_ai_raps::stop_raps_sound_on_death",
		"zm_ai_raps::waiting_for_next_raps_spawn",
		"zm_ai_raps::wait_for_bullet_impact",
		"zm_ai_raps::zombie_setup_attack_properties_raps",
		"zm_ai_wasp::create_global_wasp_spawn_locations_list",
		"zm_ai_wasp::enable_wasp_rounds",
		"zm_ai_wasp::get_current_wasp_count",
		"zm_ai_wasp::get_favorite_enemy",
		"zm_ai_wasp::init",
		"zm_ai_wasp::parasite_drop_item",
		"zm_ai_wasp::parasite_fog_on",
		"zm_ai_wasp::parasite_round_fx",
		"zm_ai_wasp::parasite_round_ring_fx",
		"zm_ai_wasp::play_wasp_round",
		"zm_ai_wasp::ready_to_spawn_wasp",
		"zm_ai_wasp::show_hit_marker",
		"zm_ai_wasp::spawn_wasp",
		"zm_ai_wasp::special_wasp_spawn",
		"zm_ai_wasp::stop_wasp_sound_on_death",
		"zm_ai_wasp::waspDamage",
		"zm_ai_wasp::wasp_add_to_spawn_pool",
		"zm_ai_wasp::wasp_behind_audio",
		"zm_ai_wasp::wasp_cleanup_failsafe",
		"zm_ai_wasp::wasp_death",
		"zm_ai_wasp::wasp_find_closest_in_global_pool",
		"zm_ai_wasp::wasp_health_increase",
		"zm_ai_wasp::wasp_init",
		"zm_ai_wasp::wasp_round_aftermath",
		"zm_ai_wasp::wasp_round_spawning",
		"zm_ai_wasp::wasp_round_start",
		"zm_ai_wasp::wasp_round_stop",
		"zm_ai_wasp::wasp_round_tracker",
		"zm_ai_wasp::wasp_round_wait_func",
		"zm_ai_wasp::wasp_run_think",
		"zm_ai_wasp::wasp_spawner_init",
		"zm_ai_wasp::wasp_spawn_init",
		"zm_ai_wasp::wasp_spawn_logic",
		"zm_ai_wasp::wasp_stalk_audio",
		"zm_ai_wasp::wasp_thundergun_knockdown",
		"zm_ai_wasp::watch_player_melee",
		"zm_ai_wasp::watch_player_melee_events",
		"zm_ai_wasp::zombie_setup_attack_properties_wasp",
		"zm_altbody::devgui_start_altbody",
		"zm_altbody::get_altbody_weapon_limit",
		"zm_altbody::init",
		"zm_altbody::set_player_mana",
		"zm_altbody::temp_mana_hud",
		"zm_altbody::toggle_player_altbody",
		"zm_altbody::toggle_player_altbody_3p",
		"zm_altbody::trigger_monitor_visibility",
		"zm_altbody_beast::arc_damage_init",
		"zm_altbody_beast::beastmode_devgui",
		"zm_altbody_beast::beastmode_devgui_callback",
		"zm_altbody_beast::beast_cancel_hint",
		"zm_altbody_beast::beast_mode_death_watch",
		"zm_altbody_beast::create_lightning_params",
		"zm_altbody_beast::detect_reentry",
		"zm_altbody_beast::entity_set_visible",
		"zm_altbody_beast::get_grapple_targets",
		"zm_altbody_beast::get_number_of_available_kiosks",
		"zm_altbody_beast::grapple_valid_target_check",
		"zm_altbody_beast::hide_ooze_triggers",
		"zm_altbody_beast::is_lightning_weapon",
		"zm_altbody_beast::kiosk_allowed",
		"zm_altbody_beast::kiosk_cooldown",
		"zm_altbody_beast::kiosk_curse_all",
		"zm_altbody_beast::kiosk_is_cursed",
		"zm_altbody_beast::kiosk_uncurse_all",
		"zm_altbody_beast::kiosk_uncurse_and_light",
		"zm_altbody_beast::lightning_aoe",
		"zm_altbody_beast::lightning_slow_zombie",
		"zm_altbody_beast::lightning_slow_zombie_fx",
		"zm_altbody_beast::lightning_weapon_level",
		"zm_altbody_beast::lightning_zombie_damage_response",
		"zm_altbody_beast::make_powerups_grapplable",
		"zm_altbody_beast::player_allow_beastmode",
		"zm_altbody_beast::player_beast_cancel_bar",
		"zm_altbody_beast::player_beast_grapple_rumble",
		"zm_altbody_beast::player_beast_melee_juke",
		"zm_altbody_beast::player_check_grenades",
		"zm_altbody_beast::player_continue_cancel",
		"zm_altbody_beast::player_cover_transition",
		"zm_altbody_beast::player_damage_override_beast_mode",
		"zm_altbody_beast::player_disappear_in_flash",
		"zm_altbody_beast::player_enter_beastmode",
		"zm_altbody_beast::player_enter_superbeastmode",
		"zm_altbody_beast::player_exit_beastmode",
		"zm_altbody_beast::player_get_revive_time",
		"zm_altbody_beast::player_give_lives",
		"zm_altbody_beast::player_give_mana",
		"zm_altbody_beast::player_kill_grappled_zombies",
		"zm_altbody_beast::player_on_connect",
		"zm_altbody_beast::player_on_killed",
		"zm_altbody_beast::player_on_spawned",
		"zm_altbody_beast::player_progress_bar_update",
		"zm_altbody_beast::player_recharge_superbeastmode",
		"zm_altbody_beast::player_stance_hold_think",
		"zm_altbody_beast::player_stance_hold_think_internal",
		"zm_altbody_beast::player_take_lives",
		"zm_altbody_beast::player_take_mana",
		"zm_altbody_beast::player_update_beast_mode_objects",
		"zm_altbody_beast::player_watch_cancel",
		"zm_altbody_beast::player_watch_grapple",
		"zm_altbody_beast::player_watch_grappled_object",
		"zm_altbody_beast::player_watch_grappled_zombies",
		"zm_altbody_beast::player_watch_grapple_landing",
		"zm_altbody_beast::player_watch_grapple_traverse",
		"zm_altbody_beast::player_watch_lightning",
		"zm_altbody_beast::player_watch_mana",
		"zm_altbody_beast::player_watch_melee",
		"zm_altbody_beast::player_watch_melee_charge",
		"zm_altbody_beast::player_watch_melee_juke",
		"zm_altbody_beast::player_watch_melee_power",
		"zm_altbody_beast::player_zombie_devgui_beast_mode",
		"zm_altbody_beast::player_zombie_devgui_beast_mode_preserve",
		"zm_altbody_beast::player_zombie_devgui_superbeast_mode",
		"zm_altbody_beast::superbeastmode_override_hp",
		"zm_altbody_beast::trigger_grapple_only",
		"zm_altbody_beast::trigger_melee_only",
		"zm_altbody_beast::trigger_ooze_only",
		"zm_altbody_beast::trigger_touching_meleepos",
		"zm_altbody_beast::update_kiosk_effects",
		"zm_altbody_beast::wait_and_appear",
		"zm_altbody_beast::wait_enable_offhand_weapons",
		"zm_altbody_beast::wait_invulnerable",
		"zm_altbody_beast::watch_beast_hint_end",
		"zm_altbody_beast::watch_beast_hint_use",
		"zm_altbody_beast::watch_lightning_damage",
		"zm_altbody_beast::watch_round_start_mana",
		"zm_altbody_beast::watch_scr_beast_no_visionset",
		"zm_altbody_beast::zombie_can_be_zapped",
		"zm_altbody_beast::zombie_gets_eaten",
		"zm_altbody_beast::zombie_gets_pulled",
		"zm_altbody_beast::zombie_on_spawn",
		"zm_attackables::activate",
		"zm_attackables::attackable_callback",
		"zm_attackables::deactivate",
		"zm_attackables::do_damage",
		"zm_attackables::get_attackable",
		"zm_attackables::get_attackable_slot",
		"zm_audio::areNearbySpeakersActive",
		"zm_audio::audio_player_connect",
		"zm_audio::charindex_cb",
		"zm_audio::CheckForValidAIType",
		"zm_audio::CheckForValidMod",
		"zm_audio::CheckForValidWeapon",
		"zm_audio::checkIntValid",
		"zm_audio::checkStringTrue",
		"zm_audio::checkStringValid",
		"zm_audio::clientVoiceSetup",
		"zm_audio::create_and_play_dialog",
		"zm_audio::custom_kill_damaged_VO",
		"zm_audio::delay_set_exert_id",
		"zm_audio::do_player_or_npc_playvox",
		"zm_audio::end_gameover_snapshot",
		"zm_audio::exert_timer",
		"zm_audio::gameover_snapshot",
		"zm_audio::getRandomCharacter",
		"zm_audio::getSpecificCharacter",
		"zm_audio::get_mod_type",
		"zm_audio::get_response_chance",
		"zm_audio::init_audio_functions",
		"zm_audio::isAnyoneTalking",
		"zm_audio::isCurrentSpeakerAbleToTalk",
		"zm_audio::isspeaking_cb",
		"zm_audio::isVoxOnCooldown",
		"zm_audio::is_last_zombie",
		"zm_audio::loadPlayerVoiceCategories",
		"zm_audio::musicState_Create",
		"zm_audio::networkSafeReset",
		"zm_audio::oh_shit_vox",
		"zm_audio::on_player_spawned",
		"zm_audio::playerExert",
		"zm_audio::playerFallDamageSound",
		"zm_audio::player_killstreak_timer",
		"zm_audio::player_zombie_kill_vox",
		"zm_audio::playState",
		"zm_audio::secretUse",
		"zm_audio::SetExertVoice",
		"zm_audio::setup_hero_rival",
		"zm_audio::setup_response_line",
		"zm_audio::setup_response_line_override",
		"zm_audio::shouldPlayerSpeak",
		"zm_audio::sndAnnouncerPlayVox",
		"zm_audio::sndAnnouncerVoxAdd",
		"zm_audio::sndAnnouncer_Init",
		"zm_audio::sndConversation_AddLine",
		"zm_audio::sndConversation_Init",
		"zm_audio::sndConversation_Play",
		"zm_audio::sndConvoInterrupt",
		"zm_audio::sndConvoStopCurrentConversation",
		"zm_audio::sndCurrentLocationArray",
		"zm_audio::sndIsNetworkSafe",
		"zm_audio::sndLocationQueue",
		"zm_audio::sndLocationShouldPlay",
		"zm_audio::sndMeleeSwipe",
		"zm_audio::sndMusicSystem_CreateState",
		"zm_audio::sndMusicSystem_EEOverride",
		"zm_audio::sndMusicSystem_EESetup",
		"zm_audio::sndMusicSystem_EEWait",
		"zm_audio::sndMusicSystem_IsAbleToPlay",
		"zm_audio::sndMusicSystem_Locations",
		"zm_audio::sndMusicSystem_LocationsInit",
		"zm_audio::sndMusicSystem_PlayState",
		"zm_audio::sndMusicSystem_QueueState",
		"zm_audio::sndMusicSystem_StopAndFlush",
		"zm_audio::sndPerksJingles_Cooldown",
		"zm_audio::sndPerksJingles_Player",
		"zm_audio::sndPerksJingles_Timer",
		"zm_audio::sndPlayerHitAlert",
		"zm_audio::sndPlayerHitAlert_PlaySound",
		"zm_audio::sndRadioSetup",
		"zm_audio::sndRadioWait",
		"zm_audio::sndRadio_Override",
		"zm_audio::sndSetZombieContext",
		"zm_audio::sndVoNotifyDTP",
		"zm_audio::sndVoNotifyPlain",
		"zm_audio::sndZmbLaststand",
		"zm_audio::timer_actual",
		"zm_audio::vo_clear_underwater",
		"zm_audio::waitfor_music_stop",
		"zm_audio::waitPlaybackTime",
		"zm_audio::water_vox",
		"zm_audio::zmbAIVox_AmbientDelay",
		"zm_audio::zmbAIVox_NotifyConvert",
		"zm_audio::zmbAIVox_PlayDeath",
		"zm_audio::zmbAIVox_PlayElectrocution",
		"zm_audio::zmbAIVox_PlayVox",
		"zm_audio::zmbMusLooper",
		"zm_audio::zmbVox",
		"zm_audio::zmbVoxAdd",
		"zm_audio::zmbVoxCreate",
		"zm_audio::zmbVoxGetLineVariant",
		"zm_audio::zmbVoxInitSpeaker",
		"zm_audio::zombie_behind_vox",
		"zm_audio_announcer::announceGamemodeRules",
		"zm_audio_announcer::announceMatchWinner",
		"zm_audio_announcer::announceRoundWinner",
		"zm_audio_announcer::createVox",
		"zm_audio_announcer::getLeaderDialogVariant",
		"zm_audio_announcer::getOtherTeam",
		"zm_audio_announcer::getRoundSwitchDialog",
		"zm_audio_announcer::init_Cleansed",
		"zm_audio_announcer::init_GameModeCommonVox",
		"zm_audio_announcer::init_GameModeSpecificVox",
		"zm_audio_announcer::init_GriefVox",
		"zm_audio_announcer::init_MeatVox",
		"zm_audio_announcer::init_RaceVox",
		"zm_audio_announcer::leaderDialog",
		"zm_audio_announcer::leaderDialogBothTeams",
		"zm_audio_announcer::leaderDialogOnPlayer",
		"zm_audio_announcer::playLeaderDialogOnPlayer",
		"zm_behavior::barricadeEnterMocompNoZStart",
		"zm_behavior::barricadeEnterMocompNoZTerminate",
		"zm_behavior::barricadeEnterMocompNoZUpdate",
		"zm_behavior::barricadeEnterMocompStart",
		"zm_behavior::barricadeEnterMocompTerminate",
		"zm_behavior::barricadeEnterMocompUpdate",
		"zm_behavior::boardTearMocompStart",
		"zm_behavior::boardTearMocompUpdate",
		"zm_behavior::disablePowerups",
		"zm_behavior::enablePowerups",
		"zm_behavior::findNodesService",
		"zm_behavior::findZombieEnemy",
		"zm_behavior::getChunkService",
		"zm_behavior::inPlayableArea",
		"zm_behavior::isChunkValidCondition",
		"zm_behavior::notetrackBoardMelee",
		"zm_behavior::notetrackBoardTear",
		"zm_behavior::shouldMoveCondition",
		"zm_behavior::shouldSkipTeardown",
		"zm_behavior::updateAttackSpotService",
		"zm_behavior::updateChunkService",
		"zm_behavior::wasKilledByTeslaCondition",
		"zm_behavior::zodZombieHasLegs",
		"zm_behavior::zombieAttackableObjectService",
		"zm_behavior::zombieAttackThroughBoardsAction",
		"zm_behavior::zombieAttackThroughBoardsActionTerminate",
		"zm_behavior::zombieBHBBurst",
		"zm_behavior::zombieBlackHoleBombPullEnd",
		"zm_behavior::zombieBlackHoleBombPullStart",
		"zm_behavior::zombieBlackHoleBombPullUpdate",
		"zm_behavior::zombieEnteredPlayable",
		"zm_behavior::zombieFindFlesh",
		"zm_behavior::zombieFindFleshCode",
		"zm_behavior::zombieGotToAttackSpotCondition",
		"zm_behavior::zombieGotToEntranceCondition",
		"zm_behavior::zombieGrabBoardAction",
		"zm_behavior::zombieGrabBoardActionTerminate",
		"zm_behavior::zombieGrappleActionStart",
		"zm_behavior::zombieHasAttackSpotAlreadyCondition",
		"zm_behavior::zombieHoldBoardAction",
		"zm_behavior::zombieHoldBoardActionTerminate",
		"zm_behavior::zombieIsAtEntrance",
		"zm_behavior::zombieIsAtGoal",
		"zm_behavior::zombieIsBeingGrappled",
		"zm_behavior::zombieIsPushed",
		"zm_behavior::zombieIsThinkDone",
		"zm_behavior::zombieKilledByBlackHoleBombCondition",
		"zm_behavior::zombieKilledByBlackHoleBombEnd",
		"zm_behavior::zombieKilledByBlackHoleBombStart",
		"zm_behavior::zombieKilledWhileGettingPulled",
		"zm_behavior::zombieMantleAction",
		"zm_behavior::zombieMantleActionTerminate",
		"zm_behavior::zombieMoveAction",
		"zm_behavior::zombieMoveActionTerminate",
		"zm_behavior::zombieMoveActionUpdate",
		"zm_behavior::zombieMoveAway",
		"zm_behavior::zombieMoveToAttackSpotAction",
		"zm_behavior::zombieMoveToAttackSpotActionTerminate",
		"zm_behavior::zombieMoveToEntranceAction",
		"zm_behavior::zombieMoveToEntranceActionTerminate",
		"zm_behavior::zombiePullBoardAction",
		"zm_behavior::zombiePullBoardActionTerminate",
		"zm_behavior::zombieShouldAttackThroughBoardsCondition",
		"zm_behavior::zombieShouldEnterPlayableCondition",
		"zm_behavior::zombieShouldKnockdown",
		"zm_behavior::zombieShouldMoveAwayCondition",
		"zm_behavior::zombieShouldStun",
		"zm_behavior::zombieShouldTauntCondition",
		"zm_behavior::zombieShouldTearCondition",
		"zm_behavior::zombieStunActionEnd",
		"zm_behavior::zombieStunActionStart",
		"zm_behavior::zombieTauntAction",
		"zm_behavior::zombieTauntActionTerminate",
		"zm_behavior::zombieTraverseAction",
		"zm_behavior::zombieTraverseActionTerminate",
		"zm_behavior::zombieUpdateBlackHoleBombPullState",
		"zm_behavior::zombieUpdateGoal",
		"zm_behavior::zombieUpdateGoalCode",
		"zm_behavior_utility::enteredPlayableArea",
		"zm_behavior_utility::setupAttackProperties",
		"zm_blockers::any_player_touching",
		"zm_blockers::any_player_touching_any",
		"zm_blockers::any_zombie_touching_any",
		"zm_blockers::blockerstub_update_prompt",
		"zm_blockers::blockertrigger_update_prompt",
		"zm_blockers::blocker_attack_spots",
		"zm_blockers::blocker_choke",
		"zm_blockers::blocker_connect_paths",
		"zm_blockers::blocker_disconnect_paths",
		"zm_blockers::blocker_init",
		"zm_blockers::blocker_think",
		"zm_blockers::blocker_trigger_think",
		"zm_blockers::blocker_unitrigger_think",
		"zm_blockers::blocker_update_prompt_visibility",
		"zm_blockers::board_completion",
		"zm_blockers::debris_init",
		"zm_blockers::debris_move",
		"zm_blockers::debris_think",
		"zm_blockers::debris_zbarrier_move",
		"zm_blockers::destructible_glass_barricade",
		"zm_blockers::disconnect_paths_when_done",
		"zm_blockers::door_activate",
		"zm_blockers::door_block",
		"zm_blockers::door_buy",
		"zm_blockers::door_classify",
		"zm_blockers::door_delay",
		"zm_blockers::door_init",
		"zm_blockers::door_opened",
		"zm_blockers::door_repaired_rumble_n_sound",
		"zm_blockers::door_solid_thread",
		"zm_blockers::door_solid_thread_anim",
		"zm_blockers::door_think",
		"zm_blockers::door_zbarrier_move",
		"zm_blockers::do_post_chunk_repair_delay",
		"zm_blockers::ensure_chunk_is_back_to_origin",
		"zm_blockers::flag_blocker",
		"zm_blockers::handle_post_board_repair_rewards",
		"zm_blockers::has_blocker_affecting_perk",
		"zm_blockers::increment_window_repaired",
		"zm_blockers::init_blockers",
		"zm_blockers::kill_trapped_zombies",
		"zm_blockers::move_chunk",
		"zm_blockers::open_all_zbarriers",
		"zm_blockers::physics_launch_door",
		"zm_blockers::player_fails_blocker_repair_trigger_preamble",
		"zm_blockers::quantum_bomb_open_nearest_door_result",
		"zm_blockers::quantum_bomb_open_nearest_door_validation",
		"zm_blockers::random_destroyed_chunk_show",
		"zm_blockers::rebuild_barrier_reward_reset",
		"zm_blockers::remove_chunk",
		"zm_blockers::remove_chunk_rotate_grate",
		"zm_blockers::replace_chunk",
		"zm_blockers::self_and_flag_wait",
		"zm_blockers::self_disconnectpaths",
		"zm_blockers::should_delete_zbarriers",
		"zm_blockers::trigger_delete_on_repair",
		"zm_blockers::update_states",
		"zm_blockers::waittill_door_can_close",
		"zm_blockers::waittill_door_trigger_clear_global_power_off",
		"zm_blockers::waittill_door_trigger_clear_local_power_off",
		"zm_blockers::wait_trigger_clear",
		"zm_blockers::zombie_bartear_audio_offset",
		"zm_blockers::zombie_bartear_audio_plus_fx_offset_repair_horizontal",
		"zm_blockers::zombie_bartear_audio_plus_fx_offset_repair_verticle",
		"zm_blockers::zombie_boardtear_audio_offset",
		"zm_blockers::zombie_boardtear_audio_plus_fx_offset_repair_horizontal",
		"zm_blockers::zombie_boardtear_audio_plus_fx_offset_repair_verticle",
		"zm_blockers::zombie_gratetear_audio_plus_fx_offset_repair_horizontal",
		"zm_bot::bot_loadout",
		"zm_bot::bot_main",
		"zm_bot::bot_update_goal",
		"zm_bot::bot_update_lookat",
		"zm_bot::bot_update_revive",
		"zm_bot::debugMsg",
		"zm_bot::debug_coop_bot_test",
		"zm_bot::watch_bot_connect",
		"zm_bot::watch_bot_spawn",
		"zm_clone::clone_actor_animate",
		"zm_clone::clone_animate",
		"zm_clone::clone_damage_func",
		"zm_clone::clone_give_weapon",
		"zm_clone::clone_mover_animate",
		"zm_clone::spawn_player_clone",
		"zm_craftables::add_craftable_cheat",
		"zm_craftables::add_craftable_piece",
		"zm_craftables::add_map_craftable_stat",
		"zm_craftables::add_zombie_craftable",
		"zm_craftables::add_zombie_craftable_vox_category",
		"zm_craftables::anystub_get_unitrigger_origin",
		"zm_craftables::anystub_on_spawn_trigger",
		"zm_craftables::anystub_update_prompt",
		"zm_craftables::can_craft_shared_piece",
		"zm_craftables::choose_open_craftable",
		"zm_craftables::claim_location",
		"zm_craftables::combine_craftable_pieces",
		"zm_craftables::complete_craftable",
		"zm_craftables::craftablestub_remove",
		"zm_craftables::craftablestub_update_prompt",
		"zm_craftables::craftables_watch_swipes",
		"zm_craftables::craftabletrigger_update_prompt",
		"zm_craftables::craftable_all_crafted",
		"zm_craftables::craftable_can_use_shared_piece",
		"zm_craftables::craftable_clear_piece_crafting",
		"zm_craftables::craftable_complete",
		"zm_craftables::craftable_crafted",
		"zm_craftables::craftable_has_piece",
		"zm_craftables::craftable_is_piece_crafted",
		"zm_craftables::craftable_is_piece_crafted_or_crafting",
		"zm_craftables::craftable_is_piece_crafting",
		"zm_craftables::craftable_pickedup_timer",
		"zm_craftables::craftable_piece_unitriggers",
		"zm_craftables::craftable_place_think",
		"zm_craftables::craftable_play_craft_fx",
		"zm_craftables::craftable_set_piece_crafted",
		"zm_craftables::craftable_set_piece_crafting",
		"zm_craftables::craftable_transfer_data",
		"zm_craftables::craftable_trigger_think",
		"zm_craftables::craftable_trigger_think_array",
		"zm_craftables::craftable_use_hold_think",
		"zm_craftables::craftable_use_hold_think_internal",
		"zm_craftables::DBLine",
		"zm_craftables::delete_on_disconnect",
		"zm_craftables::ExplosionDamage",
		"zm_craftables::find_craftable_stub",
		"zm_craftables::finish_crafting_shared_piece",
		"zm_craftables::generate_piece",
		"zm_craftables::generate_piece_unitrigger",
		"zm_craftables::generate_zombie_craftable_piece",
		"zm_craftables::get_actual_craftableSpawn",
		"zm_craftables::get_actual_uts_craftable",
		"zm_craftables::get_craftable_hint",
		"zm_craftables::get_craftable_model",
		"zm_craftables::get_craftable_piece",
		"zm_craftables::get_craftable_piece_model",
		"zm_craftables::get_craftable_stat_name",
		"zm_craftables::get_craftable_vo_name",
		"zm_craftables::get_hide_model_if_unavailable",
		"zm_craftables::hide_craftable_table_model",
		"zm_craftables::include_zombie_craftable",
		"zm_craftables::init",
		"zm_craftables::is_craftable",
		"zm_craftables::is_holding_part",
		"zm_craftables::is_part_crafted",
		"zm_craftables::is_point_in_craft_trigger",
		"zm_craftables::make_zombie_craftable_open",
		"zm_craftables::manage_multiple_pieces",
		"zm_craftables::model_fly_away",
		"zm_craftables::onBeginUseUTS",
		"zm_craftables::onCantUseUTS",
		"zm_craftables::onDropUTS",
		"zm_craftables::onEndUseUTS",
		"zm_craftables::onPickupUTS",
		"zm_craftables::onPlayerLastStand",
		"zm_craftables::onUsePlantObjectUTS",
		"zm_craftables::openTableCraftable",
		"zm_craftables::open_craftablestub_update_prompt",
		"zm_craftables::piecestub_get_unitrigger_origin",
		"zm_craftables::piecestub_update_prompt",
		"zm_craftables::piecetrigger_update_prompt",
		"zm_craftables::piece_allocate_spawn",
		"zm_craftables::piece_deallocate_spawn",
		"zm_craftables::piece_hide",
		"zm_craftables::piece_pick_random_spawn",
		"zm_craftables::piece_set_spawn",
		"zm_craftables::piece_show",
		"zm_craftables::piece_spawn_at",
		"zm_craftables::piece_spawn_in",
		"zm_craftables::piece_unitrigger_think",
		"zm_craftables::piece_unspawn",
		"zm_craftables::piece_wait_and_return",
		"zm_craftables::placed_craftable_vo_timer",
		"zm_craftables::player_can_craft",
		"zm_craftables::player_can_take_piece",
		"zm_craftables::player_continue_crafting",
		"zm_craftables::player_craft",
		"zm_craftables::player_destroy_piece",
		"zm_craftables::player_drop_piece",
		"zm_craftables::player_drop_piece_on_death",
		"zm_craftables::player_drop_piece_on_downed",
		"zm_craftables::player_explode_craftable",
		"zm_craftables::player_finish_craftable",
		"zm_craftables::player_get_craftable_piece",
		"zm_craftables::player_hide_craftable_parts_ui_after_duration",
		"zm_craftables::player_progress_bar",
		"zm_craftables::player_progress_bar_update",
		"zm_craftables::player_remove_craftable_piece",
		"zm_craftables::player_remove_piece",
		"zm_craftables::player_return_piece_to_original_spawn",
		"zm_craftables::player_show_craftable_parts_ui",
		"zm_craftables::player_take_piece",
		"zm_craftables::player_throw_piece",
		"zm_craftables::run_craftables_devgui",
		"zm_craftables::say_pickup_craftable_vo",
		"zm_craftables::setup_craftable_pieces",
		"zm_craftables::setup_unitrigger_craftable",
		"zm_craftables::setup_unitrigger_craftable_array",
		"zm_craftables::setup_unitrigger_craftable_internal",
		"zm_craftables::setup_vehicle_unitrigger_craftable",
		"zm_craftables::set_build_time",
		"zm_craftables::set_clientfield_craftables_code_callbacks",
		"zm_craftables::set_craftable_clientfield",
		"zm_craftables::set_hide_model_if_unavailable",
		"zm_craftables::set_piece_count",
		"zm_craftables::start_crafting_shared_piece",
		"zm_craftables::stub_uncraft_craftable",
		"zm_craftables::think_craftables",
		"zm_craftables::track_craftables_crafted",
		"zm_craftables::track_craftables_pickedup",
		"zm_craftables::track_craftables_planted",
		"zm_craftables::track_craftable_pieces_crafted",
		"zm_craftables::track_craftable_piece_pickedup",
		"zm_craftables::track_placed_craftables",
		"zm_craftables::track_planted_craftables_pickedup",
		"zm_craftables::uncraft_craftable",
		"zm_craftables::update_open_table_status",
		"zm_craftables::vehicle_craftable_trigger_think",
		"zm_craftables::waittill_crafted",
		"zm_craftables::watch_hit_players",
		"zm_craftables::zombie_craftable_set_record_stats",
		"zm_craft_shield::drop_on_mover",
		"zm_craft_shield::init",
		"zm_craft_shield::on_buy_weapon_riotshield",
		"zm_craft_shield::on_drop_common",
		"zm_craft_shield::on_fully_crafted",
		"zm_craft_shield::on_pickup_common",
		"zm_craft_shield::pickup_from_mover",
		"zm_craft_shield::riotshield_craftable",
		"zm_craft_shield::show_infotext_for_duration",
		"zm_daily_challenges::challenge_ingame_time_tracking",
		"zm_daily_challenges::death_check_for_challenge_updates",
		"zm_daily_challenges::debug_print",
		"zm_daily_challenges::earned_points_tracking",
		"zm_daily_challenges::increment_magic_box",
		"zm_daily_challenges::increment_nuked_zombie",
		"zm_daily_challenges::increment_windows_repaired",
		"zm_daily_challenges::is_daily_challenge",
		"zm_daily_challenges::on_challenge_complete",
		"zm_daily_challenges::on_connect",
		"zm_daily_challenges::on_spawned",
		"zm_daily_challenges::perk_drink_tracking",
		"zm_daily_challenges::perk_purchase_tracking",
		"zm_daily_challenges::round_tracking",
		"zm_daily_challenges::spent_points_tracking",
		"zm_devgui::add_custom_devgui_callback",
		"zm_devgui::any_player_in_noclip",
		"zm_devgui::damage_player",
		"zm_devgui::devgui_add_ability",
		"zm_devgui::devgui_add_weapon",
		"zm_devgui::devgui_add_weapon_and_attachments",
		"zm_devgui::devgui_add_weapon_entry",
		"zm_devgui::devgui_all_spawn",
		"zm_devgui::devgui_bot_spawn",
		"zm_devgui::devgui_bot_spawn_think",
		"zm_devgui::devgui_debug_hud",
		"zm_devgui::devgui_make_crawler",
		"zm_devgui::devgui_test_chart_think",
		"zm_devgui::devgui_toggle_show_exterior_goals",
		"zm_devgui::devgui_toggle_show_spawn_locations",
		"zm_devgui::devgui_zombie_healthbar",
		"zm_devgui::devgui_zombie_spawn",
		"zm_devgui::diable_fog_in_noclip",
		"zm_devgui::drawValidation",
		"zm_devgui::draw_zone_adjacencies_validation",
		"zm_devgui::force_drink",
		"zm_devgui::get_upgrade",
		"zm_devgui::kill_player",
		"zm_devgui::lineUntilNotified",
		"zm_devgui::player_on_connect",
		"zm_devgui::print3DUntilNotified",
		"zm_devgui::showOneSpawnPoint",
		"zm_devgui::testScriptRuntimeError",
		"zm_devgui::testScriptRuntimeError1",
		"zm_devgui::testScriptRuntimeError2",
		"zm_devgui::testScriptRuntimeErrorAssert",
		"zm_devgui::validate_to_board",
		"zm_devgui::validate_to_wait_point",
		"zm_devgui::wait_for_zombie",
		"zm_devgui::watch_debug_input",
		"zm_devgui::zombie_ability_devgui_think",
		"zm_devgui::zombie_devgui_ability_give",
		"zm_devgui::zombie_devgui_ability_take",
		"zm_devgui::zombie_devgui_allow_fog",
		"zm_devgui::zombie_devgui_attachment_give",
		"zm_devgui::zombie_devgui_check_kill_thread_every_frame_toggle",
		"zm_devgui::zombie_devgui_chest_never_move",
		"zm_devgui::zombie_devgui_cool_jetgun",
		"zm_devgui::zombie_devgui_debug_pers",
		"zm_devgui::zombie_devgui_director_easy",
		"zm_devgui::zombie_devgui_disable_kill_thread_toggle",
		"zm_devgui::zombie_devgui_disown_equipment",
		"zm_devgui::zombie_devgui_dog_round",
		"zm_devgui::zombie_devgui_dog_round_skip",
		"zm_devgui::zombie_devgui_dpad_changeweapon",
		"zm_devgui::zombie_devgui_dpad_damage",
		"zm_devgui::zombie_devgui_dpad_death",
		"zm_devgui::zombie_devgui_dpad_none",
		"zm_devgui::zombie_devgui_draw_traversals",
		"zm_devgui::zombie_devgui_dump_zombie_vars",
		"zm_devgui::zombie_devgui_equipment_give",
		"zm_devgui::zombie_devgui_equipment_stays_healthy",
		"zm_devgui::zombie_devgui_give_claymores",
		"zm_devgui::zombie_devgui_give_emp_bomb",
		"zm_devgui::zombie_devgui_give_frags",
		"zm_devgui::zombie_devgui_give_health",
		"zm_devgui::zombie_devgui_give_lethal",
		"zm_devgui::zombie_devgui_give_money",
		"zm_devgui::zombie_devgui_give_monkey",
		"zm_devgui::zombie_devgui_give_perk",
		"zm_devgui::zombie_devgui_give_placeable_mine",
		"zm_devgui::zombie_devgui_give_powerup",
		"zm_devgui::zombie_devgui_give_powerup_player",
		"zm_devgui::zombie_devgui_give_sticky",
		"zm_devgui::zombie_devgui_give_xp",
		"zm_devgui::zombie_devgui_goto_round",
		"zm_devgui::zombie_devgui_invulnerable",
		"zm_devgui::zombie_devgui_kill",
		"zm_devgui::zombie_devgui_kill_thread_test_mode_toggle",
		"zm_devgui::zombie_devgui_monkey_round",
		"zm_devgui::zombie_devgui_open_sesame",
		"zm_devgui::zombie_devgui_pack_current_weapon",
		"zm_devgui::zombie_devgui_player_commands",
		"zm_devgui::zombie_devgui_player_menu",
		"zm_devgui::zombie_devgui_player_menu_clear",
		"zm_devgui::zombie_devgui_player_menu_clear_on_disconnect",
		"zm_devgui::zombie_devgui_preserve_turbines",
		"zm_devgui::zombie_devgui_reopt_current_weapon",
		"zm_devgui::zombie_devgui_revive",
		"zm_devgui::zombie_devgui_take_money",
		"zm_devgui::zombie_devgui_take_perks",
		"zm_devgui::zombie_devgui_take_weapon",
		"zm_devgui::zombie_devgui_take_weapons",
		"zm_devgui::zombie_devgui_thief_round",
		"zm_devgui::zombie_devgui_think",
		"zm_devgui::zombie_devgui_toggle_ammo",
		"zm_devgui::zombie_devgui_toggle_ignore",
		"zm_devgui::zombie_devgui_turn_player",
		"zm_devgui::zombie_devgui_unpack_current_weapon",
		"zm_devgui::zombie_devgui_validation_commands",
		"zm_devgui::zombie_devgui_watch_input",
		"zm_devgui::zombie_devgui_weapon_give",
		"zm_devgui::zombie_draw_traversals",
		"zm_devgui::zombie_handle_havok_timer_test",
		"zm_devgui::zombie_healthbar",
		"zm_devgui::zombie_pathing_validation",
		"zm_devgui::zombie_spawner_validation",
		"zm_devgui::zombie_weapon_devgui_think",
		"zm_devgui::zone_adjacencies_validation",
		"zm_equipment::add_devgui_equipment",
		"zm_equipment::add_equip_activated_callback_override",
		"zm_equipment::add_to_trigger_list",
		"zm_equipment::buy",
		"zm_equipment::change_ammo",
		"zm_equipment::disappear_fx",
		"zm_equipment::equipment_activated_clientfield_cb",
		"zm_equipment::equipment_spawn_think",
		"zm_equipment::get_hint",
		"zm_equipment::get_howto_hint",
		"zm_equipment::get_icon",
		"zm_equipment::get_notify_strings",
		"zm_equipment::get_player_equipment",
		"zm_equipment::give",
		"zm_equipment::hacker_active",
		"zm_equipment::has_deployed_equipment",
		"zm_equipment::has_player_equipment",
		"zm_equipment::include",
		"zm_equipment::init_hint_hudelem",
		"zm_equipment::init_player_equipment",
		"zm_equipment::init_upgrade",
		"zm_equipment::is_active",
		"zm_equipment::is_equipment",
		"zm_equipment::is_equipment_that_blocks_purchase",
		"zm_equipment::is_included",
		"zm_equipment::is_limited",
		"zm_equipment::is_player_equipment",
		"zm_equipment::limit",
		"zm_equipment::limited_in_use",
		"zm_equipment::play_fx_for_all_clients",
		"zm_equipment::register",
		"zm_equipment::register_for_level",
		"zm_equipment::register_slot_watcher_override",
		"zm_equipment::release_limited_on_disconnect",
		"zm_equipment::release_limited_on_taken",
		"zm_equipment::run_equipment_devgui",
		"zm_equipment::setup_client_hintelem",
		"zm_equipment::setup_limited",
		"zm_equipment::set_ammo_driven",
		"zm_equipment::set_equipment_invisibility_to_player",
		"zm_equipment::set_player_equipment",
		"zm_equipment::show_hint",
		"zm_equipment::show_hint_text",
		"zm_equipment::signal_activated",
		"zm_equipment::slot_watcher",
		"zm_equipment::start_ammo",
		"zm_equipment::take",
		"zm_equip_shield::lock_weapon_model",
		"zm_equip_shield::lock_weapon_models",
		"zm_equip_shield::player_on_spawned",
		"zm_equip_shield::unlock_weapon_model",
		"zm_equip_shield::watch_weapon_changes",
		"zm_equip_turret::set_rocketshield_ammo",
		"zm_ffotd::debug_exploit",
		"zm_ffotd::exploit_reroute",
		"zm_ffotd::ffotd_melee_miss_func",
		"zm_ffotd::force_navcomputer_trigger_think",
		"zm_ffotd::main_end",
		"zm_ffotd::main_start",
		"zm_ffotd::optimize_for_splitscreen",
		"zm_ffotd::path_exploit_fix",
		"zm_ffotd::player_in_exploit_area",
		"zm_gametype::add_map_gamemode",
		"zm_gametype::add_map_location_gamemode",
		"zm_gametype::canPlayerSuicide",
		"zm_gametype::checkZMRoundSwitch",
		"zm_gametype::createTimer",
		"zm_gametype::create_final_score",
		"zm_gametype::create_hud_scoreboard",
		"zm_gametype::create_module_hud_team_winer_score",
		"zm_gametype::custom_spawn_init_func",
		"zm_gametype::delete_corpses",
		"zm_gametype::displayRoundEnd",
		"zm_gametype::displayRoundSwitch",
		"zm_gametype::do_game_mode_shellshock",
		"zm_gametype::end_rounds_early",
		"zm_gametype::game_end_func",
		"zm_gametype::game_module_player_damage_callback",
		"zm_gametype::game_objects_allowed",
		"zm_gametype::getZMRoundsPlayed",
		"zm_gametype::get_player_spawns_for_gametype",
		"zm_gametype::GlobalLogic_SetupDefault_ZombieCallbacks",
		"zm_gametype::hide_gump_loading_for_hotjoiners",
		"zm_gametype::hitZMRoundLimit",
		"zm_gametype::hitZMRoundWinLimit",
		"zm_gametype::hitZMScoreLimit",
		"zm_gametype::init",
		"zm_gametype::initialBlack",
		"zm_gametype::initialBlackEnd",
		"zm_gametype::isOneZMRound",
		"zm_gametype::is_survival_object",
		"zm_gametype::kill_all_zombies",
		"zm_gametype::main",
		"zm_gametype::maySpawn",
		"zm_gametype::menuAlliesZombies",
		"zm_gametype::menu_init",
		"zm_gametype::menu_onMenuResponse",
		"zm_gametype::menu_onPlayerConnect",
		"zm_gametype::module_hud_create_team_name",
		"zm_gametype::module_hud_full_screen_overlay",
		"zm_gametype::module_hud_round_end",
		"zm_gametype::module_hud_round_num",
		"zm_gametype::module_hud_team_1_score",
		"zm_gametype::module_hud_team_2_score",
		"zm_gametype::module_hud_team_winer_score",
		"zm_gametype::NextZMHud",
		"zm_gametype::non_round_logic",
		"zm_gametype::onDeadEvent",
		"zm_gametype::onEndGame",
		"zm_gametype::onFindValidSpawnPoint",
		"zm_gametype::onPlayerConnect",
		"zm_gametype::onPlayerConnect_check_for_hotjoin",
		"zm_gametype::onPlayerDisconnect",
		"zm_gametype::onPlayerSpawned",
		"zm_gametype::onRoundEndGame",
		"zm_gametype::onSpawnIntermission",
		"zm_gametype::onSpawnPlayer",
		"zm_gametype::onSpawnPlayerUnified",
		"zm_gametype::onSpawnSpectator",
		"zm_gametype::onStartGameType",
		"zm_gametype::player_hotjoin",
		"zm_gametype::post_gametype_main",
		"zm_gametype::post_init_gametype",
		"zm_gametype::respawn_spectators_and_freeze_players",
		"zm_gametype::revive_laststand_players",
		"zm_gametype::round_logic",
		"zm_gametype::runGameTypeMain",
		"zm_gametype::runGameTypePrecache",
		"zm_gametype::setup_classic_gametype",
		"zm_gametype::setup_standard_objects",
		"zm_gametype::startNextZMRound",
		"zm_gametype::start_round",
		"zm_gametype::team_icon_winner",
		"zm_gametype::track_encounters_win_stats",
		"zm_gametype::unlink_meat_traversal_nodes",
		"zm_gametype::wait_fade_in",
		"zm_gametype::wait_for_players",
		"zm_gametype::wasLastZMRound",
		"zm_gametype::zclassic_main",
		"zm_game_module::check_for_round_end",
		"zm_game_module::create_fireworks",
		"zm_game_module::damage_callback_no_pvp_damage",
		"zm_game_module::fireworks_launch",
		"zm_game_module::freeze_players",
		"zm_game_module::game_module_custom_intermission",
		"zm_game_module::game_module_post_zombie_spawn_init",
		"zm_game_module::game_module_pre_zombie_spawn_init",
		"zm_game_module::get_current_game_module",
		"zm_game_module::get_game_module",
		"zm_game_module::kill_all_zombies",
		"zm_game_module::make_supersprinter",
		"zm_game_module::register_game_module",
		"zm_game_module::reset_grief",
		"zm_game_module::respawn_players",
		"zm_game_module::respawn_spectators_and_freeze_players",
		"zm_game_module::set_current_game_module",
		"zm_game_module::wait_for_team_death",
		"zm_game_module::wait_for_team_death_and_round_end",
		"zm_game_module::zombie_goto_round",
		"zm_game_module_meat_utility::ammo_prize",
		"zm_game_module_meat_utility::ammo_toss_cooldown",
		"zm_game_module_meat_utility::award_grenades_for_team",
		"zm_game_module_meat_utility::check_should_save_player",
		"zm_game_module_meat_utility::drop_meat",
		"zm_game_module_meat_utility::fake_launch",
		"zm_game_module_meat_utility::get_alive_players_on_meat_team",
		"zm_game_module_meat_utility::get_game_module_players",
		"zm_game_module_meat_utility::get_players_on_meat_team",
		"zm_game_module_meat_utility::init_ammo_ring",
		"zm_game_module_meat_utility::init_item_meat",
		"zm_game_module_meat_utility::init_minigun_ring",
		"zm_game_module_meat_utility::init_splitter_ring",
		"zm_game_module_meat_utility::item_meat_spawn",
		"zm_game_module_meat_utility::launch_meat",
		"zm_game_module_meat_utility::meat_intro",
		"zm_game_module_meat_utility::meat_splitter",
		"zm_game_module_meat_utility::minigun_prize",
		"zm_game_module_meat_utility::minigun_toss_cooldown",
		"zm_game_module_meat_utility::multi_launch",
		"zm_game_module_meat_utility::revive_saved_player",
		"zm_game_module_meat_utility::ring_cooldown",
		"zm_game_module_meat_utility::ring_toss",
		"zm_game_module_meat_utility::ring_toss_prize",
		"zm_game_module_meat_utility::split_meat",
		"zm_game_module_meat_utility::wait_for_team_death",
		"zm_game_module_meat_utility::watch_save_player",
		"zm_game_module_utility::move_ring",
		"zm_game_module_utility::rotate_ring",
		"zm_hero_weapon::continue_draining_hero_weapon",
		"zm_hero_weapon::default_give",
		"zm_hero_weapon::default_power_empty",
		"zm_hero_weapon::default_power_full",
		"zm_hero_weapon::default_take",
		"zm_hero_weapon::default_unwield",
		"zm_hero_weapon::default_wield",
		"zm_hero_weapon::gadget_hero_weapon_on_activate",
		"zm_hero_weapon::gadget_hero_weapon_on_off",
		"zm_hero_weapon::hero_power_event",
		"zm_hero_weapon::hero_power_event_callback",
		"zm_hero_weapon::is_hero_weapon_in_use",
		"zm_hero_weapon::on_player_spawned",
		"zm_hero_weapon::player_hero_power_event",
		"zm_hero_weapon::register_hero_recharge_event",
		"zm_hero_weapon::register_hero_weapon",
		"zm_hero_weapon::register_hero_weapon_give_take_callbacks",
		"zm_hero_weapon::register_hero_weapon_power_callbacks",
		"zm_hero_weapon::register_hero_weapon_wield_unwield_callbacks",
		"zm_hero_weapon::set_hero_weapon_state",
		"zm_hero_weapon::take_hero_weapon",
		"zm_hero_weapon::watch_for_glitches",
		"zm_hero_weapon::watch_hero_power",
		"zm_hero_weapon::watch_hero_weapon_change",
		"zm_hero_weapon::watch_hero_weapon_give",
		"zm_hero_weapon::watch_hero_weapon_take",
		"zm_jump_pad::delayed_jump_pad_start",
		"zm_jump_pad::disconnect_failsafe_pad_poi_clean",
		"zm_jump_pad::failsafe_pad_poi_clean",
		"zm_jump_pad::jump_pad_cancel",
		"zm_jump_pad::jump_pad_enemy_follow_or_ignore",
		"zm_jump_pad::jump_pad_ignore_poi_cleanup",
		"zm_jump_pad::jump_pad_init",
		"zm_jump_pad::jump_pad_move",
		"zm_jump_pad::jump_pad_player_overrides",
		"zm_jump_pad::jump_pad_player_variables",
		"zm_jump_pad::jump_pad_start",
		"zm_jump_pad::jump_pad_think",
		"zm_jump_pad::stop_chasing_the_sky",
		"zm_laststand::add_weighted_down",
		"zm_laststand::animation_update",
		"zm_laststand::auto_revive",
		"zm_laststand::bleed_out",
		"zm_laststand::can_revive",
		"zm_laststand::can_revive_via_override",
		"zm_laststand::can_suicide",
		"zm_laststand::checkforbleedout",
		"zm_laststand::check_for_failed_revive",
		"zm_laststand::check_for_sacrifice",
		"zm_laststand::deregister_revive_override",
		"zm_laststand::fadeReviveMessageOver",
		"zm_laststand::increment_downed_stat",
		"zm_laststand::is_reviving",
		"zm_laststand::is_reviving_any",
		"zm_laststand::is_reviving_via_override",
		"zm_laststand::is_suiciding",
		"zm_laststand::Laststand_Bleedout",
		"zm_laststand::laststand_clean_up_on_disconnect",
		"zm_laststand::laststand_clean_up_reviving_any",
		"zm_laststand::laststand_disable_player_weapons",
		"zm_laststand::laststand_enable_player_weapons",
		"zm_laststand::laststand_getup",
		"zm_laststand::laststand_getup_damage_watcher",
		"zm_laststand::laststand_give_pistol",
		"zm_laststand::laststand_global_init",
		"zm_laststand::laststand_has_players_weapons_returned",
		"zm_laststand::PlayerLastStand",
		"zm_laststand::player_getup_setup",
		"zm_laststand::player_last_stand_stats",
		"zm_laststand::refire_player_downed",
		"zm_laststand::register_revive_override",
		"zm_laststand::remote_revive",
		"zm_laststand::revive_do_revive",
		"zm_laststand::revive_force_revive",
		"zm_laststand::revive_get_revive_time",
		"zm_laststand::revive_give_back_weapons",
		"zm_laststand::revive_give_back_weapons_wait",
		"zm_laststand::revive_give_back_weapons_when_done",
		"zm_laststand::revive_hud_think",
		"zm_laststand::revive_success",
		"zm_laststand::revive_trigger_spawn",
		"zm_laststand::revive_trigger_think",
		"zm_laststand::set_ignoreme",
		"zm_laststand::suicide_do_suicide",
		"zm_laststand::suicide_trigger_spawn",
		"zm_laststand::suicide_trigger_think",
		"zm_laststand::update_bleedout_timer",
		"zm_laststand::wait_and_set_revive_shader_constant",
		"zm_laststand::wait_switch_weapon",
		"zm_laststand::xp_revive_once_per_round",
		"zm_magicbox::boxstub_update_prompt",
		"zm_magicbox::boxtrigger_update_prompt",
		"zm_magicbox::box_encounter_vo",
		"zm_magicbox::can_buy_weapon",
		"zm_magicbox::check_for_desirable_chest_location",
		"zm_magicbox::chest_get_max_usage",
		"zm_magicbox::chest_get_min_usage",
		"zm_magicbox::clean_up_hacked_box",
		"zm_magicbox::closed_glow_obj_cleanup",
		"zm_magicbox::closed_glow_obj_demo_jump_listener",
		"zm_magicbox::decide_hide_show_hint",
		"zm_magicbox::default_box_move_logic",
		"zm_magicbox::default_magic_box_check_equipment",
		"zm_magicbox::default_pandora_fx_func",
		"zm_magicbox::default_pandora_show_func",
		"zm_magicbox::fire_sale_fix",
		"zm_magicbox::force_stream_changed",
		"zm_magicbox::get_chest_pieces",
		"zm_magicbox::get_left_hand_weapon_model_name",
		"zm_magicbox::get_magic_box_zbarrier_state",
		"zm_magicbox::give_hero_weapon",
		"zm_magicbox::glow_obj_cleanup",
		"zm_magicbox::glow_obj_demo_jump_listener",
		"zm_magicbox::hide_chest",
		"zm_magicbox::init_starting_chest_location",
		"zm_magicbox::is_chest_active",
		"zm_magicbox::lock_weapon_model",
		"zm_magicbox::magicbox_closed_glow_callback",
		"zm_magicbox::magicbox_glow_callback",
		"zm_magicbox::magicbox_host_migration",
		"zm_magicbox::magicbox_leave_sounds_callback",
		"zm_magicbox::magicbox_open_glow_callback",
		"zm_magicbox::magicbox_show_sounds_callback",
		"zm_magicbox::magicbox_unitrigger_think",
		"zm_magicbox::magic_box_arrives",
		"zm_magicbox::magic_box_closes",
		"zm_magicbox::magic_box_do_teddy_flyaway",
		"zm_magicbox::magic_box_do_weapon_rise",
		"zm_magicbox::magic_box_initial",
		"zm_magicbox::magic_box_leaves",
		"zm_magicbox::magic_box_opens",
		"zm_magicbox::magic_box_teddy_twitches",
		"zm_magicbox::magic_box_zbarrier_leave",
		"zm_magicbox::open_glow_obj_cleanup",
		"zm_magicbox::open_glow_obj_demo_jump_listener",
		"zm_magicbox::play_crazi_sound",
		"zm_magicbox::process_magic_box_zbarrier_state",
		"zm_magicbox::rotateroll_box",
		"zm_magicbox::set_magic_box_zbarrier_state",
		"zm_magicbox::set_treasure_chest_cost",
		"zm_magicbox::should_upgrade_weapon",
		"zm_magicbox::show_chest",
		"zm_magicbox::spawn_joker_weapon_model",
		"zm_magicbox::stream_model_for_time",
		"zm_magicbox::timer_til_despawn",
		"zm_magicbox::treasure_chest_CanPlayerReceiveWeapon",
		"zm_magicbox::treasure_chest_ChooseWeightedRandomWeapon",
		"zm_magicbox::treasure_chest_firesale_active",
		"zm_magicbox::treasure_chest_give_weapon",
		"zm_magicbox::treasure_chest_glowfx",
		"zm_magicbox::treasure_chest_init",
		"zm_magicbox::treasure_chest_lid_close",
		"zm_magicbox::treasure_chest_lid_open",
		"zm_magicbox::treasure_chest_move",
		"zm_magicbox::treasure_chest_should_move",
		"zm_magicbox::treasure_chest_think",
		"zm_magicbox::treasure_chest_timeout",
		"zm_magicbox::treasure_chest_weapon_locking",
		"zm_magicbox::treasure_chest_weapon_spawn",
		"zm_magicbox::trigger_visible_to_player",
		"zm_magicbox::unlock_weapon_model",
		"zm_magicbox::unregister_unitrigger_on_kill_think",
		"zm_magicbox::verify_chest_is_open",
		"zm_magicbox::watch_for_emp_close",
		"zm_magicbox::weapon_show_hint_choke",
		"zm_melee_weapon::add_melee_weapon",
		"zm_melee_weapon::add_stub",
		"zm_melee_weapon::award_melee_weapon",
		"zm_melee_weapon::change_melee_weapon",
		"zm_melee_weapon::determine_fallback_weapon",
		"zm_melee_weapon::do_melee_weapon_flourish_begin",
		"zm_melee_weapon::do_melee_weapon_flourish_end",
		"zm_melee_weapon::find_melee_weapon",
		"zm_melee_weapon::give_ballistic_knife",
		"zm_melee_weapon::give_fallback_weapon",
		"zm_melee_weapon::give_melee_weapon",
		"zm_melee_weapon::has_any_ballistic_knife",
		"zm_melee_weapon::has_upgraded_ballistic_knife",
		"zm_melee_weapon::init",
		"zm_melee_weapon::melee_weapon_show",
		"zm_melee_weapon::melee_weapon_think",
		"zm_melee_weapon::player_can_see_weapon_prompt",
		"zm_melee_weapon::prepare_stub",
		"zm_melee_weapon::set_fallback_weapon",
		"zm_melee_weapon::spectator_respawn",
		"zm_melee_weapon::spectator_respawn_all",
		"zm_melee_weapon::take_fallback_weapon",
		"zm_melee_weapon::trigger_hide",
		"zm_melee_weapon::trigger_hide_all",
		"zm_mgturret::avoid_synchronization",
		"zm_mgturret::burst_fire",
		"zm_mgturret::burst_fire_settings",
		"zm_mgturret::burst_fire_unmanned",
		"zm_mgturret::do_shoot",
		"zm_mgturret::init_turret_difficulty_settings",
		"zm_mgturret::main",
		"zm_mgturret::random_spread",
		"zm_mgturret::set_difficulty",
		"zm_mgturret::turret_set_difficulty",
		"zm_mgturret::turret_suppression_fire",
		"zm_mgturret::turret_timer",
		"zm_net::network_choke_action",
		"zm_net::network_choke_init",
		"zm_net::network_choke_safe",
		"zm_net::network_choke_thread",
		"zm_net::network_entity_valid",
		"zm_net::network_safe_init",
		"zm_net::network_safe_play_fx_on_tag",
		"zm_net::network_safe_spawn",
		"zm_pap_util::can_swap_attachments",
		"zm_pap_util::enable_swap_attachments",
		"zm_pap_util::get_triggers",
		"zm_pap_util::init_parameters",
		"zm_pap_util::is_pap_trigger",
		"zm_pap_util::set_grabbable_by_anyone",
		"zm_pap_util::set_interaction_height",
		"zm_pap_util::set_interaction_trigger_height",
		"zm_pap_util::set_interaction_trigger_radius",
		"zm_pap_util::set_move_in_func",
		"zm_pap_util::set_move_out_func",
		"zm_pap_util::set_timeout",
		"zm_pap_util::update_hint_string",
		"zm_perks::check_for_change",
		"zm_perks::check_player_has_perk",
		"zm_perks::default_vending_precaching",
		"zm_perks::do_initial_power_off_callback",
		"zm_perks::electric_perks_dialog",
		"zm_perks::getVendingMachineNotify",
		"zm_perks::get_perk_array",
		"zm_perks::get_perk_machine_start_state",
		"zm_perks::give_perk",
		"zm_perks::give_perk_presentation",
		"zm_perks::give_random_perk",
		"zm_perks::has_perk_paused",
		"zm_perks::host_migration_func",
		"zm_perks::init",
		"zm_perks::initialize_custom_perk_arrays",
		"zm_perks::init_custom_perks",
		"zm_perks::init_perk_custom_threads",
		"zm_perks::init_perk_machines_fx",
		"zm_perks::lose_random_perk",
		"zm_perks::perks_register_clientfield",
		"zm_perks::perk_abort_drinking",
		"zm_perks::perk_fx",
		"zm_perks::perk_give_bottle_begin",
		"zm_perks::perk_give_bottle_end",
		"zm_perks::perk_hostmigration",
		"zm_perks::perk_hud_destroy",
		"zm_perks::perk_hud_grey",
		"zm_perks::perk_init_code_callbacks",
		"zm_perks::perk_machine_removal",
		"zm_perks::perk_machine_spawn_init",
		"zm_perks::perk_machine_think",
		"zm_perks::perk_meteor_fx",
		"zm_perks::perk_pause",
		"zm_perks::perk_pause_all_perks",
		"zm_perks::perk_set_max_health_if_jugg",
		"zm_perks::perk_start_up",
		"zm_perks::perk_think",
		"zm_perks::perk_unpause",
		"zm_perks::perk_unpause_all_perks",
		"zm_perks::players_are_in_perk_area",
		"zm_perks::play_loop_on_machine",
		"zm_perks::play_perk_fx_on_client",
		"zm_perks::quantum_bomb_give_nearest_perk_result",
		"zm_perks::quantum_bomb_give_nearest_perk_validation",
		"zm_perks::register_perk_basic_info",
		"zm_perks::register_perk_clientfields",
		"zm_perks::register_perk_damage_override_func",
		"zm_perks::register_perk_effects",
		"zm_perks::register_perk_host_migration_params",
		"zm_perks::register_perk_init_thread",
		"zm_perks::register_perk_machine",
		"zm_perks::register_perk_machine_power_override",
		"zm_perks::register_perk_precache_func",
		"zm_perks::register_perk_threads",
		"zm_perks::register_revive_success_perk_func",
		"zm_perks::reset_vending_hint_string",
		"zm_perks::return_retained_perks",
		"zm_perks::set_perk_clientfield",
		"zm_perks::set_power_on",
		"zm_perks::spare_change",
		"zm_perks::thread_bump_trigger",
		"zm_perks::turn_perk_off",
		"zm_perks::update_perk_hud",
		"zm_perks::use_solo_revive",
		"zm_perks::vending_machine_flicker_light",
		"zm_perks::vending_set_hintstring",
		"zm_perks::vending_trigger_can_player_use",
		"zm_perks::vending_trigger_post_think",
		"zm_perks::vending_trigger_think",
		"zm_perks::wait_give_perk",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_client_field_func",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_code_callback_func",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_perk_machine_setup",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_precache",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_register_clientfield",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_set_clientfield",
		"zm_perk_additionalprimaryweapon::enable_additional_primary_weapon_perk_for_level",
		"zm_perk_additionalprimaryweapon::give_additional_primary_weapon_perk",
		"zm_perk_additionalprimaryweapon::init_additional_primary_weapon",
		"zm_perk_additionalprimaryweapon::on_laststand",
		"zm_perk_additionalprimaryweapon::return_additionalprimaryweapon",
		"zm_perk_additionalprimaryweapon::take_additionalprimaryweapon",
		"zm_perk_additionalprimaryweapon::take_additional_primary_weapon_perk",
		"zm_perk_deadshot::deadshot_client_field_func",
		"zm_perk_deadshot::deadshot_code_callback_func",
		"zm_perk_deadshot::deadshot_perk_machine_setup",
		"zm_perk_deadshot::deadshot_precache",
		"zm_perk_deadshot::deadshot_register_clientfield",
		"zm_perk_deadshot::deadshot_set_clientfield",
		"zm_perk_deadshot::enable_deadshot_perk_for_level",
		"zm_perk_deadshot::give_deadshot_perk",
		"zm_perk_deadshot::init_deadshot",
		"zm_perk_deadshot::player_deadshot_perk_handler",
		"zm_perk_deadshot::take_deadshot_perk",
		"zm_perk_doubletap2::doubletap2_client_field_func",
		"zm_perk_doubletap2::doubletap2_code_callback_func",
		"zm_perk_doubletap2::doubletap2_perk_machine_setup",
		"zm_perk_doubletap2::doubletap2_precache",
		"zm_perk_doubletap2::doubletap2_register_clientfield",
		"zm_perk_doubletap2::doubletap2_set_clientfield",
		"zm_perk_doubletap2::enable_doubletap2_perk_for_level",
		"zm_perk_doubletap2::init_doubletap2",
		"zm_perk_electric_cherry::check_for_reload_complete",
		"zm_perk_electric_cherry::electric_cherry_client_field_func",
		"zm_perk_electric_cherry::electric_cherry_code_callback_func",
		"zm_perk_electric_cherry::electric_cherry_cooldown_timer",
		"zm_perk_electric_cherry::electric_cherry_death_fx",
		"zm_perk_electric_cherry::electric_cherry_host_migration_func",
		"zm_perk_electric_cherry::electric_cherry_laststand",
		"zm_perk_electric_cherry::electric_cherry_perk_lost",
		"zm_perk_electric_cherry::electric_cherry_perk_machine_setup",
		"zm_perk_electric_cherry::electric_cherry_perk_machine_think",
		"zm_perk_electric_cherry::electric_cherry_precache",
		"zm_perk_electric_cherry::electric_cherry_register_clientfield",
		"zm_perk_electric_cherry::electric_cherry_reload_attack",
		"zm_perk_electric_cherry::electric_cherry_reload_attack_fx",
		"zm_perk_electric_cherry::electric_cherry_reload_fx",
		"zm_perk_electric_cherry::electric_cherry_set_clientfield",
		"zm_perk_electric_cherry::electric_cherry_shock_fx",
		"zm_perk_electric_cherry::electric_cherry_stun",
		"zm_perk_electric_cherry::enable_electric_cherry_perk_for_level",
		"zm_perk_electric_cherry::init_electric_cherry",
		"zm_perk_electric_cherry::tesla_death_fx_callback",
		"zm_perk_electric_cherry::tesla_shock_eyes_fx_callback",
		"zm_perk_electric_cherry::weapon_replaced_monitor",
		"zm_perk_juggernaut::enable_juggernaut_perk_for_level",
		"zm_perk_juggernaut::give_juggernaut_perk",
		"zm_perk_juggernaut::init_juggernaut",
		"zm_perk_juggernaut::juggernaut_client_field_func",
		"zm_perk_juggernaut::juggernaut_code_callback_func",
		"zm_perk_juggernaut::juggernaut_perk_machine_setup",
		"zm_perk_juggernaut::juggernaut_precache",
		"zm_perk_juggernaut::juggernaut_register_clientfield",
		"zm_perk_juggernaut::juggernaut_set_clientfield",
		"zm_perk_juggernaut::take_juggernaut_perk",
		"zm_perk_quick_revive::check_quickrevive_for_hotjoin",
		"zm_perk_quick_revive::disable_quickrevive",
		"zm_perk_quick_revive::enable_quick_revive_perk_for_level",
		"zm_perk_quick_revive::give_quick_revive_perk",
		"zm_perk_quick_revive::init_quick_revive",
		"zm_perk_quick_revive::quick_revive_callback_func",
		"zm_perk_quick_revive::quick_revive_client_field_func",
		"zm_perk_quick_revive::quick_revive_perk_machine_setup",
		"zm_perk_quick_revive::quick_revive_precache",
		"zm_perk_quick_revive::quick_revive_register_clientfield",
		"zm_perk_quick_revive::quick_revive_set_clientfield",
		"zm_perk_quick_revive::reenable_quickrevive",
		"zm_perk_quick_revive::restart_quickrevive",
		"zm_perk_quick_revive::revive_cost_override",
		"zm_perk_quick_revive::revive_solo_fx",
		"zm_perk_quick_revive::solo_revive_buy_trigger_move",
		"zm_perk_quick_revive::solo_revive_buy_trigger_move_trigger",
		"zm_perk_quick_revive::take_quick_revive_perk",
		"zm_perk_quick_revive::turn_revive_on",
		"zm_perk_quick_revive::unhide_quickrevive",
		"zm_perk_quick_revive::update_quickrevive_power_state",
		"zm_perk_quick_revive::update_quick_revive",
		"zm_perk_random::can_buy_perk",
		"zm_perk_random::create_perk_random_machine_unitrigger_stub",
		"zm_perk_random::fx_activation_electric_loop",
		"zm_perk_random::fx_artifact_pulse_thread",
		"zm_perk_random::fx_bottle_cycling",
		"zm_perk_random::GetWeaponModel",
		"zm_perk_random::get_perk_weapon_model",
		"zm_perk_random::get_weighted_random_perk",
		"zm_perk_random::grab_check",
		"zm_perk_random::include_perk_in_random_rotation",
		"zm_perk_random::init_animtree",
		"zm_perk_random::is_power_on",
		"zm_perk_random::lightning_bolt_fx_toggle",
		"zm_perk_random::machine_selector",
		"zm_perk_random::machine_sounds",
		"zm_perk_random::machine_think",
		"zm_perk_random::monitor_when_player_acquires_perk",
		"zm_perk_random::perk_bottle_motion",
		"zm_perk_random::perk_random_arrive",
		"zm_perk_random::perk_random_idle",
		"zm_perk_random::perk_random_initial",
		"zm_perk_random::perk_random_leaving",
		"zm_perk_random::perk_random_loop_anim",
		"zm_perk_random::perk_random_machine_init",
		"zm_perk_random::perk_random_machine_rock_emissive",
		"zm_perk_random::perk_random_machine_stub_update_prompt",
		"zm_perk_random::perk_random_machine_trigger_update_prompt",
		"zm_perk_random::perk_random_unitrigger_think",
		"zm_perk_random::perk_random_vending",
		"zm_perk_random::perk_random_vend_sfx",
		"zm_perk_random::player_has_all_available_perks",
		"zm_perk_random::process_perk_random_machine_state",
		"zm_perk_random::rock_emissive_fade",
		"zm_perk_random::rock_emissive_think",
		"zm_perk_random::setup_devgui",
		"zm_perk_random::set_light_state",
		"zm_perk_random::set_perk_random_machine_state",
		"zm_perk_random::start_bottle_cycling",
		"zm_perk_random::start_perk_bottle_cycling",
		"zm_perk_random::start_vortex_fx",
		"zm_perk_random::stop_vortex_fx",
		"zm_perk_random::time_out_check",
		"zm_perk_random::trigger_visible_to_player",
		"zm_perk_random::turn_on_active_ball_light",
		"zm_perk_random::turn_on_active_light_green",
		"zm_perk_random::turn_on_location_indicator",
		"zm_perk_random::wait_for_power",
		"zm_perk_random::wunderfizz_devgui_callback",
		"zm_perk_random::zone_captured_cb",
		"zm_perk_sleight_of_hand::enable_sleight_of_hand_perk_for_level",
		"zm_perk_sleight_of_hand::init_sleight_of_hand",
		"zm_perk_sleight_of_hand::sleight_of_hand_client_field_func",
		"zm_perk_sleight_of_hand::sleight_of_hand_code_callback_func",
		"zm_perk_sleight_of_hand::sleight_of_hand_perk_machine_setup",
		"zm_perk_sleight_of_hand::sleight_of_hand_precache",
		"zm_perk_sleight_of_hand::sleight_of_hand_register_clientfield",
		"zm_perk_sleight_of_hand::sleight_of_hand_set_clientfield",
		"zm_perk_staminup::enable_staminup_perk_for_level",
		"zm_perk_staminup::init_staminup",
		"zm_perk_staminup::staminup_callback_func",
		"zm_perk_staminup::staminup_client_field_func",
		"zm_perk_staminup::staminup_perk_machine_setup",
		"zm_perk_staminup::staminup_precache",
		"zm_perk_staminup::staminup_register_clientfield",
		"zm_perk_staminup::staminup_set_clientfield",
		"zm_perk_widows_wine::enable_widows_wine_perk_for_level",
		"zm_perk_widows_wine::grenade_bounces",
		"zm_perk_widows_wine::grenade_bounce_monitor",
		"zm_perk_widows_wine::init_widows_wine",
		"zm_perk_widows_wine::powerup_widows_wine_timeout",
		"zm_perk_widows_wine::vehicle_stuck_grenade_monitor",
		"zm_perk_widows_wine::widows_wine_1p_contact_explosion",
		"zm_perk_widows_wine::widows_wine_1p_contact_explosion_play",
		"zm_perk_widows_wine::widows_wine_client_field_func",
		"zm_perk_widows_wine::widows_wine_cocoon_zombie",
		"zm_perk_widows_wine::widows_wine_cocoon_zombie_score",
		"zm_perk_widows_wine::widows_wine_code_callback_func",
		"zm_perk_widows_wine::widows_wine_contact_explosion",
		"zm_perk_widows_wine::widows_wine_damage_callback",
		"zm_perk_widows_wine::widows_wine_override_melee_wallbuy_purchase",
		"zm_perk_widows_wine::widows_wine_override_wallbuy_purchase",
		"zm_perk_widows_wine::widows_wine_perk_activate",
		"zm_perk_widows_wine::widows_wine_perk_lost",
		"zm_perk_widows_wine::widows_wine_perk_machine_setup",
		"zm_perk_widows_wine::widows_wine_precache",
		"zm_perk_widows_wine::widows_wine_register_clientfield",
		"zm_perk_widows_wine::widows_wine_set_clientfield",
		"zm_perk_widows_wine::widows_wine_slow_zombie",
		"zm_perk_widows_wine::widows_wine_vehicle_behavior",
		"zm_perk_widows_wine::widows_wine_vehicle_damage_response",
		"zm_perk_widows_wine::widows_wine_wrap_cb",
		"zm_perk_widows_wine::widows_wine_zombie_damage_response",
		"zm_perk_widows_wine::widows_wine_zombie_death_watch",
		"zm_pers_upgrades::insta_kill_pers_upgrade_icon",
		"zm_pers_upgrades::is_insta_kill_upgraded_and_active",
		"zm_pers_upgrades::is_pers_system_active",
		"zm_pers_upgrades::is_pers_system_disabled",
		"zm_pers_upgrades::kill_insta_kill_upgrade_hud_icon",
		"zm_pers_upgrades::persistent_carpenter_ability_check",
		"zm_pers_upgrades::pers_abilities_init_globals",
		"zm_pers_upgrades::pers_upgrade_boards_active",
		"zm_pers_upgrades::pers_upgrade_box_weapon_active",
		"zm_pers_upgrades::pers_upgrade_carpenter_active",
		"zm_pers_upgrades::pers_upgrade_cash_back_active",
		"zm_pers_upgrades::pers_upgrade_double_points_active",
		"zm_pers_upgrades::pers_upgrade_headshot_active",
		"zm_pers_upgrades::pers_upgrade_init",
		"zm_pers_upgrades::pers_upgrade_insta_kill_active",
		"zm_pers_upgrades::pers_upgrade_jugg_active",
		"zm_pers_upgrades::pers_upgrade_nube_active",
		"zm_pers_upgrades::pers_upgrade_perk_lose_active",
		"zm_pers_upgrades::pers_upgrade_pistol_points_active",
		"zm_pers_upgrades::pers_upgrade_revive_active",
		"zm_pers_upgrades::pers_upgrade_sniper_active",
		"zm_pers_upgrades::pers_zombie_death_location_check",
		"zm_pers_upgrades::setup_pers_upgrade_boards",
		"zm_pers_upgrades::setup_pers_upgrade_box_weapon",
		"zm_pers_upgrades::setup_pers_upgrade_carpenter",
		"zm_pers_upgrades::setup_pers_upgrade_cash_back",
		"zm_pers_upgrades::setup_pers_upgrade_double_points",
		"zm_pers_upgrades::setup_pers_upgrade_insta_kill",
		"zm_pers_upgrades::setup_pers_upgrade_jugg",
		"zm_pers_upgrades::setup_pers_upgrade_multi_kill_headshots",
		"zm_pers_upgrades::setup_pers_upgrade_nube",
		"zm_pers_upgrades::setup_pers_upgrade_perk_lose",
		"zm_pers_upgrades::setup_pers_upgrade_pistol_points",
		"zm_pers_upgrades::setup_pers_upgrade_revive",
		"zm_pers_upgrades::setup_pers_upgrade_sniper",
		"zm_pers_upgrades::time_remaining_pers_upgrade",
		"zm_pers_upgrades_functions::box_firesale_teddy_bear",
		"zm_pers_upgrades_functions::cash_back_money_reward",
		"zm_pers_upgrades_functions::cash_back_player_drinks_perk",
		"zm_pers_upgrades_functions::cash_back_player_prone_check",
		"zm_pers_upgrades_functions::insta_kill_upgraded_player_kill_func",
		"zm_pers_upgrades_functions::is_pers_double_points_active",
		"zm_pers_upgrades_functions::pers_boards_updated",
		"zm_pers_upgrades_functions::pers_check_for_pers_headshot",
		"zm_pers_upgrades_functions::pers_get_player_accuracy",
		"zm_pers_upgrades_functions::pers_increment_revive_stat",
		"zm_pers_upgrades_functions::pers_insta_kill_melee_swipe",
		"zm_pers_upgrades_functions::pers_jugg_active",
		"zm_pers_upgrades_functions::pers_magic_box_firesale",
		"zm_pers_upgrades_functions::pers_magic_box_set_teddy_location",
		"zm_pers_upgrades_functions::pers_magic_box_teddy_bear",
		"zm_pers_upgrades_functions::pers_mulit_kill_headshot_active",
		"zm_pers_upgrades_functions::pers_nube_ammo_cost",
		"zm_pers_upgrades_functions::pers_nube_ammo_hint_string",
		"zm_pers_upgrades_functions::pers_nube_override_ammo_cost",
		"zm_pers_upgrades_functions::pers_nube_player_ranked_as_nube",
		"zm_pers_upgrades_functions::pers_nube_should_we_give_raygun",
		"zm_pers_upgrades_functions::pers_nube_unlock_watcher",
		"zm_pers_upgrades_functions::pers_nube_weapon_ammo_check",
		"zm_pers_upgrades_functions::pers_nube_weapon_upgrade_check",
		"zm_pers_upgrades_functions::pers_revive_active",
		"zm_pers_upgrades_functions::pers_sniper_player_fires",
		"zm_pers_upgrades_functions::pers_sniper_score_reward",
		"zm_pers_upgrades_functions::pers_treasure_chest_ChooseSpecialWeapon",
		"zm_pers_upgrades_functions::pers_treasure_chest_get_weapons_array",
		"zm_pers_upgrades_functions::pers_upgrade_box_weapon_used",
		"zm_pers_upgrades_functions::pers_upgrade_double_points_cost",
		"zm_pers_upgrades_functions::pers_upgrade_double_points_pickup_start",
		"zm_pers_upgrades_functions::pers_upgrade_double_points_set_score",
		"zm_pers_upgrades_functions::pers_upgrade_insta_kill_upgrade_check",
		"zm_pers_upgrades_functions::pers_upgrade_jugg_player_death_stat",
		"zm_pers_upgrades_functions::pers_upgrade_perk_lose_bought",
		"zm_pers_upgrades_functions::pers_upgrade_perk_lose_restore",
		"zm_pers_upgrades_functions::pers_upgrade_perk_lose_save",
		"zm_pers_upgrades_functions::pers_upgrade_pistol_points_kill",
		"zm_pers_upgrades_functions::pers_upgrade_pistol_points_set_score",
		"zm_pers_upgrades_functions::pers_upgrade_sniper_kill_check",
		"zm_pers_upgrades_system::add_pers_upgrade_stat",
		"zm_pers_upgrades_system::check_pers_upgrade",
		"zm_pers_upgrades_system::check_pers_upgrade_stat",
		"zm_pers_upgrades_system::is_any_pers_upgrade_stat_updated",
		"zm_pers_upgrades_system::pers_register_upgrade",
		"zm_pers_upgrades_system::pers_upgrades_monitor",
		"zm_pers_upgrades_system::round_end",
		"zm_pers_upgrades_system::wait_for_game_end",
		"zm_placeable_mine::add_mine_type",
		"zm_placeable_mine::add_planted_callback",
		"zm_placeable_mine::add_weapon_to_mine_slot",
		"zm_placeable_mine::disable_all_prompts_for_player",
		"zm_placeable_mine::disable_prompt_for_player",
		"zm_placeable_mine::get_first_available",
		"zm_placeable_mine::is_true_placeable_mine",
		"zm_placeable_mine::setup_for_player",
		"zm_placeable_mine::setup_watchers",
		"zm_placeable_mine::set_max_per_player",
		"zm_playerhealth::destroyHealthDebug",
		"zm_playerhealth::empty_kill_func",
		"zm_playerhealth::fadeFunc",
		"zm_playerhealth::healthOverlay",
		"zm_playerhealth::healthOverlay_remove",
		"zm_playerhealth::logHit",
		"zm_playerhealth::logRegen",
		"zm_playerhealth::on_player_spawned",
		"zm_playerhealth::playerHealthDebug",
		"zm_playerhealth::playerHealthRegen",
		"zm_playerhealth::playerHurtcheck",
		"zm_playerhealth::playerInvul",
		"zm_playerhealth::player_health_visionset",
		"zm_playerhealth::printHealthDebug",
		"zm_playerhealth::redFlashingOverlay",
		"zm_playerhealth::showHitLog",
		"zm_playerhealth::sndZombieHealth",
		"zm_playerhealth::watchHideRedFlashingOverlay",
		"zm_power::add_local_power",
		"zm_power::add_powered_item",
		"zm_power::add_temp_powered_item",
		"zm_power::change_power",
		"zm_power::change_power_in_radius",
		"zm_power::cost_door",
		"zm_power::cost_high",
		"zm_power::cost_low_if_local",
		"zm_power::cost_negligible",
		"zm_power::debug_powered_items",
		"zm_power::door_local_power_off",
		"zm_power::door_local_power_on",
		"zm_power::door_power_off",
		"zm_power::door_power_on",
		"zm_power::door_range",
		"zm_power::electric_switch",
		"zm_power::electric_switch_init",
		"zm_power::end_local_power",
		"zm_power::get_local_power_cost",
		"zm_power::get_powered_item_cost",
		"zm_power::global_power",
		"zm_power::has_local_power",
		"zm_power::move_local_power",
		"zm_power::never_power_off",
		"zm_power::never_power_on",
		"zm_power::perk_power_off",
		"zm_power::perk_power_on",
		"zm_power::perk_range",
		"zm_power::remove_powered_item",
		"zm_power::revert_power",
		"zm_power::revert_power_to_list",
		"zm_power::set_global_power",
		"zm_power::standard_powered_items",
		"zm_power::stun_zombie",
		"zm_power::turn_power_off_and_close_doors",
		"zm_power::turn_power_on_and_open_doors",
		"zm_power::watch_global_power",
		"zm_power::watch_temp_powered_item",
		"zm_power::zombie_power_off",
		"zm_power::zombie_range",
		"zm_power::zone_controlled_perk",
		"zm_powerups::add_zombie_powerup",
		"zm_powerups::add_zombie_special_drop",
		"zm_powerups::check_for_instakill",
		"zm_powerups::check_for_rare_drop_override",
		"zm_powerups::devil_dialog_delay",
		"zm_powerups::func_should_always_drop",
		"zm_powerups::func_should_never_drop",
		"zm_powerups::get_closest_window_repair",
		"zm_powerups::get_next_powerup",
		"zm_powerups::get_powerups",
		"zm_powerups::get_random_powerup_name",
		"zm_powerups::get_regular_random_powerup_name",
		"zm_powerups::get_valid_powerup",
		"zm_powerups::include_zombie_powerup",
		"zm_powerups::init",
		"zm_powerups::init_player_zombie_vars",
		"zm_powerups::init_powerups",
		"zm_powerups::is_carpenter_boards_upgraded",
		"zm_powerups::is_insta_kill_active",
		"zm_powerups::minigun_no_drop",
		"zm_powerups::point_doubler_on_hud",
		"zm_powerups::powerup_delete",
		"zm_powerups::powerup_delete_delayed",
		"zm_powerups::powerup_drop",
		"zm_powerups::powerup_emp",
		"zm_powerups::powerup_fx_callback",
		"zm_powerups::powerup_grab",
		"zm_powerups::powerup_hud_monitor",
		"zm_powerups::powerup_move",
		"zm_powerups::powerup_remove_from_regular_drops",
		"zm_powerups::powerup_round_start",
		"zm_powerups::powerup_setup",
		"zm_powerups::powerup_set_can_pick_up_in_last_stand",
		"zm_powerups::powerup_set_player_specific",
		"zm_powerups::powerup_set_prevent_pick_up_if_drinking",
		"zm_powerups::powerup_set_statless_powerup",
		"zm_powerups::powerup_show",
		"zm_powerups::powerup_state_callback",
		"zm_powerups::powerup_timeout",
		"zm_powerups::powerup_vo",
		"zm_powerups::powerup_wobble",
		"zm_powerups::powerup_wobble_fx",
		"zm_powerups::powerup_zombie_grab",
		"zm_powerups::powerup_zombie_grab_trigger_cleanup",
		"zm_powerups::print_powerup_drop",
		"zm_powerups::randomize_powerups",
		"zm_powerups::register_carpenter_node",
		"zm_powerups::register_powerup",
		"zm_powerups::register_powerup_weapon",
		"zm_powerups::set_clientfield_code_callbacks",
		"zm_powerups::set_clientfield_powerups",
		"zm_powerups::set_weapon_ignore_max_ammo",
		"zm_powerups::should_award_stat",
		"zm_powerups::show_on_hud",
		"zm_powerups::special_drop_setup",
		"zm_powerups::special_powerup_drop",
		"zm_powerups::specific_powerup_drop",
		"zm_powerups::teller_withdrawl",
		"zm_powerups::tesla_powerup_active",
		"zm_powerups::time_remaining_on_point_doubler_powerup",
		"zm_powerups::time_remaining_on_powerup",
		"zm_powerups::watch_for_drop",
		"zm_powerups::weapon_powerup",
		"zm_powerups::weapon_powerup_change",
		"zm_powerups::weapon_powerup_countdown",
		"zm_powerups::weapon_powerup_remove",
		"zm_powerups::weapon_powerup_replace",
		"zm_powerups::weapon_watch_gunner_downed",
		"zm_powerup_bonfire_sale::grab_bonfire_sale",
		"zm_powerup_bonfire_sale::play_bonfiresale_audio",
		"zm_powerup_bonfire_sale::setup_bonfiresale_audio",
		"zm_powerup_bonfire_sale::start_bonfire_sale",
		"zm_powerup_bonfire_sale::toggle_bonfire_sale_on",
		"zm_powerup_carpenter::func_should_drop_carpenter",
		"zm_powerup_carpenter::get_closest_window_repair",
		"zm_powerup_carpenter::get_far_boards",
		"zm_powerup_carpenter::get_near_boards",
		"zm_powerup_carpenter::get_num_window_destroyed",
		"zm_powerup_carpenter::grab_carpenter",
		"zm_powerup_carpenter::repair_far_boards",
		"zm_powerup_carpenter::start_carpenter",
		"zm_powerup_carpenter::start_carpenter_new",
		"zm_powerup_double_points::double_points_powerup",
		"zm_powerup_double_points::grab_double_points",
		"zm_powerup_fire_sale::apply_fire_sale_to_chest",
		"zm_powerup_fire_sale::check_to_clear_fire_sale",
		"zm_powerup_fire_sale::firesale_chest_is_leaving",
		"zm_powerup_fire_sale::func_should_drop_fire_sale",
		"zm_powerup_fire_sale::grab_fire_sale",
		"zm_powerup_fire_sale::remove_temp_chest",
		"zm_powerup_fire_sale::sndFiresaleMusic_Start",
		"zm_powerup_fire_sale::sndFiresaleMusic_Stop",
		"zm_powerup_fire_sale::start_fire_sale",
		"zm_powerup_fire_sale::toggle_fire_sale_on",
		"zm_powerup_free_perk::disable_perk_before_power",
		"zm_powerup_free_perk::free_perk_powerup",
		"zm_powerup_free_perk::grab_free_perk",
		"zm_powerup_full_ammo::full_ammo_on_hud",
		"zm_powerup_full_ammo::full_ammo_powerup",
		"zm_powerup_full_ammo::grab_full_ammo",
		"zm_powerup_insta_kill::grab_insta_kill",
		"zm_powerup_insta_kill::insta_kill_powerup",
		"zm_powerup_meat_stink::func_should_drop_meat",
		"zm_powerup_meat_stink::grab_meat_stink",
		"zm_powerup_meat_stink::hit_player_with_meat",
		"zm_powerup_meat_stink::item_meat_watch_bounce",
		"zm_powerup_meat_stink::meat_bounce",
		"zm_powerup_meat_stink::meat_stink",
		"zm_powerup_meat_stink::meat_stink_countdown",
		"zm_powerup_meat_stink::meat_stink_on_ground",
		"zm_powerup_meat_stink::meat_stink_player",
		"zm_powerup_meat_stink::meat_stink_player_cleanup",
		"zm_powerup_meat_stink::meat_stink_player_create",
		"zm_powerup_meat_stink::player_watch_grenade_throw",
		"zm_powerup_meat_stink::watch_for_roll",
		"zm_powerup_nuke::grab_nuke",
		"zm_powerup_nuke::nuke_delay_spawning",
		"zm_powerup_nuke::nuke_flash",
		"zm_powerup_nuke::nuke_powerup",
		"zm_powerup_nuke::zombie_nuked",
		"zm_powerup_shield_charge::full_ammo_move_hud",
		"zm_powerup_shield_charge::func_drop_when_players_own",
		"zm_powerup_shield_charge::grab_shield_charge",
		"zm_powerup_shield_charge::shield_charge_powerup",
		"zm_powerup_shield_charge::shield_on_hud",
		"zm_powerup_weapon_minigun::func_should_drop_minigun",
		"zm_powerup_weapon_minigun::grab_minigun",
		"zm_powerup_weapon_minigun::init_player_zombie_vars",
		"zm_powerup_weapon_minigun::minigun_countdown",
		"zm_powerup_weapon_minigun::minigun_damage_adjust",
		"zm_powerup_weapon_minigun::minigun_powerup_last_stand",
		"zm_powerup_weapon_minigun::minigun_weapon_powerup",
		"zm_powerup_weapon_minigun::minigun_weapon_powerup_off",
		"zm_powerup_ww_grenade::grab_ww_grenade",
		"zm_powerup_ww_grenade::ww_grenade_powerup",
		"zm_puppet::wait_for_puppet_pickup",
		"zm_score::add_to_player_score",
		"zm_score::add_to_team_score",
		"zm_score::can_player_purchase",
		"zm_score::doublexp_timer",
		"zm_score::get_points_multiplier",
		"zm_score::get_zombie_death_player_points",
		"zm_score::get_zombie_death_team_points",
		"zm_score::minus_to_player_score",
		"zm_score::minus_to_team_score",
		"zm_score::player_add_points",
		"zm_score::player_add_points_kill_bonus",
		"zm_score::player_died_penalty",
		"zm_score::player_downed_penalty",
		"zm_score::player_on_spawned",
		"zm_score::player_reduce_points",
		"zm_score::register_score_event",
		"zm_score::reset_doublexp_timer",
		"zm_score::score_cf_increment_info",
		"zm_score::score_cf_register_info",
		"zm_score::wait_score_cf_increment_info",
		"zm_server_throttle::server_choke_action",
		"zm_server_throttle::server_choke_init",
		"zm_server_throttle::server_choke_safe",
		"zm_server_throttle::server_choke_thread",
		"zm_server_throttle::server_entity_valid",
		"zm_server_throttle::server_safe_ground_trace",
		"zm_server_throttle::server_safe_ground_trace_ignore_water",
		"zm_server_throttle::server_safe_init",
		"zm_sidequests::add_sidequest_icon",
		"zm_sidequests::build_assets",
		"zm_sidequests::build_asset_from_struct",
		"zm_sidequests::create_icon",
		"zm_sidequests::damager_trigger_thread",
		"zm_sidequests::damage_trigger_thread",
		"zm_sidequests::dam_trigger_thread",
		"zm_sidequests::declare_sidequest",
		"zm_sidequests::declare_sidequest_asset",
		"zm_sidequests::declare_sidequest_asset_from_struct",
		"zm_sidequests::declare_sidequest_icon",
		"zm_sidequests::declare_sidequest_stage",
		"zm_sidequests::declare_stage_asset",
		"zm_sidequests::declare_stage_asset_from_struct",
		"zm_sidequests::declare_stage_title",
		"zm_sidequests::delete_stage_assets",
		"zm_sidequests::display_stage_title",
		"zm_sidequests::fake_use",
		"zm_sidequests::get_damage_trigger",
		"zm_sidequests::get_sidequest_stage",
		"zm_sidequests::init_sidequests",
		"zm_sidequests::is_facing",
		"zm_sidequests::is_sidequest_allowed",
		"zm_sidequests::main",
		"zm_sidequests::precache_sidequest_assets",
		"zm_sidequests::radius_trigger_thread",
		"zm_sidequests::register_sidequest_icon",
		"zm_sidequests::remove_sidequest_icon",
		"zm_sidequests::set_stage_time_limit",
		"zm_sidequests::sidequest_complete",
		"zm_sidequests::sidequest_debug",
		"zm_sidequests::sidequest_println",
		"zm_sidequests::sidequest_stage_active",
		"zm_sidequests::sidequest_start",
		"zm_sidequests::sidequest_start_next_stage",
		"zm_sidequests::sidequest_uses_teleportation",
		"zm_sidequests::stage_completed",
		"zm_sidequests::stage_completed_internal",
		"zm_sidequests::stage_failed",
		"zm_sidequests::stage_failed_internal",
		"zm_sidequests::stage_logic_func_wrapper",
		"zm_sidequests::stage_start",
		"zm_sidequests::thread_on_assets",
		"zm_sidequests::time_limited_stage",
		"zm_sidequests::use_trigger_thread",
		"zm_spawner::add_cusom_zombie_spawn_logic",
		"zm_spawner::add_custom_zombie_spawn_logic",
		"zm_spawner::attractors_generated_listener",
		"zm_spawner::check_for_zombie_death",
		"zm_spawner::check_zbarrier_piece_for_zombie_death",
		"zm_spawner::check_zbarrier_piece_for_zombie_inert",
		"zm_spawner::check_zombie_damage_callbacks",
		"zm_spawner::check_zombie_death_animscript_callbacks",
		"zm_spawner::check_zombie_death_event_callbacks",
		"zm_spawner::crumb_is_bad",
		"zm_spawner::damage_on_fire",
		"zm_spawner::debug_show_exterior_goals",
		"zm_spawner::deregister_zombie_death_event_callback",
		"zm_spawner::do_a_taunt",
		"zm_spawner::do_zombie_rise",
		"zm_spawner::do_zombie_spawn",
		"zm_spawner::dragons_breath_flame_death_fx",
		"zm_spawner::draw_zone_spawned_from",
		"zm_spawner::enemy_death_detection",
		"zm_spawner::get_attack_spot",
		"zm_spawner::get_attack_spot_index",
		"zm_spawner::get_number_variants",
		"zm_spawner::init",
		"zm_spawner::is_spawner_targeted_by_blocker",
		"zm_spawner::is_weapon_shotgun",
		"zm_spawner::jitter_enemies_bad_breadcrumbs",
		"zm_spawner::player_attacker",
		"zm_spawner::player_attacks_enemy",
		"zm_spawner::player_can_score_from_zombies",
		"zm_spawner::player_using_hi_score_weapon",
		"zm_spawner::play_ambient_zombie_vocals",
		"zm_spawner::register_zombie_damage_callback",
		"zm_spawner::register_zombie_death_animscript_callback",
		"zm_spawner::register_zombie_death_event_callback",
		"zm_spawner::should_attack_player_thru_boards",
		"zm_spawner::should_skip_teardown",
		"zm_spawner::stop_zombie_rise_dust_fx",
		"zm_spawner::taunt_notetracks",
		"zm_spawner::tear_into_building",
		"zm_spawner::window_notetracks",
		"zm_spawner::zombie_assure_node",
		"zm_spawner::zombie_bad_path",
		"zm_spawner::zombie_bad_path_notify",
		"zm_spawner::zombie_bad_path_timeout",
		"zm_spawner::zombie_bartear_offset_fx_horizontle",
		"zm_spawner::zombie_bartear_offset_fx_verticle",
		"zm_spawner::zombie_boardtear_offset_fx_horizontle",
		"zm_spawner::zombie_boardtear_offset_fx_verticle",
		"zm_spawner::zombie_can_drop_powerups",
		"zm_spawner::zombie_complete_emerging_into_playable_area",
		"zm_spawner::zombie_damage",
		"zm_spawner::zombie_damage_ads",
		"zm_spawner::zombie_damage_failsafe",
		"zm_spawner::zombie_death_animscript",
		"zm_spawner::zombie_death_event",
		"zm_spawner::zombie_death_points",
		"zm_spawner::zombie_delay_powerup_drop",
		"zm_spawner::zombie_entered_playable",
		"zm_spawner::zombie_explodes_intopieces",
		"zm_spawner::zombie_findnodes",
		"zm_spawner::zombie_flame_damage",
		"zm_spawner::zombie_follow_enemy",
		"zm_spawner::zombie_free_cam_allowed",
		"zm_spawner::zombie_give_flame_damage_points",
		"zm_spawner::zombie_goto_entrance",
		"zm_spawner::zombie_history",
		"zm_spawner::zombie_pathing",
		"zm_spawner::zombie_pathing_get_breadcrumb",
		"zm_spawner::zombie_push",
		"zm_spawner::zombie_ragdoll_then_explode",
		"zm_spawner::zombie_repath_notifier",
		"zm_spawner::zombie_rise_burst_fx",
		"zm_spawner::zombie_rise_dust_fx",
		"zm_spawner::zombie_rise_fx",
		"zm_spawner::zombie_setup_attack_properties",
		"zm_spawner::zombie_spawn_init",
		"zm_spawner::zombie_tear_notetracks",
		"zm_spawner::zombie_tesla_head_gib",
		"zm_spawner::zombie_think",
		"zm_stats::add_client_stat",
		"zm_stats::add_game_mode_group_stat",
		"zm_stats::add_game_mode_stat",
		"zm_stats::add_global_stat",
		"zm_stats::add_location_gametype_stat",
		"zm_stats::add_map_stat",
		"zm_stats::add_map_weaponlocker_stat",
		"zm_stats::adjustRecentStats",
		"zm_stats::clear_stored_weapondata",
		"zm_stats::do_stats_for_gibs",
		"zm_stats::get_game_mode_group_stat",
		"zm_stats::get_game_mode_stat",
		"zm_stats::get_global_stat",
		"zm_stats::get_location_gametype_stat",
		"zm_stats::get_map_stat",
		"zm_stats::get_map_weaponlocker_stat",
		"zm_stats::get_specific_stat",
		"zm_stats::get_stat_combined_rank_value_grief",
		"zm_stats::get_stat_combined_rank_value_survival_classic",
		"zm_stats::get_stat_distance_traveled",
		"zm_stats::get_stat_round_number",
		"zm_stats::get_stored_weapondata",
		"zm_stats::grief_custom_stat_update",
		"zm_stats::has_stored_weapondata",
		"zm_stats::highwater_global_stat",
		"zm_stats::highwater_map_stat",
		"zm_stats::increment_challenge_stat",
		"zm_stats::increment_client_stat",
		"zm_stats::increment_global_stat",
		"zm_stats::increment_map_cheat_stat",
		"zm_stats::increment_map_stat",
		"zm_stats::increment_player_stat",
		"zm_stats::increment_root_stat",
		"zm_stats::initializeMatchStats",
		"zm_stats::player_stats_init",
		"zm_stats::set_client_stat",
		"zm_stats::set_game_mode_group_stat",
		"zm_stats::set_game_mode_stat",
		"zm_stats::set_global_stat",
		"zm_stats::set_location_gametype_stat",
		"zm_stats::set_map_stat",
		"zm_stats::set_map_weaponlocker_stat",
		"zm_stats::set_stored_weapondata",
		"zm_stats::survival_classic_custom_stat_update",
		"zm_stats::update_global_counters_on_match_end",
		"zm_stats::update_players_stats_at_match_end",
		"zm_stats::update_playing_utc_time",
		"zm_stats::uploadStatsSoon",
		"zm_stats::zero_client_stat",
		"zm_timer::start_timer",
		"zm_timer::update_hud_position",
		"zm_timer::wait_for_stop_notify",
		"zm_traps::electroctute_death_fx",
		"zm_traps::electrocute_timeout",
		"zm_traps::get_trap_array",
		"zm_traps::init",
		"zm_traps::is_trap_registered",
		"zm_traps::player_elec_damage",
		"zm_traps::player_fire_damage",
		"zm_traps::play_elec_vocals",
		"zm_traps::register_trap_basic_info",
		"zm_traps::register_trap_damage",
		"zm_traps::register_visionsets",
		"zm_traps::trap_activate_fire",
		"zm_traps::trap_activate_flipper",
		"zm_traps::trap_activate_rotating",
		"zm_traps::trap_audio_fx",
		"zm_traps::trap_damage",
		"zm_traps::trap_dialog",
		"zm_traps::trap_disable",
		"zm_traps::trap_enable",
		"zm_traps::trap_init",
		"zm_traps::trap_lights_green",
		"zm_traps::trap_lights_red",
		"zm_traps::trap_main",
		"zm_traps::trap_model_type_init",
		"zm_traps::trap_move_switches",
		"zm_traps::trap_set_string",
		"zm_traps::trap_use_think",
		"zm_traps::trig_update",
		"zm_traps::zombie_flame_watch",
		"zm_traps::zombie_trap_death",
		"zm_trap_electric::damage",
		"zm_trap_electric::electric_trap_fx",
		"zm_trap_electric::player_damage",
		"zm_trap_electric::play_electrical_sound",
		"zm_trap_electric::stop_trap_fx",
		"zm_trap_electric::trap_activate_electric",
		"zm_trap_electric::trap_audio",
		"zm_trap_electric::trap_fx_monitor",
		"zm_trap_fire::damage",
		"zm_trap_fire::fire_trap_fx",
		"zm_trap_fire::player_damage",
		"zm_trap_fire::play_fire_sound",
		"zm_trap_fire::stop_trap_fx",
		"zm_trap_fire::trap_activate_fire",
		"zm_trap_fire::trap_audio",
		"zm_trap_fire::trap_fx_monitor",
		"zm_turned::delay_turning_on_eyes",
		"zm_turned::deleteZombiesInRadius",
		"zm_turned::getSpawnPoint",
		"zm_turned::get_available_human",
		"zm_turned::get_farthest_available_zombie",
		"zm_turned::init",
		"zm_turned::setup_zombie_exerts",
		"zm_turned::silentlyRemoveZombie",
		"zm_turned::turned_disable_player_weapons",
		"zm_turned::turned_enable_player_weapons",
		"zm_turned::turned_give_melee_weapon",
		"zm_turned::turned_player_buttons",
		"zm_turned::turn_to_human",
		"zm_turned::turn_to_zombie",
		"zm_unitrigger::assess_and_apply_visibility",
		"zm_unitrigger::build_trigger_from_unitrigger_stub",
		"zm_unitrigger::check_and_build_trigger_from_unitrigger_stub",
		"zm_unitrigger::cleanup_trigger",
		"zm_unitrigger::copy_zombie_keys_onto_trigger",
		"zm_unitrigger::create_dyn_unitrigger",
		"zm_unitrigger::create_unitrigger",
		"zm_unitrigger::debug_unitriggers",
		"zm_unitrigger::delay_delete_contact_ent",
		"zm_unitrigger::get_closest_unitriggers",
		"zm_unitrigger::is_same_trigger",
		"zm_unitrigger::main",
		"zm_unitrigger::register_dyn_unitrigger",
		"zm_unitrigger::register_static_unitrigger",
		"zm_unitrigger::register_unitrigger",
		"zm_unitrigger::register_unitrigger_internal",
		"zm_unitrigger::register_unitrigger_system_func",
		"zm_unitrigger::reregister_unitrigger_as_dynamic",
		"zm_unitrigger::run_visibility_function_for_all_triggers",
		"zm_unitrigger::trigger_thread",
		"zm_unitrigger::unitrigger_force_per_player_triggers",
		"zm_unitrigger::unitrigger_logic",
		"zm_unitrigger::unitrigger_origin",
		"zm_unitrigger::unitrigger_prompt_and_visibility",
		"zm_unitrigger::unitrigger_trigger",
		"zm_unitrigger::unregister_unitrigger",
		"zm_unitrigger::unregister_unitrigger_internal",
		"zm_utility::activate_zombie_point_of_interest",
		"zm_utility::add_gameloc",
		"zm_utility::add_gametype",
		"zm_utility::add_poi_attractor",
		"zm_utility::add_poi_to_ignore_list",
		"zm_utility::add_sound",
		"zm_utility::add_vox_response_chance",
		"zm_utility::add_zombie_hint",
		"zm_utility::all_chunks_destroyed",
		"zm_utility::all_chunks_intact",
		"zm_utility::anchor_delete_failsafe",
		"zm_utility::approximate_path_dist",
		"zm_utility::array_check_for_dupes_using_compare",
		"zm_utility::array_flag_wait_any",
		"zm_utility::array_flag_wait_any_thread",
		"zm_utility::array_limiter",
		"zm_utility::assign_zombie_point_of_interest",
		"zm_utility::bullet_attack",
		"zm_utility::can_attract",
		"zm_utility::can_player_purchase_perk",
		"zm_utility::change_zombie_run_cycle",
		"zm_utility::check_and_create_node_lists",
		"zm_utility::check_point_in_enabled_zone",
		"zm_utility::check_point_in_playable_area",
		"zm_utility::clear_fog_threads",
		"zm_utility::clear_is_drinking",
		"zm_utility::clear_mature_blood",
		"zm_utility::clear_run_anim",
		"zm_utility::clear_streamer_hint",
		"zm_utility::ConvertSecondsToMilliseconds",
		"zm_utility::create_counter_hud",
		"zm_utility::create_simple_hud",
		"zm_utility::create_streamer_hint",
		"zm_utility::create_vox_timer",
		"zm_utility::create_zombie_point_of_interest",
		"zm_utility::create_zombie_point_of_interest_attractor_positions",
		"zm_utility::deactivate_zombie_point_of_interest",
		"zm_utility::debug_attack_spots_taken",
		"zm_utility::debug_blocker",
		"zm_utility::debug_breadcrumbs",
		"zm_utility::debug_draw_attractor_positions",
		"zm_utility::debug_draw_claimed_attractor_positions",
		"zm_utility::debug_draw_new_attractor_positions",
		"zm_utility::debug_print",
		"zm_utility::debug_round_advancer",
		"zm_utility::decrement_ignoreme",
		"zm_utility::decrement_is_drinking",
		"zm_utility::decrement_no_end_game_check",
		"zm_utility::default_validate_enemy_path_length",
		"zm_utility::delete_spawned_path_nodes",
		"zm_utility::destroy_ent",
		"zm_utility::destroy_hud",
		"zm_utility::disable_player_move_states",
		"zm_utility::disable_react",
		"zm_utility::display_message",
		"zm_utility::does_player_have_correct_navcard",
		"zm_utility::does_player_have_map_navcard",
		"zm_utility::do_player_general_vox",
		"zm_utility::do_player_vo",
		"zm_utility::drawcylinder",
		"zm_utility::draw_line_ent_to_ent",
		"zm_utility::draw_line_ent_to_pos",
		"zm_utility::enable_player_move_states",
		"zm_utility::enable_react",
		"zm_utility::ent_flag_init_ai_standards",
		"zm_utility::ent_flag_wait_ai_standards",
		"zm_utility::fake_physicslaunch",
		"zm_utility::flat_angle",
		"zm_utility::float_print3d",
		"zm_utility::general_vox_timer",
		"zm_utility::generated_radius_attract_positions",
		"zm_utility::getWeaponClassZM",
		"zm_utility::GetYaw",
		"zm_utility::GetYawToSpot",
		"zm_utility::get_chunk_state",
		"zm_utility::get_closest_2d",
		"zm_utility::get_closest_index",
		"zm_utility::get_closest_index_to_entity",
		"zm_utility::get_closest_node",
		"zm_utility::get_closest_non_destroyed_chunk",
		"zm_utility::get_closest_player",
		"zm_utility::get_closest_valid_player",
		"zm_utility::get_current_zone",
		"zm_utility::get_destroyed_chunks",
		"zm_utility::get_destroyed_repair_grates",
		"zm_utility::get_gamemode_var",
		"zm_utility::get_game_var",
		"zm_utility::get_hint_string",
		"zm_utility::get_non_destroyed_chunks",
		"zm_utility::get_non_destroyed_chunks_grate",
		"zm_utility::get_non_destroyed_variant1",
		"zm_utility::get_non_destroyed_variant2",
		"zm_utility::get_non_destroyed_variant4",
		"zm_utility::get_non_destroyed_variant5",
		"zm_utility::get_number_of_valid_players",
		"zm_utility::get_player_closest_to",
		"zm_utility::get_player_hero_weapon",
		"zm_utility::get_player_index",
		"zm_utility::get_player_lethal_grenade",
		"zm_utility::get_player_melee_weapon",
		"zm_utility::get_player_perk_purchase_limit",
		"zm_utility::get_player_placeable_mine",
		"zm_utility::get_player_tactical_grenade",
		"zm_utility::get_player_weapon_limit",
		"zm_utility::get_random_destroyed_chunk",
		"zm_utility::get_specific_character",
		"zm_utility::get_table_var",
		"zm_utility::get_zombie_hint",
		"zm_utility::get_zombie_point_of_interest",
		"zm_utility::giveachievement_wrapper",
		"zm_utility::give_player_all_perks",
		"zm_utility::give_start_weapon",
		"zm_utility::grate_order_destroyed",
		"zm_utility::groundpos",
		"zm_utility::groundpos_ignore_water",
		"zm_utility::groundpos_ignore_water_new",
		"zm_utility::halve_score",
		"zm_utility::has_hero_weapon",
		"zm_utility::has_player_hero_weapon",
		"zm_utility::has_powerup_weapon",
		"zm_utility::hudelem_count",
		"zm_utility::ignore_triggers",
		"zm_utility::include_weapon",
		"zm_utility::increment_ignoreme",
		"zm_utility::increment_is_drinking",
		"zm_utility::increment_no_end_game_check",
		"zm_utility::increment_zm_dash_counter",
		"zm_utility::init_player_hero_weapon",
		"zm_utility::init_player_lethal_grenade",
		"zm_utility::init_player_melee_weapon",
		"zm_utility::init_player_offhand_weapons",
		"zm_utility::init_player_placeable_mine",
		"zm_utility::init_player_tactical_grenade",
		"zm_utility::init_utility",
		"zm_utility::init_zombie_run_cycle",
		"zm_utility::invalidate_attractor_pos",
		"zm_utility::in_playable_area",
		"zm_utility::in_revive_trigger",
		"zm_utility::is_classic",
		"zm_utility::is_encounter",
		"zm_utility::is_explosive_damage",
		"zm_utility::is_facing",
		"zm_utility::is_favorite_weapon",
		"zm_utility::is_gametype_active",
		"zm_utility::is_headshot",
		"zm_utility::is_hero_weapon",
		"zm_utility::is_jumping",
		"zm_utility::is_leaper",
		"zm_utility::is_lethal_grenade",
		"zm_utility::is_limited_weapon",
		"zm_utility::is_magic_bullet_shield_enabled",
		"zm_utility::is_melee_weapon",
		"zm_utility::is_multiple_drinking",
		"zm_utility::is_offhand_weapon",
		"zm_utility::is_placeable_mine",
		"zm_utility::is_player",
		"zm_utility::is_player_hero_weapon",
		"zm_utility::is_player_lethal_grenade",
		"zm_utility::is_player_looking_at",
		"zm_utility::is_player_melee_weapon",
		"zm_utility::is_player_offhand_weapon",
		"zm_utility::is_player_placeable_mine",
		"zm_utility::is_player_revive_tool",
		"zm_utility::is_player_tactical_grenade",
		"zm_utility::is_player_valid",
		"zm_utility::is_point_inside_active_zone",
		"zm_utility::is_point_inside_enabled_zone",
		"zm_utility::is_quad",
		"zm_utility::is_solo_ranked_game",
		"zm_utility::is_Standard",
		"zm_utility::is_Survival",
		"zm_utility::is_tactical_grenade",
		"zm_utility::is_valid_zombie_spawn_point",
		"zm_utility::lerp",
		"zm_utility::link_changes_internal",
		"zm_utility::link_changes_internal_internal",
		"zm_utility::link_nodes",
		"zm_utility::link_nodes_wrapper",
		"zm_utility::make_supersprinter",
		"zm_utility::move_zombie_spawn_location",
		"zm_utility::non_destroyed_bar_board_order",
		"zm_utility::non_destroyed_grate_order",
		"zm_utility::non_destroyed_variant1_order",
		"zm_utility::non_destroyed_variant2_order",
		"zm_utility::non_destroyed_variant4_order",
		"zm_utility::non_destroyed_variant5_order",
		"zm_utility::no_valid_repairable_boards",
		"zm_utility::pick_up",
		"zm_utility::places_before_decimal",
		"zm_utility::place_navcard",
		"zm_utility::play_loopsound_on_ent",
		"zm_utility::play_sound_2D",
		"zm_utility::play_sound_at_pos",
		"zm_utility::play_sound_on_ent",
		"zm_utility::play_vox_to_player",
		"zm_utility::poi_locations_equal",
		"zm_utility::print3d_at_pos",
		"zm_utility::print3d_ent",
		"zm_utility::print_run_speed",
		"zm_utility::random_tan",
		"zm_utility::really_play_2D_sound",
		"zm_utility::recalc_zombie_array",
		"zm_utility::redo_link_changes",
		"zm_utility::register_custom_spawner_entry",
		"zm_utility::register_hero_weapon_for_level",
		"zm_utility::register_lethal_grenade_for_level",
		"zm_utility::register_map_navcard",
		"zm_utility::register_melee_weapon_for_level",
		"zm_utility::register_offhand_weapons_for_level_defaults",
		"zm_utility::register_slowdown",
		"zm_utility::register_tactical_grenade_for_level",
		"zm_utility::remove_mod_from_methodofdeath",
		"zm_utility::remove_poi_attractor",
		"zm_utility::remove_poi_from_ignore_list",
		"zm_utility::respawn_path_nodes",
		"zm_utility::round_up_score",
		"zm_utility::round_up_to_ten",
		"zm_utility::run_spawn_functions",
		"zm_utility::self_delete",
		"zm_utility::setInventoryUIModels",
		"zm_utility::setSharedInventoryUIModels",
		"zm_utility::set_demo_intermission_point",
		"zm_utility::set_gamemode_var",
		"zm_utility::set_gamemode_var_once",
		"zm_utility::set_game_var",
		"zm_utility::set_game_var_once",
		"zm_utility::set_hint_string",
		"zm_utility::set_player_hero_weapon",
		"zm_utility::set_player_lethal_grenade",
		"zm_utility::set_player_melee_weapon",
		"zm_utility::set_player_placeable_mine",
		"zm_utility::set_player_tactical_grenade",
		"zm_utility::set_zombie_var",
		"zm_utility::shock_onexplosion",
		"zm_utility::shock_onpain",
		"zm_utility::should_watch_for_emp",
		"zm_utility::show_grate_pull",
		"zm_utility::show_grate_repair",
		"zm_utility::slowdown_ai",
		"zm_utility::sndSwitchAnnouncerVox",
		"zm_utility::spawn_buildkit_weapon_model",
		"zm_utility::spawn_path_node",
		"zm_utility::spawn_path_node_internal",
		"zm_utility::spawn_weapon_model",
		"zm_utility::speed_change_watcher",
		"zm_utility::sq_refresh_player_navcard_hud",
		"zm_utility::sq_refresh_player_navcard_hud_internal",
		"zm_utility::string_to_float",
		"zm_utility::track_players_intersection_tracker",
		"zm_utility::trigger_invisible",
		"zm_utility::umbra_fix_logic",
		"zm_utility::umbra_fix_trigger",
		"zm_utility::undo_link_changes",
		"zm_utility::unitrigger_set_hint_string",
		"zm_utility::unlink_nodes",
		"zm_utility::unlink_nodes_wrapper",
		"zm_utility::update_on_poi_removal",
		"zm_utility::update_poi_on_death",
		"zm_utility::update_valid_players",
		"zm_utility::upload_zm_dash_counters",
		"zm_utility::upload_zm_dash_counters_end_game",
		"zm_utility::waittill_not_moving",
		"zm_utility::waittill_subset",
		"zm_utility::wait_clear_streamer_hint",
		"zm_utility::wait_for_attractor_positions_complete",
		"zm_utility::watch_for_poi_death",
		"zm_utility::zm_dash_stats_game_end",
		"zm_utility::zm_dash_stats_game_start",
		"zm_utility::zm_dash_stats_wait_for_consumable_use",
		"zm_utility::zm_ui_infotext",
		"zm_utility::zombie_goto_round",
		"zm_weapons::add_attachments",
		"zm_weapons::add_custom_limited_weapon_check",
		"zm_weapons::add_dynamic_wallbuy",
		"zm_weapons::add_limited_weapon",
		"zm_weapons::add_retrievable_knife_init_name",
		"zm_weapons::add_shared_ammo_weapon",
		"zm_weapons::add_weapon_to_content",
		"zm_weapons::add_zombie_weapon",
		"zm_weapons::ammo_give",
		"zm_weapons::autofill_wallbuys_init",
		"zm_weapons::can_upgrade_weapon",
		"zm_weapons::checkGrenadeForDud",
		"zm_weapons::checkStringValid",
		"zm_weapons::clear_stowed_weapon",
		"zm_weapons::compute_player_weapon_ammo_cost",
		"zm_weapons::createBallisticKnifeWatcher_zm",
		"zm_weapons::create_loadout",
		"zm_weapons::default_attachment",
		"zm_weapons::default_check_firesale_loc_valid_func",
		"zm_weapons::get_ammo_cost",
		"zm_weapons::get_ammo_cost_for_weapon",
		"zm_weapons::get_attachment_index",
		"zm_weapons::get_base_weapon",
		"zm_weapons::get_default_weapondata",
		"zm_weapons::get_force_attachments",
		"zm_weapons::get_is_in_box",
		"zm_weapons::get_nonalternate_weapon",
		"zm_weapons::get_pack_a_punch_camo_index",
		"zm_weapons::get_pack_a_punch_weapon_options",
		"zm_weapons::get_player_weapondata",
		"zm_weapons::get_player_weapon_with_same_base",
		"zm_weapons::get_shared_ammo_weapon",
		"zm_weapons::get_upgraded_ammo_cost",
		"zm_weapons::get_upgrade_weapon",
		"zm_weapons::get_weapon_cost",
		"zm_weapons::get_weapon_hint",
		"zm_weapons::get_weapon_hint_ammo",
		"zm_weapons::get_weapon_with_attachments",
		"zm_weapons::give_build_kit_weapon",
		"zm_weapons::give_fallback_weapon",
		"zm_weapons::give_start_weapons",
		"zm_weapons::grenade_safe_to_bounce",
		"zm_weapons::grenade_safe_to_throw",
		"zm_weapons::has_upgrade",
		"zm_weapons::has_weapon_or_attachments",
		"zm_weapons::has_weapon_or_upgrade",
		"zm_weapons::include_upgraded_weapon",
		"zm_weapons::include_weapon",
		"zm_weapons::include_zombie_weapon",
		"zm_weapons::init",
		"zm_weapons::init_spawnable_weapon_upgrade",
		"zm_weapons::init_weapons",
		"zm_weapons::init_weapon_upgrade",
		"zm_weapons::is_wallbuy",
		"zm_weapons::is_weapon_included",
		"zm_weapons::is_weapon_or_base_included",
		"zm_weapons::is_weapon_upgraded",
		"zm_weapons::is_wonder_weapon",
		"zm_weapons::limited_weapon_below_quota",
		"zm_weapons::load_weapon_spec_from_table",
		"zm_weapons::makeGrenadeDudAndDestroy",
		"zm_weapons::merge_weapons",
		"zm_weapons::onPlayerConnect",
		"zm_weapons::onPlayerSpawned",
		"zm_weapons::placeable_mine_can_buy_weapon_extra_check_func",
		"zm_weapons::player_can_use_content",
		"zm_weapons::player_get_loadout",
		"zm_weapons::player_give_loadout",
		"zm_weapons::player_take_loadout",
		"zm_weapons::play_weapon_vo",
		"zm_weapons::random_attachment",
		"zm_weapons::register_zombie_weapon_callback",
		"zm_weapons::reset_wallbuys",
		"zm_weapons::reset_wallbuy_internal",
		"zm_weapons::set_stowed_weapon",
		"zm_weapons::should_upgrade_weapon",
		"zm_weapons::show_all_weapon_buys",
		"zm_weapons::suppress_stowed_weapon",
		"zm_weapons::switch_back_primary_weapon",
		"zm_weapons::switch_from_alt_weapon",
		"zm_weapons::take_fallback_weapon",
		"zm_weapons::trackWeaponZM",
		"zm_weapons::updateLastHeldWeaponTimingsZM",
		"zm_weapons::updateWeaponTimingsZM",
		"zm_weapons::wait_explode",
		"zm_weapons::wait_for_explosion",
		"zm_weapons::wait_timeout",
		"zm_weapons::wallbuy_callback",
		"zm_weapons::wallbuy_callback_idx",
		"zm_weapons::wallbuy_player_connect",
		"zm_weapons::wall_weapon_update_prompt",
		"zm_weapons::watchForGrenadeDuds",
		"zm_weapons::watchForGrenadeLauncherDuds",
		"zm_weapons::watchForScriptExplosion",
		"zm_weapons::watchWeaponChangeZM",
		"zm_weapons::watchWeaponUsageZM",
		"zm_weapons::weapondata_give",
		"zm_weapons::weapondata_take",
		"zm_weapons::weaponobjects_on_player_connect_override",
		"zm_weapons::weaponobjects_on_player_connect_override_internal",
		"zm_weapons::weapon_give",
		"zm_weapons::weapon_is_better",
		"zm_weapons::weapon_set_first_time_hint",
		"zm_weapons::weapon_show",
		"zm_weapons::weapon_spawn_think",
		"zm_weapons::weapon_supports_aat",
		"zm_weapons::weapon_supports_attachments",
		"zm_weapons::weapon_supports_default_attachment",
		"zm_weapons::weapon_supports_this_attachment",
		"zm_weapons::weapon_take",
		"zm_weapons::weapon_type_check",
		"zm_weapons::will_upgrade_weapon_as_attachment",
		"zm_weap_annihilator::check_annihilator_death",
		"zm_weap_gravityspikes::check_for_range_and_los",
		"zm_weap_gravityspikes::chop_actor",
		"zm_weap_gravityspikes::chop_zombies",
		"zm_weap_gravityspikes::corpse_off_navmesh_watcher",
		"zm_weap_gravityspikes::create_gravity_trap_spikes_in_ground",
		"zm_weap_gravityspikes::create_gravity_trap_unitrigger",
		"zm_weap_gravityspikes::destroy_gravity_trap_spikes_in_ground",
		"zm_weap_gravityspikes::gravityspikes_altfire_watcher",
		"zm_weap_gravityspikes::gravityspikes_attack_watcher",
		"zm_weap_gravityspikes::gravityspikes_power_expired",
		"zm_weap_gravityspikes::gravityspikes_power_override",
		"zm_weap_gravityspikes::gravityspikes_power_update",
		"zm_weap_gravityspikes::gravityspikes_stuck_above_zombie_watcher",
		"zm_weap_gravityspikes::gravityspikes_swipe_watcher",
		"zm_weap_gravityspikes::gravityspikes_target_filtering",
		"zm_weap_gravityspikes::gravity_spike_melee_kill",
		"zm_weap_gravityspikes::gravity_spike_planted_play",
		"zm_weap_gravityspikes::gravity_spike_position_valid",
		"zm_weap_gravityspikes::gravity_trap_check",
		"zm_weap_gravityspikes::gravity_trap_fx_off",
		"zm_weap_gravityspikes::gravity_trap_fx_on",
		"zm_weap_gravityspikes::gravity_trap_loop",
		"zm_weap_gravityspikes::gravity_trap_notify_watcher",
		"zm_weap_gravityspikes::gravity_trap_timeout_watcher",
		"zm_weap_gravityspikes::gravity_trap_trigger_activate",
		"zm_weap_gravityspikes::gravity_trap_trigger_think",
		"zm_weap_gravityspikes::gravity_trap_trigger_visibility",
		"zm_weap_gravityspikes::knockdown_zombies_slam",
		"zm_weap_gravityspikes::no_damage_gravityspikes_slam",
		"zm_weap_gravityspikes::plant_gravity_trap",
		"zm_weap_gravityspikes::player_invulnerable_during_gravityspike_slam",
		"zm_weap_gravityspikes::player_near_gravity_vortex",
		"zm_weap_gravityspikes::player_vortex_rumble",
		"zm_weap_gravityspikes::play_slam_fx",
		"zm_weap_gravityspikes::register_clientfields",
		"zm_weap_gravityspikes::reset_after_bleeding_out",
		"zm_weap_gravityspikes::spikesarc_swipe",
		"zm_weap_gravityspikes::track_lifted_for_ragdoll_count",
		"zm_weap_gravityspikes::unwield_gravityspikes",
		"zm_weap_gravityspikes::update_gravityspikes_energy",
		"zm_weap_gravityspikes::update_gravityspikes_state",
		"zm_weap_gravityspikes::weapon_change_watcher",
		"zm_weap_gravityspikes::weapon_drop_watcher",
		"zm_weap_gravityspikes::wield_gravityspikes",
		"zm_weap_gravityspikes::zombie_kill_and_gib",
		"zm_weap_gravityspikes::zombie_lift",
		"zm_weap_gravityspikes::zombie_lift_wacky_rotate",
		"zm_weap_gravityspikes::zombie_slam_direction",
		"zm_weap_thundergun::enemy_killed_by_thundergun",
		"zm_weap_thundergun::handle_thundergun_pain_notetracks",
		"zm_weap_thundergun::is_thundergun_damage",
		"zm_weap_thundergun::localplayer_spawned",
		"zm_weap_thundergun::override_thundergun_damage_func",
		"zm_weap_thundergun::playThundergunPainAnim",
		"zm_weap_thundergun::setup_thundergun_vox",
		"zm_weap_thundergun::thundergun_affect_ais",
		"zm_weap_thundergun::thundergun_debug_print",
		"zm_weap_thundergun::thundergun_fired",
		"zm_weap_thundergun::thundergun_fling_zombie",
		"zm_weap_thundergun::thundergun_fx_fire",
		"zm_weap_thundergun::thundergun_fx_power_cell",
		"zm_weap_thundergun::thundergun_get_enemies_in_range",
		"zm_weap_thundergun::thundergun_knockdown_zombie",
		"zm_weap_thundergun::thundergun_network_choke",
		"zm_weap_thundergun::thundergun_on_player_connect",
		"zm_weap_thundergun::thundergun_sound_thread",
		"zm_weap_thundergun::wait_for_thundergun_fired",
		"zm_weap_thundergun::watch_for_thunderguns",
		"zm_weap_thundergun::zombie_knockdown",
		"zm_zonemgr::add_adjacent_zone",
		"zm_zonemgr::add_zone_flags",
		"zm_zonemgr::any_player_in_zone",
		"zm_zonemgr::connect_zones",
		"zm_zonemgr::create_spawner_list",
		"zm_zonemgr::deactivate_initial_barrier_goals",
		"zm_zonemgr::debug_show_spawn_locations",
		"zm_zonemgr::door_close_disconnect",
		"zm_zonemgr::enable_zone",
		"zm_zonemgr::entity_in_active_zone",
		"zm_zonemgr::entity_in_zone",
		"zm_zonemgr::get_active_zones_entities",
		"zm_zonemgr::get_active_zone_names",
		"zm_zonemgr::get_players_in_zone",
		"zm_zonemgr::get_player_zone",
		"zm_zonemgr::get_zone_from_position",
		"zm_zonemgr::get_zone_magic_boxes",
		"zm_zonemgr::get_zone_zbarriers",
		"zm_zonemgr::make_zone_adjacent",
		"zm_zonemgr::manage_zones",
		"zm_zonemgr::old_manage_zones",
		"zm_zonemgr::reinit_zone_spawners",
		"zm_zonemgr::setup_zone_flag_waits",
		"zm_zonemgr::wait_zone_flags_updating",
		"zm_zonemgr::zone_flag_wait",
		"zm_zonemgr::zone_flag_wait_throttle",
		"zm_zonemgr::zone_init",
		"zm_zonemgr::zone_is_enabled",
		"zm_zonemgr::zone_wait_till_enabled",
		"ZombieBehavior::ArchetypeZombieBlackboardInit",
		"ZombieBehavior::ArchetypeZombieDeathOverrideInit",
		"ZombieBehavior::ArchetypeZombieSpecialEffectsInit",
		"ZombieBehavior::BB_GetArmsPosition",
		"ZombieBehavior::BB_GetHasLegsStatus",
		"ZombieBehavior::BB_GetLocomotionSpeedType",
		"ZombieBehavior::BB_GetLowGravityVariant",
		"ZombieBehavior::BB_GetShouldTurn",
		"ZombieBehavior::BB_GetVariantType",
		"ZombieBehavior::BB_IDGunGetDamageDirection",
		"ZombieBehavior::isZombieWalking",
		"ZombieBehavior::wasCrushedByInterdimensionalGunBlackholeCondition",
		"ZombieBehavior::wasKilledByInterdimensionalGunCondition",
		"ZombieBehavior::zombieCrawlerCollision",
		"ZombieBehavior::zombieDeathAction",
		"ZombieBehavior::zombieGibLegsCondition",
		"ZombieBehavior::zombieHasLegs",
		"ZombieBehavior::zombieIDGunDeathMocompStart",
		"ZombieBehavior::zombieIDGunDeathUpdate",
		"ZombieBehavior::zombieIDGunHoleDeathMocompStart",
		"ZombieBehavior::zombieIDGunHoleDeathMocompTerminate",
		"ZombieBehavior::zombieIsAtAttackObject",
		"ZombieBehavior::zombieJuke",
		"ZombieBehavior::zombieMeleeJumpMocompStart",
		"ZombieBehavior::zombieMeleeJumpMocompTerminate",
		"ZombieBehavior::zombieMeleeJumpMocompUpdate",
		"ZombieBehavior::zombieMeleeSuicideStart",
		"ZombieBehavior::zombieMeleeSuicideTerminate",
		"ZombieBehavior::zombieMeleeSuicideUpdate",
		"ZombieBehavior::zombieMoveAction",
		"ZombieBehavior::zombieMoveActionTerminate",
		"ZombieBehavior::zombieMoveActionUpdate",
		"ZombieBehavior::zombieNotetrackCrushFire",
		"ZombieBehavior::zombieNotetrackMeleeFire",
		"ZombieBehavior::zombieShouldAttackObject",
		"ZombieBehavior::zombieShouldDisplayPain",
		"ZombieBehavior::zombieShouldJukeCondition",
		"ZombieBehavior::zombieShouldJumpMeleeCondition",
		"ZombieBehavior::zombieShouldJumpUnderwaterMelee",
		"ZombieBehavior::zombieShouldMeleeCondition",
		"ZombieBehavior::zombieShouldMeleeSuicide",
		"ZombieBehavior::zombieShouldProceduralTraverse",
		"ZombieBehavior::zombieShouldStumbleCondition",
		"ZombieBehavior::zombieStumble",
		"ZombieBehavior::zombieTargetService",
		"ZombieBehavior::zombieTraversalService",
		"ZombieBehavior::zombieUpdateZigZagGoal",
		"ZombieClientUtils::zombieHandler",
		"ZombieClientUtils::zombieSpecialDayEffectsHandler",
		"ZombieClientUtils::zombie_override_burn_fx",
		"ZombieDogBehavior::AbsYawToEnemy",
		"ZombieDogBehavior::ArchetypeZombieDogBlackboardInit",
		"ZombieDogBehavior::BB_GetShouldHowlStatus",
		"ZombieDogBehavior::BB_GetShouldRunStatus",
		"ZombieDogBehavior::GetYaw",
		"ZombieDogBehavior::get_last_valid_position",
		"ZombieDogBehavior::get_locomotion_target",
		"ZombieDogBehavior::need_to_run",
		"ZombieDogBehavior::use_low_attack",
		"ZombieDogBehavior::zombieDogGravity",
		"ZombieDogBehavior::zombieDogMeleeAction",
		"ZombieDogBehavior::zombieDogMeleeActionTerminate",
		"ZombieDogBehavior::zombieDogShouldMelee",
		"ZombieDogBehavior::zombieDogShouldRun",
		"ZombieDogBehavior::zombieDogShouldWalk",
		"ZombieDogBehavior::zombieDogTargetService",
		"ZombieDogInterface::RegisterZombieDogInterfaceAttributes",
		"ZombieInterface::RegisterZombieInterfaceAttributes",
		"ZombieQuad::ArchetypeQuadBlackboardInit",
		"ZombieQuad::quadSpawnSetup",
		"ZombieQuad::quadTeleportTraversalMocompStart",
		"zombie_death::do_gib",
		"zombie_death::flame_death_fx",
		"zombie_death::get_gib_ref",
		"zombie_death::get_random",
		"zombie_death::on_fire_timeout",
		"zombie_death::precache_gib_fx",
		"zombie_death::randomize_array",
		"zombie_death::set_last_gib_time",
		"zombie_shared::deleteAtLimit",
		"zombie_shared::DoNoteTracks",
		"zombie_shared::DoNoteTracksForever",
		"zombie_shared::DoNoteTracksForeverProc",
		"zombie_shared::DoNoteTracksForTime",
		"zombie_shared::doNoteTracksForTimeEndNotify",
		"zombie_shared::DoNoteTracksForTimeProc",
		"zombie_shared::growling",
		"zombie_shared::HandleDogSoundNoteTracks",
		"zombie_shared::HandleNoteTrack",
		"zombie_shared::incrAnimAimWeight",
		"zombie_shared::LookAtAnimations",
		"zombie_shared::LookAtEntity",
		"zombie_shared::LookAtPosition",
		"zombie_shared::moveToOriginOverTime",
		"zombie_shared::noteTrackAlertnessAlert",
		"zombie_shared::noteTrackAlertnessCasual",
		"zombie_shared::noteTrackBodyFall",
		"zombie_shared::noteTrackFootScrape",
		"zombie_shared::noteTrackFootStep",
		"zombie_shared::noteTrackGravity",
		"zombie_shared::noteTrackLand",
		"zombie_shared::noteTrackMovementRun",
		"zombie_shared::noteTrackMovementStop",
		"zombie_shared::noteTrackMovementWalk",
		"zombie_shared::noteTrackPoseCrouch",
		"zombie_shared::noteTrackPoseStand",
		"zombie_shared::noteTrackStartRagdoll",
		"zombie_shared::noteTrackStopAnim",
		"zombie_shared::playFootStep",
		"zombie_shared::playFootStepEffect",
		"zombie_shared::registerNoteTracks",
		"zombie_shared::returnTrue",
		"zombie_shared::setAnimAimWeight",
		"zombie_shared::trackLoop",
		"zombie_utility::AbsYawToAngles",
		"zombie_utility::AbsYawToEnemy",
		"zombie_utility::AbsYawToEnemy2d",
		"zombie_utility::AbsYawToOrigin",
		"zombie_utility::add_zombie_gib_weapon_callback",
		"zombie_utility::ai_calculate_health",
		"zombie_utility::AngleClamp",
		"zombie_utility::animArray",
		"zombie_utility::animArrayAnyExist",
		"zombie_utility::animArrayPickRandom",
		"zombie_utility::anim_array",
		"zombie_utility::anim_get_dvar",
		"zombie_utility::anim_get_dvar_int",
		"zombie_utility::append_missing_legs_suffix",
		"zombie_utility::calculateNodeOffset",
		"zombie_utility::canThrowGrenade",
		"zombie_utility::checkPitchVisibility",
		"zombie_utility::clear_all_corpses",
		"zombie_utility::crossproduct",
		"zombie_utility::damageLocationIsAny",
		"zombie_utility::damage_over_time",
		"zombie_utility::debugPos",
		"zombie_utility::debugPosInternal",
		"zombie_utility::debugPosSize",
		"zombie_utility::debugTimeout",
		"zombie_utility::debug_allow_combat",
		"zombie_utility::debug_allow_movement",
		"zombie_utility::debug_anim_print",
		"zombie_utility::debug_turn_print",
		"zombie_utility::default_max_zombie_func",
		"zombie_utility::delayedScriptChange",
		"zombie_utility::delayed_zombie_eye_glow",
		"zombie_utility::derive_damage_refs",
		"zombie_utility::doesNodeAllowStance",
		"zombie_utility::drawStringTime",
		"zombie_utility::dumpAnimArray",
		"zombie_utility::finish_rise_notetracks",
		"zombie_utility::forcedCover",
		"zombie_utility::getAnimDirection",
		"zombie_utility::getAnimEndPos",
		"zombie_utility::GetClaimedNode",
		"zombie_utility::GetCoverNodeYawToEnemy",
		"zombie_utility::GetCoverNodeYawToOrigin",
		"zombie_utility::GetEyeYawToOrigin",
		"zombie_utility::GetNodeDirection",
		"zombie_utility::GetNodeForward",
		"zombie_utility::getNodeOffset",
		"zombie_utility::GetNodeOrigin",
		"zombie_utility::GetNodeType",
		"zombie_utility::GetNodeYawToEnemy",
		"zombie_utility::GetNodeYawToOrigin",
		"zombie_utility::getQuadrant",
		"zombie_utility::getRandomIntFromSeed",
		"zombie_utility::GetYaw",
		"zombie_utility::GetYaw2d",
		"zombie_utility::GetYawFromOrigin",
		"zombie_utility::GetYawToEnemy",
		"zombie_utility::GetYawToOrigin",
		"zombie_utility::GetYawToSpot",
		"zombie_utility::GetYawToTag",
		"zombie_utility::get_closest_valid_player",
		"zombie_utility::get_current_actor_count",
		"zombie_utility::get_current_corpse_count",
		"zombie_utility::get_current_zombie_count",
		"zombie_utility::get_desired_origin",
		"zombie_utility::get_rise_death_anim",
		"zombie_utility::get_round_enemy_array",
		"zombie_utility::get_skeleton",
		"zombie_utility::get_zombie_array",
		"zombie_utility::get_zombie_weapon_gib_callback",
		"zombie_utility::get_zombie_weapon_gib_head_callback",
		"zombie_utility::gib_random_parts",
		"zombie_utility::handle_rise_notetracks",
		"zombie_utility::have_zombie_weapon_gib_callback",
		"zombie_utility::have_zombie_weapon_gib_head_callback",
		"zombie_utility::head_gib_damage_over_time",
		"zombie_utility::head_should_gib",
		"zombie_utility::hide_pop",
		"zombie_utility::initAnimTree",
		"zombie_utility::initialize",
		"zombie_utility::init_gib_tags",
		"zombie_utility::isCQBWalking",
		"zombie_utility::IsInSet",
		"zombie_utility::isNodeDontCrouch",
		"zombie_utility::isNodeDontStand",
		"zombie_utility::isStanceAllowedWrapper",
		"zombie_utility::isValidEnemy",
		"zombie_utility::is_banzai",
		"zombie_utility::is_civilian",
		"zombie_utility::is_heavy_machine_gun",
		"zombie_utility::is_player_valid",
		"zombie_utility::is_skeleton",
		"zombie_utility::is_zombie",
		"zombie_utility::makeZombieCrawler",
		"zombie_utility::notForcedCover",
		"zombie_utility::NotifyAfterTime",
		"zombie_utility::persistentDebugLine",
		"zombie_utility::print3drise",
		"zombie_utility::print3dtime",
		"zombie_utility::QuadrantAnimWeights",
		"zombie_utility::ragdollDeath",
		"zombie_utility::randomizeIdleSet",
		"zombie_utility::random_weight",
		"zombie_utility::register_ignore_player_handler",
		"zombie_utility::reset_attack_spot",
		"zombie_utility::round_spawn_failsafe",
		"zombie_utility::round_spawn_failsafe_debug_draw",
		"zombie_utility::run_ignore_player_handler",
		"zombie_utility::safemod",
		"zombie_utility::sawEnemyMove",
		"zombie_utility::scriptChange",
		"zombie_utility::setFootstepEffect",
		"zombie_utility::setup_zombie_knockdown",
		"zombie_utility::setZombieMoveSpeed",
		"zombie_utility::set_orient_mode",
		"zombie_utility::set_run_speed",
		"zombie_utility::set_run_speed_easy",
		"zombie_utility::set_zombie_run_cycle",
		"zombie_utility::set_zombie_run_cycle_override_value",
		"zombie_utility::set_zombie_run_cycle_restore_from_override",
		"zombie_utility::set_zombie_var",
		"zombie_utility::showDebugLine",
		"zombie_utility::showDebugProc",
		"zombie_utility::showLastEnemySightPos",
		"zombie_utility::showLines",
		"zombie_utility::show_hit_marker",
		"zombie_utility::spawn_zombie",
		"zombie_utility::squared",
		"zombie_utility::UpdateAnimPose",
		"zombie_utility::zombieSpawnSetup",
		"zombie_utility::zombie_eye_glow",
		"zombie_utility::zombie_eye_glow_stop",
		"zombie_utility::zombie_gib_on_damage",
		"zombie_utility::zombie_gut_explosion",
		"zombie_utility::zombie_hat_gib",
		"zombie_utility::zombie_head_gib",
		"zombie_utility::zombie_rise_death",
		"zombie_utility::zombie_should_gib",
		"zombie_utility::zombie_spawn_failed",
		"zombie_utility::zombie_speed_up",
		"zombie_vortex::flyEntDelete",
		"zombie_vortex::get_active_vortex_count",
		"zombie_vortex::get_unused_vortex",
		"zombie_vortex::idgun_add_vehicle_death_state",
		"zombie_vortex::init_vortices",
		"zombie_vortex::player_vortex_visionset",
		"zombie_vortex::start_timed_vortex",
		"zombie_vortex::state_idgun_crush_enter",
		"zombie_vortex::state_idgun_crush_update",
		"zombie_vortex::state_idgun_flying_crush_enter",
		"zombie_vortex::state_idgun_flying_crush_update",
		"zombie_vortex::state_idgun_flying_death_update",
		"zombie_vortex::switch_to_crush_asm",
		"zombie_vortex::vortex_z_extension",
		"_claymore::init",
		"_claymore::spawned",
		"_gadget_active_camo::camo_gadget_off",
		"_gadget_active_camo::camo_gadget_on",
		"_gadget_active_camo::camo_is_flickering",
		"_gadget_active_camo::camo_is_inuse",
		"_gadget_active_camo::camo_on_connect",
		"_gadget_active_camo::camo_on_disconnect",
		"_gadget_active_camo::camo_on_flicker",
		"_gadget_active_camo::camo_on_give",
		"_gadget_active_camo::camo_on_spawn",
		"_gadget_active_camo::camo_on_take",
		"_gadget_active_camo::suspend_camo_suit",
		"_gadget_active_camo::suspend_camo_suit_wait",
		"_gadget_armor::armor_get_shader_color",
		"_gadget_armor::armor_is_local_player",
		"_gadget_armor::armor_overlay_think",
		"_gadget_armor::armor_overlay_transition_fx",
		"_gadget_armor::armor_update_fx_event",
		"_gadget_armor::armor_update_overlay_event",
		"_gadget_armor::armor_update_shader_event",
		"_gadget_armor::on_local_player_spawned",
		"_gadget_armor::on_player_spawned",
		"_gadget_armor::player_armor_changed",
		"_gadget_armor::player_armor_changed_event",
		"_gadget_armor::player_damage_type_changed",
		"_gadget_cacophany::gadget_cacophany_is_flickering",
		"_gadget_cacophany::gadget_cacophany_is_inuse",
		"_gadget_cacophany::gadget_cacophany_is_primed",
		"_gadget_cacophany::gadget_cacophany_off",
		"_gadget_cacophany::gadget_cacophany_on",
		"_gadget_cacophany::gadget_cacophany_on_connect",
		"_gadget_cacophany::gadget_cacophany_on_flicker",
		"_gadget_cacophany::gadget_cacophany_on_give",
		"_gadget_cacophany::gadget_cacophany_on_take",
		"_gadget_cacophany::on_player_spawned",
		"_gadget_camo::camo_all_actors",
		"_gadget_camo::camo_bread_crumb",
		"_gadget_camo::camo_bread_crumb_delete",
		"_gadget_camo::camo_bread_crumb_wait",
		"_gadget_camo::camo_gadget_off",
		"_gadget_camo::camo_gadget_on",
		"_gadget_camo::camo_is_flickering",
		"_gadget_camo::camo_is_inuse",
		"_gadget_camo::camo_on_connect",
		"_gadget_camo::camo_on_disconnect",
		"_gadget_camo::camo_on_flicker",
		"_gadget_camo::camo_on_give",
		"_gadget_camo::camo_on_spawn",
		"_gadget_camo::camo_on_take",
		"_gadget_camo::camo_suit_flicker",
		"_gadget_camo::camo_takedown_watch",
		"_gadget_camo::camo_temporary_dont_ignore",
		"_gadget_camo::camo_temporary_dont_ignore_wait",
		"_gadget_camo::ent_camo_material_callback",
		"_gadget_camo::on_player_spawned",
		"_gadget_camo::set_camo_reveal_status",
		"_gadget_camo::suspend_camo_suit",
		"_gadget_camo::suspend_camo_suit_wait",
		"_gadget_camo::watch_killcam_reapply_dr",
		"_gadget_cleanse::gadget_cleanse_flicker",
		"_gadget_cleanse::gadget_cleanse_is_flickering",
		"_gadget_cleanse::gadget_cleanse_is_inuse",
		"_gadget_cleanse::gadget_cleanse_off",
		"_gadget_cleanse::gadget_cleanse_on",
		"_gadget_cleanse::gadget_cleanse_on_connect",
		"_gadget_cleanse::gadget_cleanse_on_flicker",
		"_gadget_cleanse::gadget_cleanse_on_give",
		"_gadget_cleanse::gadget_cleanse_on_take",
		"_gadget_cleanse::gadget_cleanse_start",
		"_gadget_cleanse::has_cleanse_changed",
		"_gadget_cleanse::on_player_spawned",
		"_gadget_cleanse::set_gadget_cleanse_status",
		"_gadget_cleanse::wait_until_is_done",
		"_gadget_clone::CalculateSpawnOrigin",
		"_gadget_clone::cloneDamageOverride",
		"_gadget_clone::clone_activated",
		"_gadget_clone::clone_damaged",
		"_gadget_clone::clone_damage_finish",
		"_gadget_clone::clone_damage_flicker",
		"_gadget_clone::gadget_clone_is_flickering",
		"_gadget_clone::gadget_clone_is_inuse",
		"_gadget_clone::gadget_clone_off",
		"_gadget_clone::gadget_clone_on",
		"_gadget_clone::gadget_clone_on_connect",
		"_gadget_clone::gadget_clone_on_flicker",
		"_gadget_clone::gadget_clone_on_give",
		"_gadget_clone::gadget_clone_on_take",
		"_gadget_clone::insertClone",
		"_gadget_clone::is_jumping",
		"_gadget_clone::killClones",
		"_gadget_clone::on_player_spawned",
		"_gadget_clone::player_clone_activated",
		"_gadget_clone::ProcessCloneScoreEvent",
		"_gadget_clone::removeClone",
		"_gadget_clone::removeOldestClone",
		"_gadget_clone::set_shader",
		"_gadget_clone::spawnClones",
		"_gadget_clone::transition_shader",
		"_gadget_combat_efficiency::gadget_combat_efficiency_is_flickering",
		"_gadget_combat_efficiency::gadget_combat_efficiency_is_inuse",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_activate",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_connect",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_flicker",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_give",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_off",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_spawn",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_take",
		"_gadget_combat_efficiency::gadget_combat_efficiency_ready",
		"_gadget_combat_efficiency::set_gadget_combat_efficiency_status",
		"_gadget_concussive_wave::gadget_concussive_wave_is_flickering",
		"_gadget_concussive_wave::gadget_concussive_wave_is_inuse",
		"_gadget_concussive_wave::gadget_concussive_wave_is_primed",
		"_gadget_concussive_wave::gadget_concussive_wave_off",
		"_gadget_concussive_wave::gadget_concussive_wave_on",
		"_gadget_concussive_wave::gadget_concussive_wave_on_connect",
		"_gadget_concussive_wave::gadget_concussive_wave_on_flicker",
		"_gadget_concussive_wave::gadget_concussive_wave_on_give",
		"_gadget_concussive_wave::gadget_concussive_wave_on_take",
		"_gadget_concussive_wave::on_player_spawned",
		"_gadget_drone::drone_precache",
		"_gadget_drone::gadget_drone_despawn",
		"_gadget_drone::gadget_drone_flicker",
		"_gadget_drone::gadget_drone_is_flickering",
		"_gadget_drone::gadget_drone_is_inuse",
		"_gadget_drone::gadget_drone_off",
		"_gadget_drone::gadget_drone_on",
		"_gadget_drone::gadget_drone_on_connect",
		"_gadget_drone::gadget_drone_on_flicker",
		"_gadget_drone::gadget_drone_on_give",
		"_gadget_drone::gadget_drone_on_take",
		"_gadget_drone::gadget_drone_spawn",
		"_gadget_drone::set_gadget_status",
		"_gadget_es_strike::gadget_es_strike_is_flickering",
		"_gadget_es_strike::gadget_es_strike_is_inuse",
		"_gadget_es_strike::gadget_es_strike_off",
		"_gadget_es_strike::gadget_es_strike_on",
		"_gadget_es_strike::gadget_es_strike_on_connect",
		"_gadget_es_strike::gadget_es_strike_on_flicker",
		"_gadget_es_strike::gadget_es_strike_on_give",
		"_gadget_es_strike::gadget_es_strike_on_take",
		"_gadget_es_strike::on_player_spawned",
		"_gadget_exo_breakdown::gadget_exo_breakdown_is_flickering",
		"_gadget_exo_breakdown::gadget_exo_breakdown_is_inuse",
		"_gadget_exo_breakdown::gadget_exo_breakdown_is_primed",
		"_gadget_exo_breakdown::gadget_exo_breakdown_off",
		"_gadget_exo_breakdown::gadget_exo_breakdown_on",
		"_gadget_exo_breakdown::gadget_exo_breakdown_on_connect",
		"_gadget_exo_breakdown::gadget_exo_breakdown_on_flicker",
		"_gadget_exo_breakdown::gadget_exo_breakdown_on_give",
		"_gadget_exo_breakdown::gadget_exo_breakdown_on_take",
		"_gadget_exo_breakdown::on_player_spawned",
		"_gadget_firefly_swarm::gadget_firefly_is_primed",
		"_gadget_firefly_swarm::gadget_firefly_swarm_is_flickering",
		"_gadget_firefly_swarm::gadget_firefly_swarm_is_inuse",
		"_gadget_firefly_swarm::gadget_firefly_swarm_off",
		"_gadget_firefly_swarm::gadget_firefly_swarm_on",
		"_gadget_firefly_swarm::gadget_firefly_swarm_on_connect",
		"_gadget_firefly_swarm::gadget_firefly_swarm_on_flicker",
		"_gadget_firefly_swarm::gadget_firefly_swarm_on_give",
		"_gadget_firefly_swarm::gadget_firefly_swarm_on_take",
		"_gadget_firefly_swarm::on_player_spawned",
		"_gadget_flashback::clone_fade",
		"_gadget_flashback::clone_flashback_changed",
		"_gadget_flashback::clone_flashback_changed_event",
		"_gadget_flashback::flashback_activated",
		"_gadget_flashback::set_flashback_trail_fx",
		"_gadget_forced_malfunction::gadget_forced_malfunction_is_flickering",
		"_gadget_forced_malfunction::gadget_forced_malfunction_is_inuse",
		"_gadget_forced_malfunction::gadget_forced_malfunction_is_primed",
		"_gadget_forced_malfunction::gadget_forced_malfunction_off",
		"_gadget_forced_malfunction::gadget_forced_malfunction_on",
		"_gadget_forced_malfunction::gadget_forced_malfunction_on_connect",
		"_gadget_forced_malfunction::gadget_forced_malfunction_on_flicker",
		"_gadget_forced_malfunction::gadget_forced_malfunction_on_give",
		"_gadget_forced_malfunction::gadget_forced_malfunction_on_take",
		"_gadget_forced_malfunction::on_player_spawned",
		"_gadget_hacker::has_hacker_changed",
		"_gadget_hacker::has_hacking_changed",
		"_gadget_hacker::on_player_connect",
		"_gadget_hacker::on_player_spawned",
		"_gadget_hacker::play_hacking_sounds",
		"_gadget_hacker::watch_hack_ents",
		"_gadget_heat_wave::aoe_fx",
		"_gadget_heat_wave::clear_heat_wave_fx",
		"_gadget_heat_wave::do_fx",
		"_gadget_heat_wave::on_local_player_spawned",
		"_gadget_heat_wave::on_player_spawned",
		"_gadget_heat_wave::set_heatwave_fx",
		"_gadget_heat_wave::update_activate",
		"_gadget_heat_wave::update_victim",
		"_gadget_hero_weapon::gadget_hero_weapon_is_flickering",
		"_gadget_hero_weapon::gadget_hero_weapon_is_inuse",
		"_gadget_hero_weapon::gadget_hero_weapon_on_activate",
		"_gadget_hero_weapon::gadget_hero_weapon_on_connect",
		"_gadget_hero_weapon::gadget_hero_weapon_on_flicker",
		"_gadget_hero_weapon::gadget_hero_weapon_on_give",
		"_gadget_hero_weapon::gadget_hero_weapon_on_off",
		"_gadget_hero_weapon::gadget_hero_weapon_on_spawn",
		"_gadget_hero_weapon::gadget_hero_weapon_on_take",
		"_gadget_hero_weapon::gadget_hero_weapon_ready",
		"_gadget_hero_weapon::hero_give_ammo",
		"_gadget_hero_weapon::hero_handle_ammo_save",
		"_gadget_hero_weapon::hero_save_ammo",
		"_gadget_hero_weapon::hero_wait_for_death",
		"_gadget_hero_weapon::hero_wait_for_game_end",
		"_gadget_hero_weapon::hero_wait_for_out_of_ammo",
		"_gadget_hero_weapon::set_gadget_hero_weapon_status",
		"_gadget_iff_override::gadget_iff_override_is_flickering",
		"_gadget_iff_override::gadget_iff_override_is_inuse",
		"_gadget_iff_override::gadget_iff_override_is_primed",
		"_gadget_iff_override::gadget_iff_override_off",
		"_gadget_iff_override::gadget_iff_override_on",
		"_gadget_iff_override::gadget_iff_override_on_connect",
		"_gadget_iff_override::gadget_iff_override_on_flicker",
		"_gadget_iff_override::gadget_iff_override_on_give",
		"_gadget_iff_override::gadget_iff_override_on_take",
		"_gadget_iff_override::on_player_spawned",
		"_gadget_immolation::gadget_immolation_is_flickering",
		"_gadget_immolation::gadget_immolation_is_inuse",
		"_gadget_immolation::gadget_immolation_is_primed",
		"_gadget_immolation::gadget_immolation_off",
		"_gadget_immolation::gadget_immolation_on",
		"_gadget_immolation::gadget_immolation_on_connect",
		"_gadget_immolation::gadget_immolation_on_flicker",
		"_gadget_immolation::gadget_immolation_on_give",
		"_gadget_immolation::gadget_immolation_on_take",
		"_gadget_immolation::on_player_spawned",
		"_gadget_infrared::infrared_changed",
		"_gadget_infrared::infrared_gadget_off",
		"_gadget_infrared::infrared_gadget_on",
		"_gadget_infrared::infrared_is_inuse",
		"_gadget_infrared::infrared_on_connect",
		"_gadget_infrared::infrared_on_disconnect",
		"_gadget_infrared::infrared_on_give",
		"_gadget_infrared::infrared_on_spawn",
		"_gadget_infrared::infrared_on_take",
		"_gadget_infrared::on_player_spawned",
		"_gadget_misdirection::gadget_misdirection_is_flickering",
		"_gadget_misdirection::gadget_misdirection_is_inuse",
		"_gadget_misdirection::gadget_misdirection_is_primed",
		"_gadget_misdirection::gadget_misdirection_off",
		"_gadget_misdirection::gadget_misdirection_on",
		"_gadget_misdirection::gadget_misdirection_on_connect",
		"_gadget_misdirection::gadget_misdirection_on_flicker",
		"_gadget_misdirection::gadget_misdirection_on_give",
		"_gadget_misdirection::gadget_misdirection_on_take",
		"_gadget_misdirection::on_player_spawned",
		"_gadget_mrpukey::gadget_mrpukey_is_flickering",
		"_gadget_mrpukey::gadget_mrpukey_is_inuse",
		"_gadget_mrpukey::gadget_mrpukey_is_primed",
		"_gadget_mrpukey::gadget_mrpukey_off",
		"_gadget_mrpukey::gadget_mrpukey_on",
		"_gadget_mrpukey::gadget_mrpukey_on_flicker",
		"_gadget_mrpukey::gadget_mrpukey_on_give",
		"_gadget_mrpukey::gadget_mrpukey_on_take",
		"_gadget_mrpukey::gadge_mrpukey_on_connect",
		"_gadget_mrpukey::on_player_spawned",
		"_gadget_multirocket::gadget_multirocket_fire",
		"_gadget_multirocket::gadget_multirocket_fire_hint_off",
		"_gadget_multirocket::gadget_multirocket_fire_hint_on",
		"_gadget_multirocket::gadget_multirocket_fire_watcher",
		"_gadget_multirocket::gadget_multirocket_flicker",
		"_gadget_multirocket::gadget_multirocket_is_flickering",
		"_gadget_multirocket::gadget_multirocket_is_inuse",
		"_gadget_multirocket::gadget_multirocket_off",
		"_gadget_multirocket::gadget_multirocket_on",
		"_gadget_multirocket::gadget_multirocket_on_connect",
		"_gadget_multirocket::gadget_multirocket_on_flicker",
		"_gadget_multirocket::gadget_multirocket_on_give",
		"_gadget_multirocket::gadget_multirocket_on_take",
		"_gadget_multirocket::gadget_multirocket_proximity_explode",
		"_gadget_multirocket::gadget_multirocket_remove_targets",
		"_gadget_multirocket::gadget_multirocket_target_acquire",
		"_gadget_multirocket::gadget_multirocket_weapon_watcher",
		"_gadget_multirocket::get_gadget_name",
		"_gadget_multirocket::get_gadget_weapon",
		"_gadget_multirocket::on_target_killed",
		"_gadget_multirocket::set_gadget_multirocket_flicker_status",
		"_gadget_multirocket::sndFakeFire",
		"_gadget_other::gadget_other_is_flickering",
		"_gadget_other::gadget_other_is_inuse",
		"_gadget_other::gadget_other_on_activate",
		"_gadget_other::gadget_other_on_connect",
		"_gadget_other::gadget_other_on_flicker",
		"_gadget_other::gadget_other_on_give",
		"_gadget_other::gadget_other_on_off",
		"_gadget_other::gadget_other_on_spawn",
		"_gadget_other::gadget_other_on_take",
		"_gadget_other::gadget_other_ready",
		"_gadget_other::set_gadget_other_status",
		"_gadget_overdrive::activation_flash",
		"_gadget_overdrive::boost_fx_interrupt_handler",
		"_gadget_overdrive::boost_fx_on_velocity",
		"_gadget_overdrive::enable_boost_camera_fx",
		"_gadget_overdrive::gadget_overdrive_is_flickering",
		"_gadget_overdrive::gadget_overdrive_is_inuse",
		"_gadget_overdrive::gadget_overdrive_off",
		"_gadget_overdrive::gadget_overdrive_on",
		"_gadget_overdrive::gadget_overdrive_on_connect",
		"_gadget_overdrive::gadget_overdrive_on_flicker",
		"_gadget_overdrive::gadget_overdrive_on_give",
		"_gadget_overdrive::gadget_overdrive_on_take",
		"_gadget_overdrive::on_localplayer_shutdown",
		"_gadget_overdrive::on_localplayer_spawned",
		"_gadget_overdrive::on_player_connect",
		"_gadget_overdrive::on_player_spawned",
		"_gadget_overdrive::overdrive_boost_fx_interrupt_handler",
		"_gadget_overdrive::overdrive_shutdown",
		"_gadget_overdrive::player_overdrive_handler",
		"_gadget_overdrive::stop_boost_camera_fx",
		"_gadget_overdrive::watch_stop_player_fx",
		"_gadget_rapid_strike::gadget_rapid_strike_is_flickering",
		"_gadget_rapid_strike::gadget_rapid_strike_is_inuse",
		"_gadget_rapid_strike::gadget_rapid_strike_off",
		"_gadget_rapid_strike::gadget_rapid_strike_on",
		"_gadget_rapid_strike::gadget_rapid_strike_on_connect",
		"_gadget_rapid_strike::gadget_rapid_strike_on_flicker",
		"_gadget_rapid_strike::gadget_rapid_strike_on_give",
		"_gadget_rapid_strike::gadget_rapid_strike_on_take",
		"_gadget_rapid_strike::on_player_spawned",
		"_gadget_ravage_core::gadget_ravage_core_is_flickering",
		"_gadget_ravage_core::gadget_ravage_core_is_inuse",
		"_gadget_ravage_core::gadget_ravage_core_off",
		"_gadget_ravage_core::gadget_ravage_core_on",
		"_gadget_ravage_core::gadget_ravage_core_on_connect",
		"_gadget_ravage_core::gadget_ravage_core_on_flicker",
		"_gadget_ravage_core::gadget_ravage_core_on_give",
		"_gadget_ravage_core::gadget_ravage_core_on_take",
		"_gadget_ravage_core::on_player_spawned",
		"_gadget_resurrect::player_resurrect_changed",
		"_gadget_resurrect::player_resurrect_state_changed",
		"_gadget_resurrect::resurrect_down_fx",
		"_gadget_resurrect::resurrect_up_fx",
		"_gadget_security_breach::gadget_security_breach_is_flickering",
		"_gadget_security_breach::gadget_security_breach_is_inuse",
		"_gadget_security_breach::gadget_security_breach_is_primed",
		"_gadget_security_breach::gadget_security_breach_off",
		"_gadget_security_breach::gadget_security_breach_on",
		"_gadget_security_breach::gadget_security_breach_on_connect",
		"_gadget_security_breach::gadget_security_breach_on_flicker",
		"_gadget_security_breach::gadget_security_breach_on_give",
		"_gadget_security_breach::gadget_security_breach_on_take",
		"_gadget_security_breach::on_player_spawned",
		"_gadget_sensory_overload::gadget_sensory_overload_is_flickering",
		"_gadget_sensory_overload::gadget_sensory_overload_is_inuse",
		"_gadget_sensory_overload::gadget_sensory_overload_is_primed",
		"_gadget_sensory_overload::gadget_sensory_overload_off",
		"_gadget_sensory_overload::gadget_sensory_overload_on",
		"_gadget_sensory_overload::gadget_sensory_overload_on_connect",
		"_gadget_sensory_overload::gadget_sensory_overload_on_flicker",
		"_gadget_sensory_overload::gadget_sensory_overload_on_give",
		"_gadget_sensory_overload::gadget_sensory_overload_on_take",
		"_gadget_sensory_overload::on_player_spawned",
		"_gadget_servo_shortout::gadget_servo_shortout_is_flickering",
		"_gadget_servo_shortout::gadget_servo_shortout_is_inuse",
		"_gadget_servo_shortout::gadget_servo_shortout_is_primed",
		"_gadget_servo_shortout::gadget_servo_shortout_off",
		"_gadget_servo_shortout::gadget_servo_shortout_on",
		"_gadget_servo_shortout::gadget_servo_shortout_on_connect",
		"_gadget_servo_shortout::gadget_servo_shortout_on_flicker",
		"_gadget_servo_shortout::gadget_servo_shortout_on_give",
		"_gadget_servo_shortout::gadget_servo_shortout_on_take",
		"_gadget_servo_shortout::on_player_spawned",
		"_gadget_shield::has_shield_changed",
		"_gadget_shield::on_player_spawned",
		"_gadget_shield::reflectBulletsHandler",
		"_gadget_shield::set_shield_flicker_status",
		"_gadget_shield::shield_flicker",
		"_gadget_shield::shield_gadget_off",
		"_gadget_shield::shield_gadget_on",
		"_gadget_shield::shield_is_flickering",
		"_gadget_shield::shield_is_inuse",
		"_gadget_shield::shield_on_connect",
		"_gadget_shield::shield_on_flicker",
		"_gadget_shield::shield_on_give",
		"_gadget_shield::shield_on_take",
		"_gadget_shield::update_sound",
		"_gadget_shock_field::flicker_field_fx",
		"_gadget_shock_field::gadget_shock_field_is_flickering",
		"_gadget_shock_field::gadget_shock_field_is_inuse",
		"_gadget_shock_field::gadget_shock_field_off",
		"_gadget_shock_field::gadget_shock_field_on",
		"_gadget_shock_field::gadget_shock_field_on_connect",
		"_gadget_shock_field::gadget_shock_field_on_flicker",
		"_gadget_shock_field::gadget_shock_field_on_give",
		"_gadget_shock_field::gadget_shock_field_on_take",
		"_gadget_shock_field::is_local_player",
		"_gadget_shock_field::on_player_spawned",
		"_gadget_shock_field::player_shock_changed",
		"_gadget_shock_field::shock_field_think",
		"_gadget_shock_field::shock_field_zap_sound",
		"_gadget_smokescreen::gadget_smokescreen_is_flickering",
		"_gadget_smokescreen::gadget_smokescreen_is_inuse",
		"_gadget_smokescreen::gadget_smokescreen_is_primed",
		"_gadget_smokescreen::gadget_smokescreen_off",
		"_gadget_smokescreen::gadget_smokescreen_on",
		"_gadget_smokescreen::gadget_smokescreen_on_connect",
		"_gadget_smokescreen::gadget_smokescreen_on_flicker",
		"_gadget_smokescreen::gadget_smokescreen_on_give",
		"_gadget_smokescreen::gadget_smokescreen_on_take",
		"_gadget_smokescreen::on_player_spawned",
		"_gadget_speed_burst::on_localplayer_spawned",
		"_gadget_speed_burst::on_player_spawned",
		"_gadget_speed_burst::player_speed_changed",
		"_gadget_surge::gadget_surge_is_flickering",
		"_gadget_surge::gadget_surge_is_inuse",
		"_gadget_surge::gadget_surge_is_primed",
		"_gadget_surge::gadget_surge_off",
		"_gadget_surge::gadget_surge_on",
		"_gadget_surge::gadget_surge_on_connect",
		"_gadget_surge::gadget_surge_on_flicker",
		"_gadget_surge::gadget_surge_on_give",
		"_gadget_surge::gadget_surge_on_take",
		"_gadget_surge::on_player_spawned",
		"_gadget_system_overload::gadget_system_overload_is_flickering",
		"_gadget_system_overload::gadget_system_overload_is_inuse",
		"_gadget_system_overload::gadget_system_overload_is_primed",
		"_gadget_system_overload::gadget_system_overload_off",
		"_gadget_system_overload::gadget_system_overload_on",
		"_gadget_system_overload::gadget_system_overload_on_connect",
		"_gadget_system_overload::gadget_system_overload_on_flicker",
		"_gadget_system_overload::gadget_system_overload_on_give",
		"_gadget_system_overload::gadget_system_overload_on_take",
		"_gadget_system_overload::on_player_spawned",
		"_gadget_turret_deploy::button_pressed",
		"_gadget_turret_deploy::can_recover_turret",
		"_gadget_turret_deploy::deploy_turret",
		"_gadget_turret_deploy::drop_to_ground",
		"_gadget_turret_deploy::field_damage_state_handler",
		"_gadget_turret_deploy::field_toggle_hack_handler",
		"_gadget_turret_deploy::field_toggle_keyline_handler",
		"_gadget_turret_deploy::field_toggle_retrievable_handler",
		"_gadget_turret_deploy::field_toggle_unplaceable_handler",
		"_gadget_turret_deploy::gadget_turret_deploy_failed_activate",
		"_gadget_turret_deploy::gadget_turret_deploy_is_flickering",
		"_gadget_turret_deploy::gadget_turret_deploy_is_inuse",
		"_gadget_turret_deploy::gadget_turret_deploy_off",
		"_gadget_turret_deploy::gadget_turret_deploy_on",
		"_gadget_turret_deploy::gadget_turret_deploy_on_connect",
		"_gadget_turret_deploy::gadget_turret_deploy_on_flicker",
		"_gadget_turret_deploy::gadget_turret_deploy_on_give",
		"_gadget_turret_deploy::gadget_turret_deploy_on_take",
		"_gadget_turret_deploy::get_gadget_name",
		"_gadget_turret_deploy::get_gadget_recover_name",
		"_gadget_turret_deploy::keep_power_constant",
		"_gadget_turret_deploy::on_player_connect",
		"_gadget_turret_deploy::play_beeps",
		"_gadget_turret_deploy::setup_turret_damage_states",
		"_gadget_turret_deploy::set_player_turret",
		"_gadget_turret_deploy::switch_player_gadget",
		"_gadget_turret_deploy::turret_can_be_hacked",
		"_gadget_turret_deploy::turret_delete",
		"_gadget_turret_deploy::turret_drain_power",
		"_gadget_turret_deploy::turret_hacked",
		"_gadget_turret_deploy::turret_hacked_fully",
		"_gadget_turret_deploy::turret_hack_fail",
		"_gadget_turret_deploy::turret_hack_start",
		"_gadget_turret_deploy::turret_owner_power_callback",
		"_gadget_turret_deploy::turret_precache",
		"_gadget_turret_deploy::turret_update_damage",
		"_gadget_turret_deploy::wait_and_clear_hack",
		"_gadget_turret_deploy::watch_player_death",
		"_gadget_turret_deploy::watch_turret_keyline",
		"_gadget_turret_deploy::watch_turret_recovery",
		"_gadget_unstoppable_force::activation_flash",
		"_gadget_unstoppable_force::boost_fx_interrupt_handler",
		"_gadget_unstoppable_force::boost_fx_on_velocity",
		"_gadget_unstoppable_force::enable_boost_camera_fx",
		"_gadget_unstoppable_force::gadget_firefly_is_primed",
		"_gadget_unstoppable_force::gadget_unstoppable_force_is_flickering",
		"_gadget_unstoppable_force::gadget_unstoppable_force_is_inuse",
		"_gadget_unstoppable_force::gadget_unstoppable_force_off",
		"_gadget_unstoppable_force::gadget_unstoppable_force_on",
		"_gadget_unstoppable_force::gadget_unstoppable_force_on_connect",
		"_gadget_unstoppable_force::gadget_unstoppable_force_on_flicker",
		"_gadget_unstoppable_force::gadget_unstoppable_force_on_give",
		"_gadget_unstoppable_force::gadget_unstoppable_force_on_take",
		"_gadget_unstoppable_force::on_localplayer_shutdown",
		"_gadget_unstoppable_force::on_player_spawned",
		"_gadget_unstoppable_force::player_unstoppableforce_handler",
		"_gadget_unstoppable_force::stop_boost_camera_fx",
		"_gadget_vision_pulse::gadget_vision_pulse_flicker",
		"_gadget_vision_pulse::gadget_vision_pulse_is_flickering",
		"_gadget_vision_pulse::gadget_vision_pulse_is_inuse",
		"_gadget_vision_pulse::gadget_vision_pulse_off",
		"_gadget_vision_pulse::gadget_vision_pulse_on",
		"_gadget_vision_pulse::gadget_vision_pulse_on_connect",
		"_gadget_vision_pulse::gadget_vision_pulse_on_flicker",
		"_gadget_vision_pulse::gadget_vision_pulse_on_give",
		"_gadget_vision_pulse::gadget_vision_pulse_on_spawn",
		"_gadget_vision_pulse::gadget_vision_pulse_on_take",
		"_gadget_vision_pulse::gadget_vision_pulse_ramp_hold_func",
		"_gadget_vision_pulse::gadget_vision_pulse_start",
		"_gadget_vision_pulse::gadget_vision_pulse_watch_death",
		"_gadget_vision_pulse::gadget_vision_pulse_watch_emp",
		"_gadget_vision_pulse::set_gadget_vision_pulse_status",
		"_gadget_vision_pulse::wait_until_is_done",
		"_sticky_grenade::fullscreen_fx",
		"_sticky_grenade::fx_think",
		"_sticky_grenade::init",
		"_sticky_grenade::main",
		"_sticky_grenade::spawned",
		"_sticky_grenade::start_light_fx",
		"_sticky_grenade::stop_light_fx",
		"_sticky_grenade::watch_bolt_detonation",
		"_zm_demo::player_on_connect",
		"_zm_demo::watch_predicted_player_changes",
		"_zm_mgturret::avoid_synchronization",
		"_zm_mgturret::burst_fire",
		"_zm_mgturret::burst_fire_settings",
		"_zm_mgturret::burst_fire_unmanned",
		"_zm_mgturret::do_shoot",
		"_zm_mgturret::init_turret_difficulty_settings",
		"_zm_mgturret::main",
		"_zm_mgturret::random_spread",
		"_zm_mgturret::set_difficulty",
		"_zm_mgturret::turret_set_difficulty",
		"_zm_mgturret::turret_suppression_fire",
		"_zm_mgturret::turret_timer",
		"_zm_pack_a_punch::pap_working_FX_handler",
		"_zm_pack_a_punch::set_state_arriving",
		"_zm_pack_a_punch::set_state_hidden",
		"_zm_pack_a_punch::set_state_initial",
		"_zm_pack_a_punch::set_state_leaving",
		"_zm_pack_a_punch::set_state_power_on",
		"_zm_weap_ballistic_knife::debug_print",
		"_zm_weap_ballistic_knife::destroy_ent",
		"_zm_weap_ballistic_knife::drop_knives_to_ground",
		"_zm_weap_ballistic_knife::force_drop_knives_to_ground_on_death",
		"_zm_weap_ballistic_knife::init",
		"_zm_weap_ballistic_knife::on_spawn",
		"_zm_weap_ballistic_knife::on_spawn_retrieve_trigger",
		"_zm_weap_ballistic_knife::pick_up",
		"_zm_weap_ballistic_knife::update_retrieve_trigger",
		"_zm_weap_ballistic_knife::wait_to_show_glowing_model",
		"_zm_weap_ballistic_knife::watch_shutdown",
		"_zm_weap_ballistic_knife::watch_use_trigger",
		"_zm_weap_bowie::init",
		"_zm_weap_cymbal_monkey::clone_player_angles",
		"_zm_weap_cymbal_monkey::cymbal_monkey_exists",
		"_zm_weap_cymbal_monkey::do_monkey_sound",
		"_zm_weap_cymbal_monkey::FakeLinkto",
		"_zm_weap_cymbal_monkey::get_thrown_monkey",
		"_zm_weap_cymbal_monkey::grenade_stolen_by_sam",
		"_zm_weap_cymbal_monkey::hide_owner",
		"_zm_weap_cymbal_monkey::init",
		"_zm_weap_cymbal_monkey::monitor_zombie_groans",
		"_zm_weap_cymbal_monkey::monkey_cleanup",
		"_zm_weap_cymbal_monkey::move_valid_poi_to_navmesh",
		"_zm_weap_cymbal_monkey::player_give_cymbal_monkey",
		"_zm_weap_cymbal_monkey::player_give_cymbal_monkey_upgraded",
		"_zm_weap_cymbal_monkey::player_handle_cymbal_monkey",
		"_zm_weap_cymbal_monkey::player_throw_cymbal_monkey",
		"_zm_weap_cymbal_monkey::play_delayed_explode_vox",
		"_zm_weap_cymbal_monkey::play_zombie_groans",
		"_zm_weap_cymbal_monkey::proximity_detonate",
		"_zm_weap_cymbal_monkey::pulse_damage",
		"_zm_weap_cymbal_monkey::show_briefly",
		"_zm_weap_cymbal_monkey::show_owner_on_attack",
		"_zm_weap_cymbal_monkey::watch_for_dud",
		"_zm_weap_cymbal_monkey::watch_for_emp",
		"_zm_weap_gravityspikes::gravity_slam_down",
		"_zm_weap_gravityspikes::gravity_slam_fx",
		"_zm_weap_gravityspikes::gravity_slam_player_fx",
		"_zm_weap_gravityspikes::gravity_spike_zombie_explode",
		"_zm_weap_gravityspikes::gravity_trap_destroy",
		"_zm_weap_gravityspikes::gravity_trap_fx",
		"_zm_weap_gravityspikes::gravity_trap_location",
		"_zm_weap_gravityspikes::gravity_trap_rumble",
		"_zm_weap_gravityspikes::gravity_trap_rumble_callback",
		"_zm_weap_gravityspikes::gravity_trap_spike_spark",
		"_zm_weap_gravityspikes::play_sparky_beam_fx",
		"_zm_weap_gravityspikes::ragdoll_impact_watch",
		"_zm_weap_gravityspikes::ragdoll_impact_watch_start",
		"_zm_weap_gravityspikes::register_clientfields",
		"_zm_weap_gravityspikes::sparky_zombie_fx_cb",
		"_zm_weap_gravityspikes::sparky_zombie_trail_fx_cb",
		"_zm_weap_octobomb::animate_octobomb",
		"_zm_weap_octobomb::check_octobomb_on_train",
		"_zm_weap_octobomb::devgui_octobomb_give",
		"_zm_weap_octobomb::do_octobomb_sound",
		"_zm_weap_octobomb::do_tentacle_burst",
		"_zm_weap_octobomb::do_tentacle_grab",
		"_zm_weap_octobomb::FakeLinkto",
		"_zm_weap_octobomb::get_thrown_octobomb",
		"_zm_weap_octobomb::grenade_planted",
		"_zm_weap_octobomb::grenade_stolen_by_sam",
		"_zm_weap_octobomb::hide_owner",
		"_zm_weap_octobomb::is_on_navmesh",
		"_zm_weap_octobomb::move_away_from_edges",
		"_zm_weap_octobomb::octobomb_cleanup",
		"_zm_weap_octobomb::octobomb_devgui",
		"_zm_weap_octobomb::octobomb_exists",
		"_zm_weap_octobomb::octobomb_fx",
		"_zm_weap_octobomb::octobomb_give",
		"_zm_weap_octobomb::octobomb_spit_fx",
		"_zm_weap_octobomb::octobomb_spit_fx_and_cleanup",
		"_zm_weap_octobomb::octobomb_spores_fx",
		"_zm_weap_octobomb::octobomb_spore_fx_on",
		"_zm_weap_octobomb::octobomb_tentacle_hit_fx",
		"_zm_weap_octobomb::octobomb_zombie_explode_fx",
		"_zm_weap_octobomb::octo_gib",
		"_zm_weap_octobomb::parasite_attractor",
		"_zm_weap_octobomb::parasite_attractor_grab",
		"_zm_weap_octobomb::parasite_attractor_init",
		"_zm_weap_octobomb::parasite_variables",
		"_zm_weap_octobomb::player_give_octobomb",
		"_zm_weap_octobomb::player_give_octobomb_upgraded",
		"_zm_weap_octobomb::player_handle_octobomb",
		"_zm_weap_octobomb::player_throw_octobomb",
		"_zm_weap_octobomb::show_briefly",
		"_zm_weap_octobomb::show_owner_on_attack",
		"_zm_weap_octobomb::sndAttackVox",
		"_zm_weap_octobomb::special_attractor_spawn",
		"_zm_weap_octobomb::vehicle_attractor",
		"_zm_weap_octobomb::vehicle_attractor_damage",
		"_zm_weap_octobomb::zombie_explodes",
		"_zm_weap_octobomb::zombie_spore_infect",
		"_zm_weap_raygun_mark3::ai_disintegrate",
		"_zm_weap_raygun_mark3::ai_slow_vortex_fx",
		"_zm_weap_raygun_mark3::apply_vortex_fx",
		"_zm_weap_raygun_mark3::disintegrate_zombie",
		"_zm_weap_raygun_mark3::glow_monitor",
		"_zm_weap_raygun_mark3::is_beam_raygun",
		"_zm_weap_raygun_mark3::is_slow_raygun",
		"_zm_weap_raygun_mark3::monitor_raygun_mark3",
		"_zm_weap_raygun_mark3::player_vortex_visionset",
		"_zm_weap_raygun_mark3::pulse_damage",
		"_zm_weap_raygun_mark3::raygun_mark3_damage_response",
		"_zm_weap_raygun_mark3::raygun_vortex_reposition",
		"_zm_weap_raygun_mark3::slow_vortex_fx",
		"_zm_weap_raygun_mark3::start_slow_vortex",
		"_zm_weap_raygun_mark3::vortex_shake_and_rumble",
		"_zm_weap_raygun_mark3::waittill_notetrack",
		"_zm_weap_raygun_mark3::wait_for_beam_damage",
		"_zm_weap_raygun_mark3::watch_raygun_impact",
		"_zm_weap_raygun_mark3::zombie_blacken",
		"_zm_weap_tesla::cleanup_loop_sound",
		"_zm_weap_tesla::clear_tesla_tube_effect",
		"_zm_weap_tesla::enemy_killed_by_tesla",
		"_zm_weap_tesla::init",
		"_zm_weap_tesla::is_tesla_damage",
		"_zm_weap_tesla::on_player_spawned",
		"_zm_weap_tesla::player_init",
		"_zm_weap_tesla::play_tesla_sound",
		"_zm_weap_tesla::tesla_change_watcher",
		"_zm_weap_tesla::tesla_damage_init",
		"_zm_weap_tesla::tesla_engine_sweets",
		"_zm_weap_tesla::tesla_fx_rail",
		"_zm_weap_tesla::tesla_fx_tube",
		"_zm_weap_tesla::tesla_happy",
		"_zm_weap_tesla::tesla_killstreak_sound",
		"_zm_weap_tesla::tesla_network_choke",
		"_zm_weap_tesla::tesla_notetrack_think",
		"_zm_weap_tesla::tesla_pvp_thread",
		"_zm_weap_tesla::tesla_sound_thread",
		"_zm_weap_tesla::tesla_zombie_damage_response",
		"_zm_weap_tesla::tesla_zombie_death_response"
	]
}
