{
	"scope": "(source.codt7.gsc) & (meta.developer-function-name)",
	"completions":
	[
		"zm_shadow_zombie::init_fx",
		"zm_shadow_zombie::register_clientfields",
		"zm_shadow_zombie::shadow_zombie_cursetrap_fx",
		"zm_weap_staff_air::ragdoll_impact_watch",
		"zm_weap_staff_air::air_staff_launch",
		"global_fx::main",
		"global_fx::wind_initial_setting",
		"global_fx::check_for_wind_override",
		"zm_altbody::init",
		"zm_altbody::set_player_mana",
		"zm_altbody::toggle_player_altbody",
		"zm_altbody::cover_transition",
		"radiant_live_udpate::scriptstruct_debug_render",
		"radiant_live_udpate::render_struct",
		"zm::init",
		"zm::delay_for_clients_then_execute",
		"zm::init_duplicaterender_settings",
		"zm::player_duplicaterender",
		"zm::player_umbrahotfixes",
		"zm::basic_player_connect",
		"zm::force_update_player_clientfields",
		"zm::init_blocker_fx",
		"zm::init_riser_fx",
		"zm::init_clientfields",
		"zm::box_monitor",
		"zm::zpo_listener",
		"zm::zpoff_listener",
		"zm::zombie_power_clientfield_on",
		"zm::zombie_power_clientfield_off",
		"zm::round_complete_time",
		"zm::round_complete_num",
		"zm::game_end_time",
		"zm::quest_complete_time",
		"zm::game_start_time",
		"zm::createZombieEyesInternal",
		"zm::createZombieEyes",
		"zm::deleteZombieEyes",
		"zm::player_eyes_clientfield_cb",
		"zm::player_eye_color_clientfield_cb",
		"zm::zombie_eyes_handle_demo_jump",
		"zm::zombie_eyes_demo_watcher",
		"zm::zombie_eyes_demo_clientfield_cb",
		"zm::zombie_eyes_clientfield_cb",
		"zm::zombie_zombie_keyline_render_clientfield_cb",
		"zm::get_eyeball_on_luminance",
		"zm::get_eyeball_off_luminance",
		"zm::get_eyeball_color",
		"zm::zombie_ragdoll_explode_cb",
		"zm::zombie_gut_explosion_cb",
		"zm::init_zombie_explode_fx",
		"zm::zombie_wait_explode",
		"zm::mark_piece_gibbed",
		"zm::has_gibbed_piece",
		"zm::do_headshot_gib_fx",
		"zm::do_gib_fx",
		"zm::do_gib",
		"zm::do_hat_gib",
		"zm::check_should_gib",
		"zm::resetgibcounter",
		"zm::on_gib_event",
		"zm::zombie_vision_set_apply",
		"zm::zombie_vision_set_remove",
		"zm::zombie_highest_vision_set_apply",
		"zm::handle_zombie_risers_foliage",
		"zm::handle_zombie_risers_water",
		"zm::handle_zombie_risers",
		"zm::handle_zombie_risers_lowg",
		"zm::rise_dust_fx",
		"zm::end_last_stand",
		"zm::last_stand_thread",
		"zm::last_stand_monitor",
		"zm::laststand",
		"zm::update_aat_hud",
		"_zm_weap_gravityspikes::register_clientfields",
		"_zm_weap_gravityspikes::gravity_slam_down",
		"_zm_weap_gravityspikes::gravity_slam_fx",
		"_zm_weap_gravityspikes::gravity_slam_player_fx",
		"_zm_weap_gravityspikes::gravity_trap_fx",
		"_zm_weap_gravityspikes::gravity_trap_spike_spark",
		"_zm_weap_gravityspikes::gravity_trap_location",
		"_zm_weap_gravityspikes::gravity_trap_destroy",
		"_zm_weap_gravityspikes::ragdoll_impact_watch_start",
		"_zm_weap_gravityspikes::ragdoll_impact_watch",
		"_zm_weap_gravityspikes::gravity_trap_rumble_callback",
		"_zm_weap_gravityspikes::gravity_trap_rumble",
		"_zm_weap_gravityspikes::play_sparky_beam_fx",
		"_zm_weap_gravityspikes::sparky_zombie_fx_cb",
		"_zm_weap_gravityspikes::sparky_zombie_trail_fx_cb",
		"_zm_weap_gravityspikes::gravity_spike_zombie_explode",
		"zm_altbody_beast::player_on_connect",
		"zm_altbody_beast::player_on_spawned",
		"zm_altbody_beast::player_enter_beastmode",
		"zm_altbody_beast::player_exit_beastmode",
		"zm_altbody_beast::get_script_noteworthy_array",
		"zm_altbody_beast::player_update_beast_mode_objects",
		"zm_altbody_beast::entity_set_bmplayer",
		"zm_altbody_beast::entity_set_visible",
		"zm_altbody_beast::add_remove_list",
		"zm_altbody_beast::clean_deleted",
		"zm_altbody_beast::bminteract_changed",
		"zm_altbody_beast::update_kiosk_state",
		"zm_altbody_beast::sndbeastmode",
		"zm_altbody_beast::sndbeastmode_manastart",
		"zm_altbody_beast::sndbeastmode_manastop",
		"zm_altbody_beast::grapple_beam",
		"zm_altbody_beast::grapple_watch",
		"zm_altbody_beast::bm_zombie_melee_kill",
		"zm_altbody_beast::bm_zombie_grapple_kill",
		"zm_train::autosend_train",
		"_zm_weap_elemental_bow_storm::elem_storm_fx",
		"_zm_weap_elemental_bow_storm::elem_storm_whirlwind_rumble",
		"_zm_weap_elemental_bow_storm::elem_storm_bolt_fx",
		"_zm_weap_elemental_bow_storm::elem_storm_zap_ambient",
		"_zm_weap_elemental_bow_storm::elem_storm_shock_fx",
		"_zm_weap_beacon::init",
		"_zm_weap_beacon::play_artillery_barrage",
		"_zm_weap_beacon::build_weap_beacon_landing_offsets",
		"_zm_weap_beacon::build_weap_beacon_start_offsets",
		"_zm_weap_beacon::build_weap_beacon_landing_offsets_ee",
		"_zm_weap_beacon::build_weap_beacon_start_offsets_ee",
		"_claymore::init",
		"_claymore::spawned",
		"zm_ai_spiders::register_clientfields",
		"zm_ai_spiders::spider_round_fx",
		"zm_ai_spiders::spider_end_of_round_reset",
		"zm_ai_spiders::spider_round_ring_fx",
		"zm_ai_wasp::parasite_fog_on",
		"zm_ai_wasp::parasite_round_fx",
		"zm_ai_wasp::parasite_round_ring_fx",
		"zm_perk_juggernaut::init_juggernaut",
		"zm_perk_juggernaut::juggernaut_client_field_func",
		"zm_perk_juggernaut::juggernaut_code_callback_func",
		"zm_weap_staff_water::attach_model",
		"zm_weap_staff_water::staff_blizzard_fx",
		"zm_perks::init",
		"zm_perks::perks_register_clientfield",
		"zm_perks::perk_init_code_callbacks",
		"zm_perks::init_custom_perks",
		"zm_perks::register_perk_clientfields",
		"zm_perks::register_perk_effects",
		"zm_perks::register_perk_init_thread",
		"zm_perks::init_perk_custom_threads",
		"zm_perks::_register_undefined_perk",
		"zm_perks::perk_meteor_fx",
		"zm_perks::init_perk_machines_fx",
		"zm_perks::perk_start_up",
		"zm_perks::vending_machine_flicker_light",
		"zm_perks::play_perk_fx_on_client",
		"zm_ai_dogs::init_dog_fx",
		"zm_ai_dogs::dog_fx",
		"zm_powerups::init",
		"zm_powerups::add_zombie_powerup",
		"zm_powerups::set_clientfield_code_callbacks",
		"zm_powerups::include_zombie_powerup",
		"zm_powerups::powerup_state_callback",
		"zm_powerups::powerup_fx_callback",
		"zm_weap_microwavegun::player_init",
		"zm_weap_microwavegun::microwavegun_create_hit_response_fx",
		"zm_weap_microwavegun::microwavegun_delete_hit_response_fx",
		"zm_weap_microwavegun::microwavegun_bloat",
		"zm_weap_microwavegun::microwavegun_zombie_initial_hit_response",
		"zm_weap_microwavegun::microwavegun_zombie_expand_response",
		"zm_ai_raps::_setup_",
		"zm_ai_raps::elemental_round_fx",
		"zm_ai_raps::elemental_round_ring_fx",
		"zm_ai_raps::wait_for_bullet_impact",
		"zm_audio::on_player_spawned",
		"zm_audio::delay_set_exert_id",
		"zm_audio::charindex_cb",
		"zm_audio::isspeaking_cb",
		"zm_audio::zmbMusLooper",
		"zm_audio::waitfor_music_stop",
		"zm_audio::playerFallDamageSound",
		"zm_audio::clientVoiceSetup",
		"zm_audio::audio_player_connect",
		"zm_audio::playerExert",
		"zm_audio::sndVoNotifyDTP",
		"zm_audio::sndMeleeSwipe",
		"zm_audio::sndVoNotifyPlain",
		"zm_audio::end_gameover_snapshot",
		"zm_audio::gameover_snapshot",
		"zm_audio::sndSetZombieContext",
		"zm_audio::sndZmbLaststand",
		"dragon_scale_shield::dragonshield_snd_projectile_impact",
		"dragon_scale_shield::dragonshield_snd_zombie_knockdown",
		"zm_ai_sonic::init_clientfields",
		"zm_ai_sonic::sonic_zombie_callback",
		"zm_ai_sonic::sonic_ambient_sounds",
		"_zm_demo::player_on_connect",
		"_zm_demo::watch_predicted_player_changes",
		"zm_equip_shield::player_on_spawned",
		"zm_equip_shield::watch_weapon_changes",
		"zm_equip_shield::lock_weapon_model",
		"zm_equip_shield::unlock_weapon_model",
		"zm_equip_shield::lock_weapon_models",
		"_zm_weap_elemental_bow_wolf_howl::wolf_howl_muzzle_flash",
		"_zm_weap_elemental_bow_wolf_howl::wolf_howl_slow_snow_fx",
		"_zm_weap_elemental_bow_wolf_howl::zombie_hit_by_wolf_howl_charge",
		"_zm_weap_elemental_bow_wolf_howl::wolf_howl_zombie_explode_fx",
		"zm_equipment::add_equip_activated_callback_override",
		"zm_equipment::equipment_activated_clientfield_cb",
		"zm_equipment::play_fx_for_all_clients",
		"zm_equipment::is_included",
		"zm_equipment::include",
		"zm_perk_widows_wine::init_widows_wine",
		"zm_perk_widows_wine::widows_wine_client_field_func",
		"zm_perk_widows_wine::widows_wine_code_callback_func",
		"zm_perk_widows_wine::widows_wine_wrap_cb",
		"zm_perk_widows_wine::widows_wine_1p_contact_explosion",
		"zm_perk_widows_wine::widows_wine_1p_contact_explosion_play",
		"zm_ai_spiders::transition_shader",
		"zm_ai_spiders::set_fade_material",
		"zm_ai_spiders::web_fade_material",
		"zm_ai_spiders::play_grenade_stuck_in_web_fx",
		"zm_ai_spiders::play_spider_web_tear_fx",
		"zm_ai_spiders::play_spider_web_tear_complete_fx",
		"zm_ai_sentinel_drone::sentinel_round_fog",
		"zm_ai_sentinel_drone::sentinel_round_fx",
		"zm_ai_sentinel_drone::sentinel_spawn_fx",
		"zm_ai_sentinel_drone::necro_sentinel_fx",
		"zm_ai_sentinel_drone::sentinel_play_taunt",
		"zm_traps::is_trap_registered",
		"zm_perk_deadshot::enable_deadshot_perk_for_level",
		"zm_perk_deadshot::init_deadshot",
		"zm_perk_deadshot::deadshot_client_field_func",
		"zm_perk_deadshot::deadshot_code_callback_func",
		"zm_perk_deadshot::player_deadshot_perk_handler",
		"zm_magicbox_zod::init",
		"zm_magicbox_zod::magicbox_open_fx",
		"zm_magicbox_zod::magicbox_initial_closed_fx",
		"ball::on_localclient_connect",
		"ball::on_player_spawned",
		"ball::setup_goal",
		"ball::setup_goal_fx",
		"ball::setup_fx",
		"ball::play_score_fx",
		"ball::play_goal_score_fx",
		"ball::world_ball_score_allies",
		"ball::world_ball_score_axis",
		"ball::player_ballcarrier_changed",
		"ball::set_hud",
		"ball::clear_hud",
		"ball::watch_for_death",
		"ball::player_passoption_changed",
		"ball::world_ball_away_changed",
		"ball::set_player_ball_carrier_dr",
		"ball::set_player_pass_option_dr",
		"ball::resetondemojump",
		"ball::watch_for_team_change",
		"ball::ball_on_ground_fx",
		"zm_weap_shrink_ray::fun_size",
		"_sticky_grenade::main",
		"_sticky_grenade::spawned",
		"_sticky_grenade::fx_think",
		"_sticky_grenade::start_light_fx",
		"_sticky_grenade::stop_light_fx",
		"_sticky_grenade::fullscreen_fx",
		"zm_equip_turret::set_rocketshield_ammo",
		"zm_perk_electric_cherry::init_electric_cherry",
		"zm_perk_electric_cherry::electric_cherry_client_field_func",
		"zm_perk_electric_cherry::electric_cherry_code_callback_func",
		"zm_perk_electric_cherry::electric_cherry_reload_attack_fx",
		"zm_perk_electric_cherry::tesla_death_fx_callback",
		"zm_perk_electric_cherry::tesla_shock_eyes_fx_callback",
		"zm_perk_sleight_of_hand::enable_sleight_of_hand_perk_for_level",
		"zm_perk_sleight_of_hand::init_sleight_of_hand",
		"zm_perk_sleight_of_hand::sleight_of_hand_client_field_func",
		"zm_perk_sleight_of_hand::sleight_of_hand_code_callback_func",
		"zm_craftables::set_craftable_clientfield",
		"zm_craftables::init",
		"zm_craftables::add_zombie_craftable",
		"zm_craftables::set_clientfield_craftables_code_callbacks",
		"zm_craftables::include_zombie_craftable",
		"zm_craftables::set_piece_count",
		"zm_elemental_zombie::init_fx",
		"zm_elemental_zombie::register_clientfields",
		"zm_powerup_nuke::zombie_nuked",
		"filter::init_filter_zm_turned",
		"filter::enable_filter_zm_turned",
		"filter::disable_filter_zm_turned",
		"idgun::init",
		"idgun::construct_idgun_weapon_array",
		"idgun::is_idgun_damage",
		"zm_playerhealth::sndzombiehealth",
		"controllable_spider::player_cocooned_fx",
		"zm_utility::ignore_triggers",
		"zm_utility::is_encounter",
		"zm_utility::round_up_to_ten",
		"zm_utility::round_up_score",
		"zm_utility::halve_score",
		"zm_utility::spawn_weapon_model",
		"zm_utility::spawn_buildkit_weapon_model",
		"zm_utility::is_classic",
		"zm_utility::is_gametype_active",
		"zm_utility::setinventoryuimodels",
		"zm_utility::setsharedinventoryuimodels",
		"zm_utility::zm_ui_infotext",
		"zm_utility::drawcylinder",
		"zm_utility::umbra_fix_logic",
		"zm_utility::umbra_fix_trigger",
		"zm_perk_quick_revive::enable_quick_revive_perk_for_level",
		"zm_perk_quick_revive::init_quick_revive",
		"zm_perk_quick_revive::quick_revive_client_field_func",
		"zm_perk_quick_revive::quick_revive_callback_func",
		"zm_perk_doubletap2::enable_doubletap2_perk_for_level",
		"zm_perk_doubletap2::init_doubletap2",
		"zm_perk_doubletap2::doubletap2_client_field_func",
		"zm_perk_doubletap2::doubletap2_code_callback_func",
		"zclassic::main",
		"zclassic::onprecachegametype",
		"zclassic::onstartgametype",
		"_zm_weap_elemental_bow_rune_prison::runeprison_rock_fx",
		"_zm_weap_elemental_bow_rune_prison::scene_play",
		"_zm_weap_elemental_bow_rune_prison::runeprison_explode_fx",
		"_zm_weap_elemental_bow_rune_prison::runeprison_lava_geyser_fx",
		"_zm_weap_elemental_bow_rune_prison::runeprison_lava_geyser_dot_fx",
		"_zm_weap_elemental_bow_rune_prison::runeprison_zombie_charring",
		"_zm_weap_elemental_bow_rune_prison::runeprison_zombie_death_skull",
		"_zm_weap_tesla::init",
		"_zm_weap_tesla::player_init",
		"_zm_weap_tesla::tesla_fx_rail",
		"_zm_weap_tesla::tesla_fx_tube",
		"_zm_weap_tesla::tesla_notetrack_think",
		"_zm_weap_tesla::tesla_happy",
		"_zm_weap_tesla::tesla_change_watcher",
		"_zm_weap_tesla::clear_tesla_tube_effect",
		"namespace_3de4ab6f::death_ray_shock_fx",
		"_zm_weap_octobomb::octobomb_tentacle_hit_fx",
		"_zm_weap_octobomb::octobomb_fx",
		"_zm_weap_octobomb::octobomb_spores_fx",
		"_zm_weap_octobomb::octobomb_spore_fx_on",
		"_zm_weap_octobomb::octobomb_zombie_explode_fx",
		"_zm_weap_octobomb::octobomb_spit_fx",
		"_zm_weap_octobomb::octobomb_spit_fx_and_cleanup",
		"zm_magicbox::force_stream_changed",
		"zm_magicbox::lock_weapon_model",
		"zm_magicbox::unlock_weapon_model",
		"zm_magicbox::stream_model_for_time",
		"zm_magicbox::magicbox_show_sounds_callback",
		"zm_magicbox::magicbox_leave_sounds_callback",
		"zm_magicbox::magicbox_open_glow_callback",
		"zm_magicbox::magicbox_closed_glow_callback",
		"zm_magicbox::magicbox_glow_callback",
		"zm_magicbox::glow_obj_demo_jump_listener",
		"zm_magicbox::glow_obj_cleanup",
		"zm_weap_black_hole_bomb::bhb_viewlights",
		"zm_weap_black_hole_bomb::black_hole_deployed",
		"zm_weap_black_hole_bomb::black_hole_fx_start",
		"zm_weap_black_hole_bomb::black_hole_activated",
		"zm_weap_black_hole_bomb::black_hole_zombie_being_pulled",
		"zm_weap_black_hole_bomb::black_hole_bomb_pulled_in_fx_clean",
		"zm_powerup_island_seed::register_clientfields",
		"namespace_6d577909::keeper_thunderwall",
		"namespace_6d577909::keeper_thunderwall_360",
		"namespace_6d577909::new_timer",
		"namespace_6d577909::timer_increment_loop",
		"namespace_6d577909::get_time",
		"namespace_6d577909::get_time_in_seconds",
		"namespace_6d577909::reset_timer",
		"dragon_strike::dragon_strike_spawn_fx",
		"dragon_strike::dragon_strike_marker_on",
		"dragon_strike::dragon_strike_marker_fx",
		"dragon_strike::dragon_strike_marker_upgraded_fx",
		"dragon_strike::dragon_strike_marker_invalid_fx",
		"dragon_strike::dragon_strike_marker_upgraded_invalid_fx",
		"dragon_strike::dragon_strike_flare_fx",
		"dragon_strike::dragon_strike_marker_fx_fadeout",
		"dragon_strike::dragon_strike_marker_upgraded_fx_fadeout",
		"dragon_strike::dragon_strike_zombie_fire",
		"zm_radio::next_song",
		"zm_radio::add_song",
		"zm_radio::fade",
		"zm_radio::stop_radio_listener",
		"_zm_weap_elemental_bow_demongate::demongate_portal_fx",
		"_zm_weap_elemental_bow_demongate::demongate_portal_rumble",
		"_zm_weap_elemental_bow_demongate::demongate_wander_locomotion_anim",
		"_zm_weap_elemental_bow_demongate::demongate_attack_locomotion_anim",
		"_zm_weap_elemental_bow_demongate::demongate_chomper_fx",
		"_zm_weap_elemental_bow_demongate::demongate_chomper_bite_fx",
		"zm_weap_staff_fire::fire_muzzle_fx",
		"zm_weap_staff_fire::snddeleteent",
		"zm_weapons::is_weapon_included",
		"zm_weapons::compute_player_weapon_ammo_cost",
		"zm_weapons::include_weapon",
		"zm_weapons::include_upgraded_weapon",
		"zm_weapons::is_weapon_upgraded",
		"zm_weapons::init",
		"zm_weapons::is_wallbuy",
		"zm_weapons::wallbuy_player_connect",
		"zm_weapons::wallbuy_callback",
		"zm_weapons::wallbuy_callback_idx",
		"zm_weapons::checkstringvalid",
		"zm_weapons::load_weapon_spec_from_table",
		"zm_weapons::autofill_wallbuys_init",
		"zm_perk_staminup::enable_staminup_perk_for_level",
		"zm_perk_staminup::init_staminup",
		"zm_perk_staminup::staminup_client_field_func",
		"zm_perk_staminup::staminup_callback_func",
		"zm_light_zombie::init_fx",
		"zm_light_zombie::register_clientfields",
		"load::levelnotifyhandler",
		"load::warnmissilelocking",
		"load::warnmissilelocked",
		"load::warnmissilefired",
		"load::main",
		"load::server_time",
		"load::register_clientfields",
		"ambient::on_player_connect",
		"ambient::setup_point_fx",
		"ambient::ambient_flak_think",
		"ambient::ambient_flak_rotate",
		"ambient::ambient_flak_flash",
		"ambient::ambient_fakefire_think",
		"ambient::ceiling_fans_init",
		"ambient::spin_fan",
		"ambient::clocks_init",
		"ambient::clock_run",
		"ambient::spin_anemometers",
		"ambient::spoon_spin_func",
		"ambient::arrow_spin_func",
		"_zm_weap_raygun_mark3::is_beam_raygun",
		"_zm_weap_raygun_mark3::monitor_raygun_mark3",
		"_zm_weap_raygun_mark3::glow_monitor",
		"_zm_weap_raygun_mark3::waittill_notetrack",
		"_zm_weap_raygun_mark3::slow_vortex_fx",
		"_zm_weap_raygun_mark3::ai_slow_vortex_fx",
		"_zm_weap_raygun_mark3::vortex_shake_and_rumble",
		"_zm_weap_raygun_mark3::zombie_blacken",
		"_zm_weap_raygun_mark3::ai_disintegrate",
		"zm_equip_gasmask::gasmask_overlay_handler",
		"destructible::playgrenaderumble",
		"destructible::doexplosion",
		"mirg2000::mirg2000_fire_button_held_sound",
		"mirg2000::mirg2000_charge_glow",
		"zm_trap_fire::trap_fx_monitor",
		"zm_trap_fire::fire_trap_fx",
		"zm_trap_fire::stop_trap_fx",
		"zm_ffotd::main_start",
		"zm_ffotd::main_end",
		"callback::set_default_callbacks",
		"callback::localclientconnect",
		"callback::playerspawned",
		"callback::entityspawned",
		"bgb::register",
		"zm_audio_zhd::setup_personality_character_exerts",
		"_zm_weap_one_inch_punch::init",
		"_zm_weap_one_inch_punch::oneinchpunch_impact",
		"_zm_weap_one_inch_punch::oneinchpunch_physics_launchragdoll",
		"zm_laststand::wait_and_set_revive_shader_constant",
		"zm_laststand::animation_update",
		"zm_laststand::update_bleedout_timer",
		"electroball_grenade::proximity_spawned",
		"electroball_grenade::watchforproximityexplosion",
		"electroball_grenade::electroball_play_landed_fx",
		"zm_weap_dragon_gauntlet::player_on_spawned",
		"zm_weap_dragon_gauntlet::watch_weapon_changes",
		"zm_perk_additionalprimaryweapon::enable_additional_primary_weapon_perk_for_level",
		"zm_perk_additionalprimaryweapon::init_additional_primary_weapon",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_client_field_func",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_code_callback_func",
		"zm_weap_thundergun::localplayer_spawned",
		"zm_weap_thundergun::watch_for_thunderguns",
		"zm_weap_thundergun::thundergun_fx_power_cell",
		"zm_weap_thundergun::thundergun_fx_fire",
		"zm_powerup_castle_tram_token::register_clientfields",
		"zodcompanionclientutils::play_revival_fx",
		"lightning_chain::init",
		"lightning_chain::lc_shock_fx",
		"lightning_chain::lc_play_death_fx",
		"zm_sidequests::register_sidequest_icon",
		"zm_perk_random::init_animtree",
		"zm_perk_random::turn_on_location_indicator",
		"zm_perk_random::lightning_bolt_fx_toggle",
		"zm_perk_random::zone_captured_cb",
		"zm_perk_random::turn_on_active_light_green",
		"zm_perk_random::turn_on_active_ball_light",
		"zm_perk_random::start_bottle_cycling",
		"zm_perk_random::start_vortex_fx",
		"zm_perk_random::stop_vortex_fx",
		"zm_perk_random::fx_artifact_pulse_thread",
		"zm_perk_random::fx_activation_electric_loop",
		"zm_perk_random::fx_bottle_cycling",
		"zm_aat_blast_furnace::zm_aat_blast_furnace_explosion",
		"zm_aat_blast_furnace::zm_aat_blast_furnace_explosion_vehicle",
		"zm_aat_blast_furnace::zm_aat_blast_furnace_explosion_think",
		"zm_aat_blast_furnace::zm_aat_blast_furnace_burn",
		"zm_aat_blast_furnace::zm_aat_blast_furnace_burn_vehicle",
		"zm_aat_blast_furnace::zm_aat_blast_furnace_burn_think",
		"zm_weap_quantum_bomb::quantum_bomb_notetrack_think",
		"zm_weap_quantum_bomb::quantum_bomb_spawned",
		"zm_ai_napalm::init_clientfields",
		"zm_ai_napalm::init_napalm_zombie",
		"zm_ai_napalm::napalm_fx",
		"zm_ai_napalm::napalm_zombie_spawn",
		"zm_ai_napalm::_napalm_zombie_runsteameffects",
		"zm_ai_napalm::_napalm_zombie_runeffects",
		"zm_ai_napalm::napalm_zombie_explode_callback",
		"zm_ai_napalm::_zombie_runexplosionwindupeffects",
		"zm_ai_napalm::_napalm_zombie_runweteffects",
		"zm_ai_napalm::set_footstep_override_for_napalm_zombie",
		"zm_ai_napalm::player_napalm_radius_overlay_fade",
		"zm_ai_napalm::player_can_see_napalm",
		"zm_ai_napalm::napalm_zombie_wet_callback",
		"zm_ai_napalm::napalm_start_wet_fx",
		"zm_ai_napalm::napalm_end_wet_fx",
		"zm_ai_napalm::napalm_set_glow",
		"zm_ai_napalm::napalm_glow_normal",
		"zm_ai_napalm::napalm_glow_explode",
		"zm_ai_napalm::napalm_glow_wet",
		"zm_ai_napalm::napalm_glow_lerp",
		"zm_weap_glaive::do_swipe_fx",
		"zm_weap_glaive::do_slam_fx",
		"zm_weap_glaive::do_gravity_spike_fx",
		"zm_weap_glaive::getideallocationforfx",
		"zm_weap_glaive::randomizelocation",
		"zm_weap_glaive::ground_trace",
		"namespace_48e69557::set_rocketshield_ammo",
		"keeper_skull::zombie_explode_fx",
		"keeper_skull::death_ray_shock_eye_fx",
		"keeper_skull::thrasher_skull_fire",
		"multi_extracam::extracam_reset_index",
		"multi_extracam::extracam_init_index",
		"multi_extracam::extracam_init_item",
		"struct::init_structs",
		"struct::remove_unneeded_kvps",
		"struct::createstruct",
		"struct::init",
		"struct::get",
		"struct::spawn",
		"struct::get_array",
		"struct::delete",
		"struct::get_script_bundle",
		"struct::delete_script_bundle",
		"struct::get_script_bundles_of_type",
		"struct::get_script_bundles",
		"struct::get_script_bundle_list",
		"struct::get_script_bundle_instances",
		"struct::findstruct",
		"delete::main",
		"duplicate_render_bundle::localplayer_duplicate_render_bundle_init",
		"duplicate_render_bundle::init_duplicate_render_bundles",
		"duplicate_render_bundle::duprenderbundledebuglisten",
		"duplicate_render_bundle::playduprenderbundle",
		"duplicate_render_bundle::adddupmaterial",
		"duplicate_render_bundle::setshaderconstants",
		"duplicate_render_bundle::finishplayingduprenderbundle",
		"duplicate_render_bundle::stopplayingduprenderbundle",
		"duplicate_render_bundle::stopduprenderbundle",
		"duplicate_render_bundle::exitduprenderbundle",
		"water_surface::localplayer_spawned",
		"water_surface::underwaterwatchbegin",
		"water_surface::underwaterwatchend",
		"water_surface::underwaterbegin",
		"water_surface::underwaterend",
		"water_surface::startwaterdive",
		"water_surface::startwatersheeting",
		"water_surface::stop_player_fx",
		"scene::player_scene_animation_skip",
		"scene::player_scene_skip_completed",
		"csceneobject::__constructor",
		"csceneobject::__destructor",
		"csceneobject::first_init",
		"csceneobject::initialize",
		"csceneobject::initialize_per_client",
		"csceneobject::play",
		"csceneobject::play_per_client",
		"csceneobject::finish",
		"csceneobject::finish_per_client",
		"csceneobject::get_align_ent",
		"csceneobject::scene",
		"csceneobject::_assign_unique_name",
		"csceneobject::get_name",
		"csceneobject::get_orig_name",
		"csceneobject::_spawn",
		"csceneobject::_prepare",
		"cscene::__constructor",
		"cscene::__destructor",
		"cscene::init",
		"cscene::get_valid_object_defs",
		"cscene::initialize",
		"cscene::get_object_id",
		"cscene::play",
		"cscene::run_next",
		"cscene::stop",
		"cscene::has_init_state",
		"cscene::_call_state_funcs",
		"cscene::get_ents",
		"cscene::get_root",
		"cscene::get_align_ent",
		"cscene::allows_multiple",
		"scene::get_existing_ent",
		"scene::postfx_igc",
		"scene::postfx_igc_zombies",
		"scene::postfx_igc_short",
		"scene::cf_server_sync",
		"scene::remove_invalid_scene_objects",
		"scene::is_igc",
		"scene::_trigger_init",
		"scene::_trigger_play",
		"scene::_trigger_stop",
		"scene::add_scene_func",
		"scene::remove_scene_func",
		"scene::spawn",
		"scene::init",
		"scene::get_scenedef",
		"scene::get_scenedefs",
		"scene::_init_instance",
		"scene::stop",
		"scene::_stop_instance",
		"scene::cancel",
		"scene::has_init_state",
		"scene::_has_init_state",
		"scene::get_prop_count",
		"scene::get_vehicle_count",
		"scene::get_actor_count",
		"scene::get_player_count",
		"scene::_get_type_count",
		"scene::is_active",
		"scene::is_playing",
		"scene::get_active_scenes",
		"scene::get_active_scene",
		"scene::is_capture_mode",
		"turret::field_toggle_lensflare",
		"exploder::player_init",
		"exploder::getexploderid",
		"exploder::reportexploderids",
		"exploder::exploder",
		"exploder::activate_exploder",
		"exploder::activate_individual_exploder",
		"exploder::activate_radiant_exploder",
		"exploder::stop_exploder",
		"exploder::kill_exploder",
		"exploder::exploder_delay",
		"exploder::exploder_playsound",
		"exploder::exploder_earthquake",
		"exploder::exploder_is_lightning_exploder",
		"exploder::stoplightloopexploder",
		"exploder::playlightloopexploder",
		"exploder::createexploder",
		"exploder::cannon_effect",
		"exploder::fire_effect",
		"exploder::playexploderfx",
		"exploder::stop_after_duration",
		"exploder::exploder_duration",
		"music::musiccmdhandler",
		"footsteps::checksurfacetypeiscorrect",
		"footsteps::playerjump",
		"footsteps::playerland",
		"footsteps::playerfoliage",
		"footsteps::buildandcachesoundalias",
		"footsteps::do_foot_effect",
		"footsteps::missing_ai_footstep_callback",
		"footsteps::playaifootstep",
		"math::clamp",
		"math::linear_map",
		"math::lag",
		"math::array_average",
		"math::array_std_deviation",
		"math::vector_compare",
		"math::random_vector",
		"math::angle_dif",
		"math::sign",
		"math::cointoss",
		"duplicate_render::on_player_spawned",
		"duplicate_render::on_player_connect",
		"duplicate_render::wait_team_changed",
		"duplicate_render::set_dr_filter",
		"duplicate_render::set_dr_filter_framebuffer",
		"duplicate_render::set_dr_filter_framebuffer_duplicate",
		"duplicate_render::set_dr_filter_offscreen",
		"duplicate_render::register_filter_materials",
		"duplicate_render::update_dr_flag",
		"duplicate_render::set_dr_flag_not_array",
		"duplicate_render::set_dr_flag",
		"duplicate_render::clear_dr_flag",
		"duplicate_render::change_dr_flags",
		"duplicate_render::_update_dr_filters",
		"duplicate_render::update_dr_filters",
		"duplicate_render::find_dr_filter",
		"duplicate_render::can_use_filter",
		"duplicate_render::apply_filter",
		"duplicate_render::disable_all_filters_on_game_ended",
		"duplicate_render::set_item_retrievable",
		"duplicate_render::set_item_unplaceable",
		"duplicate_render::set_item_enemy_equipment",
		"duplicate_render::set_item_friendly_equipment",
		"duplicate_render::set_item_enemy_explosive",
		"duplicate_render::set_item_friendly_explosive",
		"duplicate_render::set_item_enemy_vehicle",
		"duplicate_render::set_item_friendly_vehicle",
		"duplicate_render::set_entity_thermal",
		"duplicate_render::set_player_threat_detected",
		"duplicate_render::set_hacker_tool_hacked",
		"duplicate_render::set_hacker_tool_hacking",
		"duplicate_render::set_hacker_tool_breaching",
		"duplicate_render::show_friendly_outlines",
		"scene::run_scene_tests",
		"scene::clear_old_ents",
		"scene::toggle_scene_menu",
		"scene::create_scene_hud",
		"scene::display_scene_menu",
		"scene::display_mode",
		"scene::scene_list_menu",
		"scene::scene_list_settext",
		"scene::is_scene_playing",
		"scene::is_scene_initialized",
		"scene::scene_menu_cleanup",
		"scene::test_init",
		"scene::test_play",
		"scene::debug_display",
		"array::filter",
		"array::remove_undefined",
		"array::get_touching",
		"array::remove_index",
		"array::delete_all",
		"array::notify_all",
		"array::thread_all",
		"array::thread_all_ents",
		"array::run_all",
		"array::exclude",
		"array::add",
		"array::add_sorted",
		"array::wait_till",
		"array::flag_wait",
		"array::flagsys_wait",
		"array::flagsys_wait_any_flag",
		"array::flag_wait_clear",
		"array::flagsys_wait_clear",
		"array::wait_any",
		"array::_waitlogic2",
		"array::flag_wait_any",
		"array::random",
		"array::randomize",
		"array::reverse",
		"array::remove_keys",
		"array::swap",
		"array::pop",
		"array::pop_front",
		"array::push",
		"array::push_front",
		"array::get_closest",
		"array::get_farthest",
		"array::closerfunc",
		"array::fartherfunc",
		"array::get_all_farthest",
		"array::get_all_closest",
		"array::alphabetize",
		"array::sort_by_value",
		"array::_sort_by_value_compare_func",
		"array::sort_by_script_int",
		"array::_sort_by_script_int_compare_func",
		"array::merge_sort",
		"array::merge",
		"array::spread_all",
		"audio::register_clientfields",
		"audio::local_player_spawn",
		"audio::player_init",
		"audio::snddoublejump_watcher",
		"audio::clientvoicesetup",
		"audio::sndvonotify",
		"audio::snd_snapshot_init",
		"audio::sndonwait",
		"audio::snd_set_snapshot",
		"audio::snd_snapshot_think",
		"audio::soundrandom_thread",
		"audio::soundrandom_notifywait",
		"audio::startsoundrandoms",
		"audio::soundloopthink",
		"audio::soundloopcheckpointrestore",
		"audio::soundlinethink",
		"audio::soundlinecheckpointrestore",
		"audio::startsoundloops",
		"audio::startlineemitters",
		"audio::startrattles",
		"audio::init_audio_triggers",
		"audio::audio_step_trigger",
		"audio::audio_material_trigger",
		"audio::trig_enter_audio_material_trigger",
		"audio::trig_leave_audio_material_trigger",
		"audio::trig_enter_audio_step_trigger",
		"audio::trig_leave_audio_step_trigger",
		"audio::bump_trigger_start",
		"audio::thread_bump_trigger",
		"audio::trig_enter_bump",
		"audio::mantle_wait",
		"audio::trig_leave_bump",
		"audio::bump_trigger_listener",
		"audio::scale_speed",
		"audio::get_vol_from_speed",
		"audio::absolute_value",
		"audio::closest_point_on_line_to_point",
		"audio::snd_play_auto_fx",
		"audio::snd_print_fx_id",
		"audio::debug_line_emitter",
		"audio::move_sound_along_line",
		"audio::playloopat",
		"audio::stoploopat",
		"audio::soundwait",
		"audio::snd_underwater",
		"audio::underwaterbegin",
		"audio::underwaterend",
		"audio::setpfxcontext",
		"audio::swimbegin",
		"audio::swimend",
		"audio::swimcancel",
		"audio::soundplayuidecodeloop",
		"audio::setcurrentambientstate",
		"audio::isplayerinfected",
		"audio::sndhealthsystem",
		"audio::snddnirepair",
		"audio::sndtacrig",
		"audio::dorattle",
		"audio::sndrattle_server",
		"audio::sndrattle_grenade_client",
		"audio::weapon_butt_sounds",
		"audio::set_sound_context_defaults",
		"audio::sndmatchsnapshot",
		"audio::sndfoleycontext",
		"audio::sndkillcam",
		"audio::snddeath_activate",
		"audio::snddeath_deactivate",
		"audio::sndfinalkillcam_activate",
		"audio::sndfinalkillcam_slowdown",
		"audio::sndfinalkillcam_deactivate",
		"audio::sndswitchvehiclecontext",
		"audio::sndmusicdeathwatcher",
		"audio::sndcchacking",
		"audio::sndigcsnapshot",
		"audio::sndlevelstartsnapoff",
		"audio::sndzmbfadein",
		"audio::sndchyronloop",
		"util::empty",
		"util::waitforallclients",
		"util::waitforclient",
		"util::get_dvar_float_default",
		"util::get_dvar_int_default",
		"util::spawn_model",
		"util::waittill_string",
		"util::waittill_multiple",
		"util::waittill_multiple_ents",
		"util::_waitlogic",
		"util::waittill_any_return",
		"util::waittill_any_ex",
		"util::waittill_any_array_return",
		"util::waittill_any",
		"util::waittill_any_array",
		"util::waittill_any_timeout",
		"util::_timeout",
		"util::waittill_notify_or_timeout",
		"util::waittill_any_ents",
		"util::waittill_any_ents_two",
		"util::single_func",
		"util::new_func",
		"util::call_func",
		"util::array_ent_thread",
		"util::single_thread",
		"util::add_listen_thread",
		"util::timeout",
		"util::delay",
		"util::_delay",
		"util::delay_notify",
		"util::_delay_notify",
		"util::new_timer",
		"util::get_time",
		"util::get_time_in_seconds",
		"util::get_time_frac",
		"util::get_time_left",
		"util::is_time_left",
		"util::timer_wait",
		"util::add_remove_list",
		"util::clean_deleted",
		"util::get_eye",
		"util::spawn_player_arms",
		"util::lerp_dvar",
		"util::is_valid_type_for_callback",
		"util::wait_till_not_touching",
		"util::error",
		"util::register_system",
		"util::field_set_lighting_ent",
		"util::field_use_lighting_ent",
		"util::waittill_dobj",
		"util::server_wait",
		"util::friend_not_foe",
		"util::friend_not_foe_team",
		"util::isenemyplayer",
		"util::is_player_view_linked_to_entity",
		"util::init_utility",
		"util::within_fov",
		"util::is_mature",
		"util::is_gib_restricted_build",
		"util::registersystem",
		"util::getstatstablename",
		"util::add_trigger_to_ent",
		"util::remove_trigger_from_ent",
		"util::ent_already_in_trigger",
		"util::trigger_thread",
		"util::local_player_trigger_thread_always_exit",
		"util::local_player_entity_thread",
		"util::local_players_entity_thread",
		"util::debug_line",
		"util::debug_star",
		"util::servertime",
		"util::getnextobjid",
		"util::releaseobjid",
		"util::get_next_safehouse",
		"util::is_safehouse",
		"util::button_held_think",
		"util::init_button_wrappers",
		"util::up_button_held",
		"util::down_button_held",
		"util::up_button_pressed",
		"util::waittill_up_button_pressed",
		"util::down_button_pressed",
		"util::waittill_down_button_pressed",
		"hackable::init",
		"hackable::on_player_connect",
		"hackable::set_hacked_ent",
		"player::gameplay_started_callback",
		"postfx::localplayer_postfx_bundle_init",
		"postfx::init_postfx_bundles",
		"postfx::postfxbundledebuglisten",
		"postfx::playpostfxbundle",
		"postfx::watchentityshutdown",
		"postfx::setfilterconstants",
		"postfx::finishplayingpostfxbundle",
		"postfx::stopplayingpostfxbundle",
		"postfx::stoppostfxbundle",
		"postfx::exitpostfxbundle",
		"postfx::setfrontendstreamingoverlay",
		"fx::player_init",
		"fx::validate",
		"fx::create_loop_sound",
		"fx::create_effect",
		"fx::create_oneshot_effect",
		"fx::create_loop_effect",
		"fx::set_forward_and_up_vectors",
		"fx::oneshot_thread",
		"fx::report_num_effects",
		"fx::loop_sound",
		"fx::lightning",
		"fx::loop_thread",
		"fx::loop_stop",
		"fx::create_looper",
		"fx::loop",
		"fx::create_trigger",
		"fx::blinky_light",
		"fx::stop_blinky_light",
		"fx::blinky_emp_wait",
		"lightninggun::init_shared",
		"spike_charge_siegebot::spawned",
		"spike_charge_siegebot::fx_think",
		"spike_charge_siegebot::start_light_fx",
		"spike_charge_siegebot::stop_light_fx",
		"satchel_charge::init_shared",
		"satchel_charge::satchel_spawned",
		"decoy::init_shared",
		"decoy::spawned",
		"decoy::watch_for_fake_fire",
		"decoy::level_watch_for_fake_fire",
		"antipersonnel_guidance::player_init",
		"antipersonnel_guidance::watch_lockon",
		"bouncingbetty::init_shared",
		"bouncingbetty::bouncingbetty_state_change",
		"bouncingbetty::bouncingbetty_deploying",
		"bouncingbetty::bouncingbetty_detonating",
		"bouncingbetty::watchforexplosionnotetracks",
		"replay_gun::player_init",
		"replay_gun::watch_lockon",
		"weaponobjects::init_shared",
		"weaponobjects::on_localplayer_spawned",
		"weaponobjects::watch_killstreak_tap_activation",
		"weaponobjects::proximity_alarm_changed",
		"weaponobjects::update_sound",
		"weaponobjects::teamequip_changed",
		"weaponobjects::updateteamequipment",
		"weaponobjects::retrievable_changed",
		"weaponobjects::updateretrievable",
		"weaponobjects::enemyequip_changed",
		"weaponobjects::updateenemyequipment",
		"weaponobjects::equipmentdr",
		"weaponobjects::watch_perks_changed",
		"weaponobjects::checkteamequipment",
		"weaponobjects::equipmentteamobject",
		"weaponobjects::playflarefx",
		"weaponobjects::equipmentwatchteamfx",
		"weaponobjects::equipmentwatchplayerteamchanged",
		"weaponobjects::sndproxalert_entcleanup",
		"sticky_grenade::spawned",
		"sticky_grenade::stop_sound_on_ent_shutdown",
		"sticky_grenade::fx_think",
		"sticky_grenade::start_light_fx",
		"sticky_grenade::stop_light_fx",
		"sticky_grenade::sticky_indicator",
		"sticky_grenade::stick_indicator_watch_early_shutdown",
		"sticky_grenade::fullscreen_fx",
		"tacticalinsertion::init_shared",
		"tacticalinsertion::spawned",
		"tacticalinsertion::playflarefx",
		"tacticalinsertion::watchtacinsertshutdown",
		"tacticalinsertion::stopflareloopwatcher",
		"tacticalinsertion::checkforplayerswitch",
		"sticky_grenade::spawned_spike_charge",
		"sticky_grenade::spike_detonation",
		"flashgrenades::init_shared",
		"acousticsensor::init_shared",
		"acousticsensor::on_player_connect",
		"acousticsensor::addacousticsensor",
		"acousticsensor::removeacousticsensor",
		"acousticsensor::spawned",
		"acousticsensor::spawnedperclient",
		"acousticsensor::watchshutdown",
		"acousticsensor::updateacousticsensors",
		"trophy_system::init_shared",
		"trophy_system::trophy_state_change",
		"trophy_system::trophy_state_change_recon",
		"trophy_system::trophy_rolling_anim",
		"trophy_system::trophy_stationary_anim",
		"proximity_grenade::init_shared",
		"proximity_grenade::proximity_spawned",
		"proximity_grenade::watchforproximityexplosion",
		"hacker_tool::init_shared",
		"hacker_tool::on_localplayer_spawned",
		"hacker_tool::player_hacking",
		"hacker_tool::watchhackspeed",
		"hacker_tool::watchtargethack",
		"hacker_tool::watchhackerplayershutdown",
		"hacker_tool::watchforemp",
		"riotshield::init_shared",
		"riotshield::shield_state_change",
		"riotshield::riotshield_deploy_anim",
		"riotshield::watch_riotshield_damage",
		"riotshield::riotshield_destroy_anim",
		"hive_gun::init_shared",
		"hive_gun::register",
		"hive_gun::getotherteam",
		"hive_gun::fireflies_attacking",
		"hive_gun::fireflies_chasing",
		"hive_gun::watch_player_fx_finished",
		"hive_gun::firefly_state_change",
		"hive_gun::on_shutdown",
		"hive_gun::firefly_init",
		"hive_gun::firefly_deploying",
		"hive_gun::firefly_hunting",
		"hive_gun::firefly_watch_fx_finished",
		"hive_gun::firefly_attacking",
		"hive_gun::firefly_link_attacking",
		"hive_gun::gib_fx",
		"hive_gun::gib_corpse",
		"hive_gun::watch_for_gib_notetracks",
		"scrambler::init_shared",
		"scrambler::spawnedscrambler",
		"scrambler::spawnedglobalscramber",
		"scrambler::spawned",
		"scrambler::spawnedperclient",
		"scrambler::scramblerupdate",
		"scrambler::cleanupscramblerondelete",
		"scrambler::isenemyscrambler",
		"scrambler::checkforplayerswitch",
		"scrambler::restartsound",
		"empgrenade::onempchanged",
		"empgrenade::startempeffects",
		"empgrenade::stopempeffects",
		"empgrenade::on_player_spawned",
		"empgrenade::onempmonitordistancechanged",
		"empgrenade::monitordistance",
		"flagsys::set",
		"flagsys::set_for_time",
		"flagsys::clear",
		"flagsys::set_val",
		"flagsys::toggle",
		"flagsys::get",
		"flagsys::wait_till",
		"flagsys::wait_till_timeout",
		"flagsys::wait_till_all",
		"flagsys::wait_till_all_timeout",
		"flagsys::wait_till_any",
		"flagsys::wait_till_any_timeout",
		"flagsys::wait_till_clear",
		"flagsys::wait_till_clear_timeout",
		"flagsys::wait_till_clear_all",
		"flagsys::wait_till_clear_all_timeout",
		"flagsys::wait_till_clear_any",
		"flagsys::wait_till_clear_any_timeout",
		"flagsys::delete",
		"vehicle::play_vehicle_anim",
		"vehicle::set_vehicleriders_bundle",
		"gadget_camo_render::forceon",
		"gadget_camo_render::doreveal",
		"_gadget_resurrect::player_resurrect_changed",
		"_gadget_resurrect::resurrect_down_fx",
		"_gadget_resurrect::resurrect_up_fx",
		"_gadget_resurrect::player_resurrect_state_changed",
		"_gadget_flashback::flashback_activated",
		"_gadget_flashback::set_flashback_trail_fx",
		"_gadget_flashback::clone_flashback_changed",
		"_gadget_flashback::clone_fade",
		"gadget_clone_render::transition_shader",
		"_gadget_cleanse::has_cleanse_changed",
		"gadget_roulette::roulette_clientfield_cb",
		"gadget_roulette::update_roulette",
		"gadget_roulette::on_localplayer_spawned",
		"_gadget_heat_wave::updatedvars",
		"_gadget_heat_wave::update_activate",
		"_gadget_heat_wave::update_victim",
		"_gadget_heat_wave::set_heatwave_fx",
		"_gadget_heat_wave::clear_heat_wave_fx",
		"_gadget_heat_wave::aoe_fx",
		"_gadget_heat_wave::do_fx",
		"_gadget_es_strike::on_player_spawned",
		"_gadget_clone::set_shader",
		"_gadget_clone::clone_activated",
		"_gadget_clone::player_clone_activated",
		"_gadget_clone::clone_damage_flicker",
		"_gadget_clone::clone_damage_finish",
		"_gadget_clone::clone_damaged",
		"_gadget_armor::on_local_player_spawned",
		"_gadget_armor::player_damage_type_changed",
		"_gadget_armor::player_armor_changed",
		"_gadget_armor::player_armor_changed_event",
		"_gadget_armor::armor_update_shader_event",
		"_gadget_armor::armor_get_shader_color",
		"_gadget_armor::armor_update_fx_event",
		"_gadget_armor::armor_overlay_transition_fx",
		"_gadget_armor::armor_is_local_player",
		"_gadget_armor::armor_overlay_think",
		"_gadget_unstoppable_force::on_localplayer_shutdown",
		"_gadget_unstoppable_force::player_unstoppableforce_handler",
		"_gadget_unstoppable_force::activation_flash",
		"_gadget_unstoppable_force::enable_boost_camera_fx",
		"_gadget_unstoppable_force::stop_boost_camera_fx",
		"_gadget_unstoppable_force::boost_fx_interrupt_handler",
		"_gadget_unstoppable_force::boost_fx_on_velocity",
		"_gadget_overdrive::on_localplayer_shutdown",
		"_gadget_overdrive::on_localplayer_spawned",
		"_gadget_overdrive::on_player_connect",
		"_gadget_overdrive::player_overdrive_handler",
		"_gadget_overdrive::activation_flash",
		"_gadget_overdrive::enable_boost_camera_fx",
		"_gadget_overdrive::watch_stop_player_fx",
		"_gadget_overdrive::stop_boost_camera_fx",
		"_gadget_overdrive::overdrive_boost_fx_interrupt_handler",
		"_gadget_overdrive::overdrive_shutdown",
		"_gadget_overdrive::boost_fx_on_velocity",
		"gadget_vision_pulse::on_localplayer_spawned",
		"gadget_vision_pulse::watch_emped",
		"gadget_vision_pulse::disableshader",
		"gadget_vision_pulse::watch_world_pulse_end",
		"gadget_vision_pulse::do_vision_world_pulse",
		"gadget_vision_pulse::vision_pulse_owner_valid",
		"gadget_vision_pulse::watch_vision_pulse_owner_death",
		"gadget_vision_pulse::do_vision_local_pulse",
		"gadget_vision_pulse::vision_pulse_changed",
		"gadget_vision_pulse::do_reveal_enemy_pulse",
		"gadget_vision_pulse::set_reveal_enemy",
		"gadget_vision_pulse::set_reveal_self",
		"gadget_vision_pulse::gadget_visionpulse_reveal",
		"_gadget_shock_field::is_local_player",
		"_gadget_shock_field::player_shock_changed",
		"gadget_thief::thief_clientfield_cb",
		"gadget_thief::thief_ui_model_clientfield_cb",
		"gadget_thief::thief_weapon_option_ui_model_clientfield_cb",
		"gadget_thief::update_thief",
		"gadget_thief::update_thief_weapon",
		"gadget_thief::on_localplayer_spawned",
		"_gadget_speed_burst::on_localplayer_spawned",
		"_gadget_speed_burst::player_speed_changed",
		"_gadget_camo::ent_camo_material_callback",
		"burnplayer::loadeffects",
		"burnplayer::on_local_client_connect",
		"burnplayer::on_localplayer_spawned",
		"vehicle::add_vehicletype_callback",
		"vehicle::spawned_callback",
		"vehicle::rumble",
		"vehicle::kill_treads_forever",
		"vehicle::play_exhaust",
		"vehicle::kill_exhaust_watcher",
		"vehicle::stop_exhaust",
		"vehicle::aircraft_dustkick",
		"vehicle::weapon_fired",
		"vehicle::wait_for_dobj",
		"vehicle::lights_on",
		"vehicle::addanimtolist",
		"vehicle::ambient_anim_toggle",
		"vehicle::field_toggle_ambient_anim_handler1",
		"vehicle::field_toggle_ambient_anim_handler2",
		"vehicle::field_toggle_ambient_anim_handler3",
		"vehicle::field_toggle_ambient_anim_handler4",
		"vehicle::lights_group_toggle",
		"vehicle::field_toggle_lights_group_handler1",
		"vehicle::field_toggle_lights_group_handler2",
		"vehicle::field_toggle_lights_group_handler3",
		"vehicle::field_toggle_lights_group_handler4",
		"vehicle::delete_alert_lights",
		"vehicle::lights_off",
		"vehicle::field_toggle_emp",
		"vehicle::field_toggle_burn",
		"vehicle::toggle_fx_bundle",
		"vehicle::delayed_fx_thread",
		"vehicle::field_toggle_sounds",
		"vehicle::field_toggle_dnidamagefx",
		"vehicle::toggle_flir_postfxbundle",
		"vehicle::shouldchangescreenpostfx",
		"vehicle::set_static_postfxbundle",
		"vehicle::update_ui_fullscreen_filter_model",
		"vehicle::field_toggle_treadfx",
		"vehicle::field_use_engine_damage_sounds",
		"vehicle::field_do_deathfx",
		"vehicle::field_do_standarddeathfx",
		"vehicle::field_do_empdeathfx",
		"vehicle::field_update_alert_level",
		"vehicle::field_toggle_exhaustfx_handler",
		"vehicle::control_lights_groups",
		"vehicle::field_toggle_lights_handler",
		"vehicle::field_toggle_lockon_handler",
		"vehicle::addfxandtagtolists",
		"vehicle::field_update_damage_state",
		"vehicle::field_death_spawn_dynents",
		"vehicle::field_gib_spawn_dynents",
		"vehicle::init_damage_filter",
		"vehicle::damage_filter_enable",
		"vehicle::damage_filter_disable",
		"vehicle::damage_filter_off",
		"vehicle::damage_filter_light",
		"vehicle::damage_filter_heavy",
		"oob::on_localplayer_connect",
		"oob::on_localplayer_spawned",
		"oob::on_localplayer_shutdown",
		"oob::onoutofboundschange",
		"oob::stopoutofboundseffects",
		"oob::getoobuimodel",
		"sound::loop_fx_sound",
		"sound::play_in_space",
		"sound::loop_delete",
		"sound::play_on_client",
		"sound::loop_on_client",
		"lui::on_player_connect",
		"lui::initmenudata",
		"lui::createextracamxcamdata",
		"lui::createcustomextracamxcamdata",
		"lui::addmenuexploders",
		"lui::linktocustomcharacter",
		"lui::getcharacterdataformenu",
		"lui::createcameramenu",
		"lui::createcustomcameramenu",
		"lui::setup_menu",
		"lui::client_menus",
		"lui::screen_fade",
		"lui::set_color",
		"filter::init_filter_indices",
		"filter::map_material_helper_by_localclientnum",
		"filter::map_material_if_undefined",
		"filter::map_material_helper",
		"filter::mapped_material_id",
		"filter::init_filter_binoculars",
		"filter::enable_filter_binoculars",
		"filter::disable_filter_binoculars",
		"filter::init_filter_binoculars_with_outline",
		"filter::enable_filter_binoculars_with_outline",
		"filter::disable_filter_binoculars_with_outline",
		"filter::init_filter_hazmat",
		"filter::set_filter_hazmat_opacity",
		"filter::enable_filter_hazmat",
		"filter::disable_filter_hazmat",
		"filter::init_filter_helmet",
		"filter::enable_filter_helmet",
		"filter::disable_filter_helmet",
		"filter::init_filter_tacticalmask",
		"filter::enable_filter_tacticalmask",
		"filter::disable_filter_tacticalmask",
		"filter::init_filter_hud_projected_grid",
		"filter::init_filter_hud_projected_grid_haiti",
		"filter::set_filter_hud_projected_grid_position",
		"filter::set_filter_hud_projected_grid_radius",
		"filter::enable_filter_hud_projected_grid",
		"filter::enable_filter_hud_projected_grid_haiti",
		"filter::disable_filter_hud_projected_grid",
		"filter::init_filter_emp",
		"filter::set_filter_emp_amount",
		"filter::enable_filter_emp",
		"filter::disable_filter_emp",
		"filter::init_filter_raindrops",
		"filter::set_filter_raindrops_amount",
		"filter::enable_filter_raindrops",
		"filter::disable_filter_raindrops",
		"filter::init_filter_squirrel_raindrops",
		"filter::set_filter_squirrel_raindrops_amount",
		"filter::enable_filter_squirrel_raindrops",
		"filter::disable_filter_squirrel_raindrops",
		"filter::init_filter_radialblur",
		"filter::set_filter_radialblur_amount",
		"filter::enable_filter_radialblur",
		"filter::disable_filter_radialblur",
		"filter::init_filter_vehicle_damage",
		"filter::set_filter_vehicle_damage_amount",
		"filter::set_filter_vehicle_sun_position",
		"filter::enable_filter_vehicle_damage",
		"filter::disable_filter_vehicle_damage",
		"filter::init_filter_oob",
		"filter::enable_filter_oob",
		"filter::disable_filter_oob",
		"filter::init_filter_tactical",
		"filter::enable_filter_tactical",
		"filter::set_filter_tactical_amount",
		"filter::disable_filter_tactical",
		"filter::init_filter_water_sheeting",
		"filter::enable_filter_water_sheeting",
		"filter::set_filter_water_sheet_reveal",
		"filter::set_filter_water_sheet_speed",
		"filter::set_filter_water_sheet_rivulet_reveal",
		"filter::disable_filter_water_sheeting",
		"filter::init_filter_water_dive",
		"filter::enable_filter_water_dive",
		"filter::disable_filter_water_dive",
		"filter::set_filter_water_dive_bubbles",
		"filter::set_filter_water_scuba_bubbles",
		"filter::set_filter_water_scuba_dive_speed",
		"filter::set_filter_water_scuba_bubble_attitude",
		"filter::set_filter_water_wash_reveal_dir",
		"filter::set_filter_water_wash_color",
		"filter::init_filter_teleportation",
		"filter::enable_filter_teleportation",
		"filter::set_filter_teleportation_anus_zoom",
		"filter::set_filter_teleportation_anus_amount",
		"filter::set_filter_teleportation_panther_zoom",
		"filter::set_filter_teleportation_panther_amount",
		"filter::set_filter_teleportation_glow_radius",
		"filter::set_filter_teleportation_warp_amount",
		"filter::set_filter_teleportation_warp_direction",
		"filter::set_filter_teleportation_lightning_reveal",
		"filter::set_filter_teleportation_faces_amount",
		"filter::set_filter_teleportation_space_background",
		"filter::set_filter_teleportation_sparkle_amount",
		"filter::disable_filter_teleportation",
		"filter::settransported",
		"filter::init_filter_ev_interference",
		"filter::enable_filter_ev_interference",
		"filter::set_filter_ev_interference_amount",
		"filter::disable_filter_ev_interference",
		"filter::init_filter_vehiclehijack",
		"filter::enable_filter_vehiclehijack",
		"filter::disable_filter_vehiclehijack",
		"filter::set_filter_ev_vehiclehijack_amount",
		"filter::init_filter_vehicle_hijack_oor",
		"filter::enable_filter_vehicle_hijack_oor",
		"filter::set_filter_vehicle_hijack_oor_noblack",
		"filter::set_filter_vehicle_hijack_oor_amount",
		"filter::disable_filter_vehicle_hijack_oor",
		"filter::init_filter_speed_burst",
		"filter::enable_filter_speed_burst",
		"filter::set_filter_speed_burst",
		"filter::disable_filter_speed_burst",
		"filter::init_filter_overdrive",
		"filter::enable_filter_overdrive",
		"filter::set_filter_overdrive",
		"filter::disable_filter_overdrive",
		"filter::init_filter_frost",
		"filter::enable_filter_frost",
		"filter::set_filter_frost_layer_one",
		"filter::set_filter_frost_layer_two",
		"filter::set_filter_frost_reveal_direction",
		"filter::disable_filter_frost",
		"filter::init_filter_vision_pulse",
		"filter::enable_filter_vision_pulse",
		"filter::set_filter_vision_pulse_constant",
		"filter::disable_filter_vision_pulse",
		"filter::init_filter_sprite_transition",
		"filter::enable_filter_sprite_transition",
		"filter::set_filter_sprite_transition_octogons",
		"filter::set_filter_sprite_transition_blur",
		"filter::set_filter_sprite_transition_boost",
		"filter::set_filter_sprite_transition_move_radii",
		"filter::set_filter_sprite_transition_elapsed",
		"filter::disable_filter_sprite_transition",
		"filter::init_filter_frame_transition",
		"filter::enable_filter_frame_transition",
		"filter::set_filter_frame_transition_heavy_hexagons",
		"filter::set_filter_frame_transition_light_hexagons",
		"filter::set_filter_frame_transition_flare",
		"filter::set_filter_frame_transition_blur",
		"filter::set_filter_frame_transition_iris",
		"filter::set_filter_frame_transition_saved_frame_reveal",
		"filter::set_filter_frame_transition_warp",
		"filter::disable_filter_frame_transition",
		"filter::init_filter_base_frame_transition",
		"filter::enable_filter_base_frame_transition",
		"filter::set_filter_base_frame_transition_warp",
		"filter::set_filter_base_frame_transition_boost",
		"filter::set_filter_base_frame_transition_durden",
		"filter::set_filter_base_frame_transition_durden_blur",
		"filter::disable_filter_base_frame_transition",
		"filter::init_filter_sprite_blood",
		"filter::enable_filter_sprite_blood",
		"filter::init_filter_sprite_blood_heavy",
		"filter::enable_filter_sprite_blood_heavy",
		"filter::set_filter_sprite_blood_opacity",
		"filter::set_filter_sprite_blood_seed_offset",
		"filter::set_filter_sprite_blood_elapsed",
		"filter::disable_filter_sprite_blood",
		"filter::init_filter_feedback_blood",
		"filter::enable_filter_feedback_blood",
		"filter::set_filter_feedback_blood_opacity",
		"filter::set_filter_feedback_blood_sundir",
		"filter::set_filter_feedback_blood_vignette",
		"filter::set_filter_feedback_blood_drowning",
		"filter::disable_filter_feedback_blood",
		"filter::init_filter_sprite_rain",
		"filter::enable_filter_sprite_rain",
		"filter::set_filter_sprite_rain_opacity",
		"filter::set_filter_sprite_rain_seed_offset",
		"filter::set_filter_sprite_rain_elapsed",
		"filter::disable_filter_sprite_rain",
		"filter::init_filter_sgen_sprite_rain",
		"filter::enable_filter_sgen_sprite_rain",
		"filter::init_filter_sprite_dirt",
		"filter::enable_filter_sprite_dirt",
		"filter::set_filter_sprite_dirt_opacity",
		"filter::set_filter_sprite_dirt_source_position",
		"filter::set_filter_sprite_dirt_sun_position",
		"filter::set_filter_sprite_dirt_seed_offset",
		"filter::set_filter_sprite_dirt_elapsed",
		"filter::disable_filter_sprite_dirt",
		"filter::init_filter_blood_spatter",
		"filter::enable_filter_blood_spatter",
		"filter::set_filter_blood_spatter_reveal",
		"filter::disable_filter_blood_spatter",
		"filter::init_filter_teleporter_base",
		"filter::enable_filter_teleporter_base",
		"filter::set_filter_teleporter_base_amount",
		"filter::disable_filter_teleporter_base",
		"filter::init_filter_teleporter_sprite",
		"filter::enable_filter_teleporter_sprite",
		"filter::set_filter_teleporter_sprite_opacity",
		"filter::set_filter_teleporter_sprite_seed_offset",
		"filter::set_filter_teleporter_sprite_elapsed",
		"filter::disable_filter_teleporter_sprite",
		"filter::init_filter_teleporter_top",
		"filter::enable_filter_teleporter_top",
		"filter::set_filter_teleporter_top_reveal",
		"filter::disable_filter_teleporter_top",
		"filter::init_filter_keyline_blend",
		"filter::enable_filter_keyline_blend",
		"filter::set_filter_keyline_blend_opacity",
		"filter::disable_filter_keyline_blend",
		"filter::init_filter_drowning_damage",
		"filter::enable_filter_drowning_damage",
		"filter::set_filter_drowning_damage_opacity",
		"filter::set_filter_drowning_damage_inner_radius",
		"filter::set_filter_drowning_damage_outer_radius",
		"filter::disable_filter_drowning_damage",
		"end_game_taunts::check_force_taunt",
		"end_game_taunts::check_force_gesture",
		"end_game_taunts::draw_runner_up_bounds",
		"end_game_taunts::spawn_temp_specialist_model",
		"end_game_taunts::playcurrenttaunt",
		"end_game_taunts::previewtaunt",
		"end_game_taunts::playtaunt",
		"end_game_taunts::canceltaunt",
		"end_game_taunts::playgesturetype",
		"end_game_taunts::previewgesture",
		"end_game_taunts::playgesture",
		"end_game_taunts::cancelgesture",
		"end_game_taunts::playtransitionanim",
		"end_game_taunts::waitremoveweapon",
		"end_game_taunts::waitappearweapon",
		"end_game_taunts::hideweapon",
		"end_game_taunts::showweapon",
		"end_game_taunts::getidleanimname",
		"end_game_taunts::getidleoutanimname",
		"end_game_taunts::getidleinanimname",
		"end_game_taunts::getweapongroup",
		"end_game_taunts::stream_epic_models",
		"end_game_taunts::stop_stream_epic_models",
		"end_game_taunts::playepictauntscene",
		"end_game_taunts::stopepictauntscene",
		"end_game_taunts::addepicscenefunc",
		"end_game_taunts::shutdownepictauntmodels",
		"end_game_taunts::hidemodel",
		"end_game_taunts::showmodel",
		"end_game_taunts::spawncameraglass",
		"end_game_taunts::updateglassposition",
		"end_game_taunts::deletecameraglass",
		"end_game_taunts::reaperbulletglass",
		"end_game_taunts::centerbulletglass",
		"end_game_taunts::talonbulletglassleft",
		"end_game_taunts::talonbulletglassright",
		"end_game_taunts::talonbulletglass",
		"end_game_taunts::cloneshaderon",
		"end_game_taunts::cloneshaderoff",
		"end_game_taunts::handlecamochange",
		"end_game_taunts::camoshaderon",
		"end_game_taunts::camoshaderoff",
		"end_game_taunts::fireweapon",
		"end_game_taunts::stopfireweapon",
		"end_game_taunts::firebeam",
		"end_game_taunts::stopfirebeam",
		"end_game_taunts::playwinnerteamfx",
		"end_game_taunts::playlocalteamfx",
		"end_game_taunts::magicglassbullet",
		"end_game_taunts::launchprojectile",
		"end_game_taunts::setupreaperminigun",
		"end_game_taunts::spawnhiddenclone",
		"end_game_taunts::spawntopplayermodel",
		"end_game_taunts::spawnplayermodel",
		"end_game_taunts::spawngiunit",
		"end_game_taunts::spawnrap",
		"end_game_taunts::spawntalon",
		"cscriptbundlebase::on_error",
		"cscriptbundlebase::__constructor",
		"cscriptbundlebase::__destructor",
		"cscriptbundlebase::init",
		"cscriptbundlebase::get_type",
		"scriptbundle::error_on_screen",
		"scriptbundle::_destroy_error_on_screen",
		"drown::setup_radius_values",
		"drown::player_spawned",
		"drown::player_init_drown_values",
		"drown::player_watch_drown_shutdown",
		"drown::enable_drown",
		"drown::disable_drown",
		"drown::player_drown_fx",
		"drown::player_fade_out_drown_fx",
		"drown::drown_stage_callback",
		"apothiconfurybehavior::apothiconspawnsetup",
		"apothiconfurybehavior::apothiconstartloopingeffects",
		"apothiconfurybehavior::apothiconstoploopingeffects",
		"apothiconfurybehavior::apothiconspawnshader",
		"apothiconfurybehavior::apothiconjukeactive",
		"apothiconfurybehavior::apothiconfiredamageeffect",
		"apothiconfurybehavior::apothiconfurydeath",
		"apothiconfurybehavior::apothiconfuriousmodeeffect",
		"apothiconfurybehavior::new_timer",
		"apothiconfurybehavior::timer_increment_loop",
		"apothiconfurybehavior::get_time",
		"apothiconfurybehavior::get_time_in_seconds",
		"apothiconfurybehavior::reset_timer",
		"apothiconfurybehavior::apothiconbamflandeffect",
		"archetype_damage_effects::registerclientfields",
		"archetype_damage_effects::loadeffects",
		"archetype_damage_effects::actor_fire_fx",
		"warlordclientutils::warlorddamagestatehandler",
		"warlordclientutils::warlordtypehandler",
		"warlordclientutils::warlordthrusterhandler",
		"warlordclientutils::warlordlightshandler",
		"zombie_vortex::vortex_shake_and_rumble",
		"zombie_vortex::vision_blur",
		"razclientutils::razhelmetdetach",
		"razclientutils::razchestarmordetach",
		"razclientutils::razleftshoulderarmordetach",
		"razclientutils::razleftthigharmordetach",
		"razclientutils::razrightthigharmordetach",
		"zombieclientutils::zombiespecialdayeffectshandler",
		"zombieclientutils::zombie_override_burn_fx",
		"margwaclientutils::margwaprocessfootstep",
		"humanclientutils::facialdialoguehandler",
		"mechzclientutils::mechz_detach_faceplate",
		"mechzclientutils::mechz_detach_powercap",
		"mechzclientutils::mechz_detach_claw",
		"mechzclientutils::mechz_115_gun_muzzle_flash",
		"mechzclientutils::mechz_detach_rknee_armor",
		"mechzclientutils::mechz_detach_lknee_armor",
		"mechzclientutils::mechz_detach_rshoulder_armor",
		"mechzclientutils::mechz_detach_lshoulder_armor",
		"mechzclientutils::mechz_headlamp_off",
		"zombie_death::on_fire_timeout",
		"zombie_death::flame_death_fx",
		"zombie_death::randomize_array",
		"gibclientutils::_gibpiece",
		"gibclientutils::_playgibfx",
		"gibclientutils::_playgibsound",
		"gibclientutils::addgibcallback",
		"gibclientutils::cliententgibannihilate",
		"gibclientutils::cliententgibhead",
		"gibclientutils::cliententgibleftarm",
		"gibclientutils::cliententgibrightarm",
		"gibclientutils::cliententgibleftleg",
		"gibclientutils::cliententgibrightleg",
		"gibclientutils::createscriptmodelofentity",
		"gibclientutils::isgibbed",
		"gibclientutils::isundamaged",
		"gibclientutils::gibentity",
		"gibclientutils::handlegibnotetracks",
		"gibclientutils::playergibleftarm",
		"gibclientutils::playergibrightarm",
		"gibclientutils::playergibleftleg",
		"gibclientutils::playergibrightleg",
		"gibclientutils::playergiblegs",
		"gibclientutils::playergibtag",
		"archetype_secondary_animations::buildandvalidatefacialanimationlist",
		"animation::anim_info_render_thread",
		"animation::get_ent_type",
		"animation::_init_frame",
		"animation::_reset_frame",
		"animation::render_tag",
		"animation::anim_origin_render",
		"blood::localplayer_spawned",
		"blood::player_watch_blood_shutdown",
		"blood::enable_blood",
		"blood::disable_blood",
		"blood::blood_in",
		"blood::blood_out",
		"blood::player_watch_blood",
		"blood::setcontrollerlightbarcolorpulsing",
		"clientfield::register",
		"clientfield::get",
		"clientfield::get_to_player",
		"clientfield::get_player_uimodel",
		"load::first_frame",
		"load::art_review",
		"weapon_customization_icon::wc_icon_setup",
		"weapon_customization_icon::update_wc_icon_extracam",
		"weapon_customization_icon::wait_for_extracam_close",
		"weapon_customization_icon::getxcam",
		"weapon_customization_icon::setup_wc_extracam_settings",
		"weapon_customization_icon::set_wc_icon_weapon_options",
		"weapon_customization_icon::spawn_weapon_model",
		"weapon_customization_icon::set_wc_icon_cosmetic_variants",
		"weapon_customization_icon::get_safehouse_position_struct",
		"weapon_customization_icon::setup_wc_weapon_model",
		"weapon_customization_icon::process_wc_paintjobicon_extracam_request",
		"weapon_customization_icon::process_wc_varianticon_extracam_request",
		"gfx::setstage",
		"gfx::getshaderconstantvalue",
		"gfx::getstructfieldorzero",
		"gfx::getshaderconstantindex",
		"vehiclewheelfx::__constructor",
		"vehiclewheelfx::__destructor",
		"vehiclewheelfx::init",
		"vehiclewheelfx::update",
		"driving_fx::vehicle_enter",
		"driving_fx::speed_fx",
		"driving_fx::play_driving_fx",
		"driving_fx::get_wheel_fx",
		"driving_fx::play_driving_fx_firstperson",
		"driving_fx::collision_thread",
		"driving_fx::jump_landing_thread",
		"driving_fx::suspension_thread",
		"driving_fx::get_impact_vol_from_speed",
		"driving_fx::any_wheel_colliding",
		"driving_fx::dirt_surface_type",
		"driving_fx::correct_surface_type_for_screen_fx",
		"driving_fx::play_screen_fx_dirt",
		"driving_fx::play_screen_fx_dust",
		"sentinel_drone::sentinel_is_drone_initialized",
		"sentinel_drone::sentinel_drone_damage_player_fx",
		"sentinel_drone::sentinel_drone_deathfx",
		"sentinel_drone::sentinel_drone_camera_scanner",
		"sentinel_drone::sentinel_drone_camera_destroyed",
		"sentinel_drone::sentinel_drone_beam_fire1",
		"sentinel_drone::sentinel_drone_beam_fire2",
		"sentinel_drone::sentinel_drone_beam_fire3",
		"sentinel_drone::sentinel_drone_beam_fire",
		"sentinel_drone::sentinel_drone_beam_set_target_id",
		"sentinel_drone::sentinel_drone_beam_set_source_to_target",
		"sentinel_drone::sentinel_drone_arm_cut_1",
		"sentinel_drone::sentinel_drone_arm_cut_2",
		"sentinel_drone::sentinel_drone_arm_cut_3",
		"sentinel_drone::sentinel_spawn_broken_arm",
		"sentinel_drone::sentinel_drone_arm_cut",
		"sentinel_drone::sentinel_drone_beam_charge",
		"sentinel_drone::sentinel_drone_face_cut",
		"sentinel_drone::sentinel_play_claws_ambient_fx",
		"sentinel_drone::sentinel_play_engine_fx",
		"sentinel_drone::sentinel_play_taunt",
		"sentinel_drone::sentinel_launch_piece",
		"raps::adjust_side_death_dir_if_trace_fail",
		"raps::do_side_death_fx",
		"quadtank::_setup_",
		"quadtank::player_shock_fx_handler",
		"quadtank::player_shock_fx_fade_off",
		"quadtank::update_trophy_system_state",
		"quadtank::set_trophy_state",
		"quadtank::wait_for_bullet_impact",
		"siegebot::_setup_",
		"ai::add_ai_spawn_function",
		"ai::add_archetype_spawn_function",
		"ai::spawned_callback",
		"ai::shouldregisterclientfieldforarchetype",
		"trigger::ent_already_in",
		"trigger::add_to_ent",
		"trigger::remove_from_ent",
		"trigger::death_monitor",
		"aat::register",
		"aat::aat_hud_manager",
		"aat::finalize_clientfields",
		"aat::get_string",
		"aat::get_icon",
		"clientfaceanim::buildandvalidatefacialanimationlist",
		"flag::init",
		"flag::exists",
		"flag::set",
		"flag::delay_set",
		"flag::_delay_set",
		"flag::set_for_time",
		"flag::clear",
		"flag::toggle",
		"flag::get",
		"flag::wait_till",
		"flag::wait_till_timeout",
		"flag::wait_till_all",
		"flag::wait_till_all_timeout",
		"flag::wait_till_any",
		"flag::wait_till_any_timeout",
		"flag::wait_till_clear",
		"flag::wait_till_clear_timeout",
		"flag::wait_till_clear_all",
		"flag::wait_till_clear_all_timeout",
		"flag::wait_till_clear_any",
		"flag::wait_till_clear_any_timeout",
		"flag::delete",
		"system::register",
		"system::exec_post_system",
		"system::run_post_systems",
		"system::exec_pre_system",
		"system::run_pre_systems",
		"system::wait_till",
		"system::ignore",
		"system::is_system_running",
		"shaderanim::animate_crack",
		"shaderanim::shaderanim_update_opacity",
		"explode::updatedvars",
		"explode::localplayer_spawned",
		"explode::watchforplayerfalldamage",
		"explode::watchforplayerslide",
		"explode::dothedirty",
		"explode::watchforexplosion",
		"debug_menu::open",
		"debug_menu::close",
		"debug_menu::set_item_text",
		"debug_menu::set_item_color",
		"visionset_mgr::register_visionset_info",
		"visionset_mgr::register_overlay_info_style_none",
		"visionset_mgr::register_overlay_info_style_filter",
		"visionset_mgr::register_overlay_info_style_blur",
		"visionset_mgr::register_overlay_info_style_electrified",
		"visionset_mgr::register_overlay_info_style_burn",
		"visionset_mgr::register_overlay_info_style_poison",
		"visionset_mgr::register_overlay_info_style_transported",
		"visionset_mgr::register_overlay_info_style_speed_blur",
		"visionset_mgr::register_overlay_info_style_postfx_bundle",
		"visionset_mgr::is_type_currently_default",
		"visionset_mgr::register_type",
		"visionset_mgr::finalize_initialization",
		"visionset_mgr::finalize_clientfields",
		"visionset_mgr::finalize_type_clientfields",
		"visionset_mgr::validate_info",
		"visionset_mgr::add_sorted_name_key",
		"visionset_mgr::add_info",
		"visionset_mgr::register_info",
		"visionset_mgr::slot_cb",
		"visionset_mgr::visionset_slot_cb",
		"visionset_mgr::overlay_slot_cb",
		"visionset_mgr::lerp_cb",
		"visionset_mgr::visionset_lerp_cb",
		"visionset_mgr::overlay_lerp_cb",
		"visionset_mgr::get_info",
		"visionset_mgr::get_state",
		"visionset_mgr::should_update_state",
		"visionset_mgr::transition_state",
		"visionset_mgr::init_states",
		"visionset_mgr::demo_jump_monitor",
		"visionset_mgr::demo_spectate_monitor",
		"visionset_mgr::monitor",
		"visionset_mgr::killcam_visionset_vehicle_mismatch",
		"visionset_mgr::killcam_visionset_player_mismatch",
		"visionset_mgr::visionset_update_cb",
		"visionset_mgr::set_poison_overlay",
		"visionset_mgr::clear_poison_overlay",
		"visionset_mgr::overlay_update_cb",
		"visionset_mgr::init_fog_vol_to_visionset_monitor",
		"visionset_mgr::fog_vol_to_visionset_set_suffix",
		"visionset_mgr::fog_vol_to_visionset_set_info",
		"visionset_mgr::fog_vol_to_visionset_force_instant_transition",
		"visionset_mgr::fog_vol_to_visionset_instant_transition_monitor",
		"visionset_mgr::fog_vol_to_visionset_hostmigration_monitor",
		"visionset_mgr::fog_vol_to_visionset_monitor",
		"visionset_mgr::reset_player_fv2vs_infos_on_respawn",
		"callback::callback",
		"callback::entity_callback",
		"callback::add_callback",
		"callback::add_entity_callback",
		"callback::remove_callback_on_death",
		"callback::remove_callback",
		"callback::on_localclient_connect",
		"callback::on_localclient_shutdown",
		"callback::on_finalize_initialization",
		"callback::on_localplayer_spawned",
		"callback::remove_on_localplayer_spawned",
		"callback::on_spawned",
		"callback::remove_on_spawned",
		"callback::on_shutdown",
		"callback::on_start_gametype",
		"callback::add_weapon_type",
		"callback::spawned_weapon_type",
		"callback::scene_black_screen",
		"character_customization::localclientconnect",
		"character_customization::create_character_data_struct",
		"character_customization::handle_forced_streaming",
		"character_customization::loadequippedcharacteronmodel",
		"character_customization::update_model_attachment",
		"character_customization::set_character",
		"character_customization::set_character_mode",
		"character_customization::set_body",
		"character_customization::set_body_colors",
		"character_customization::set_body_color",
		"character_customization::set_head",
		"character_customization::set_helmet",
		"character_customization::set_showcase_weapon",
		"character_customization::set_helmet_colors",
		"character_customization::set_helmet_color",
		"character_customization::update",
		"character_customization::is_character_streamed",
		"character_customization::setup_character_streaming",
		"character_customization::get_character_mode",
		"character_customization::get_character_body",
		"character_customization::get_character_body_color",
		"character_customization::get_character_body_colors",
		"character_customization::get_character_head",
		"character_customization::get_character_helmet",
		"character_customization::get_character_showcase_weapon",
		"character_customization::get_character_helmet_color",
		"character_customization::get_character_helmet_colors",
		"character_customization::update_character_animation_tree_for_scene",
		"character_customization::reaper_body3_hack",
		"character_customization::get_current_frozen_moment_params",
		"character_customization::play_intro_and_animation",
		"character_customization::update_character_animation_based_on_showcase_weapon",
		"character_customization::update_character_animation_and_attachments",
		"character_customization::update_use_frozen_moments",
		"character_customization::update_show_helmets",
		"character_customization::set_character_align",
		"character_customization::setup_live_character_customization_target",
		"character_customization::update_locked_shader",
		"character_customization::updateeventthread",
		"character_customization::rotation_thread_spawner",
		"character_customization::update_model_rotation_for_right_stick",
		"character_customization::setup_static_character_customization_target",
		"character_customization::setup_character_extracam_struct",
		"character_customization::wait_for_extracam_close",
		"character_customization::setup_character_extracam_settings",
		"character_customization::update_character_extracam",
		"character_customization::process_character_extracam_request",
		"character_customization::process_lobby_client_character_extracam_request",
		"character_customization::process_current_hero_headshot_extracam_request",
		"character_customization::process_outfit_preview_extracam_request",
		"character_customization::process_character_body_item_extracam_request",
		"character_customization::process_character_helmet_item_extracam_request",
		"character_customization::process_character_head_item_extracam_request",
		"animation::_get_align_ent",
		"animation::_get_align_pos",
		"animation::play_siege",
		"animation::add_notetrack_func",
		"animation::add_global_notetrack_handler",
		"animation::call_notetrack_handler",
		"animation::setup_notetracks",
		"animation::handle_notetracks",
		"animation::cracks_on",
		"animation::cracks_off",
		"animation::cf_cracks_on",
		"animation::cf_cracks_off",
		"zm_altbody_beast::player_cover_transition",
		"zm_altbody_beast::player_disappear_in_flash",
		"zm_altbody_beast::wait_and_appear",
		"zm_altbody_beast::wait_invulnerable",
		"zm_altbody_beast::wait_enable_offhand_weapons",
		"zm_altbody_beast::player_allow_beastmode",
		"zm_altbody_beast::kiosk_allowed",
		"zm_altbody_beast::update_kiosk_effects",
		"zm_altbody_beast::kiosk_cooldown",
		"zm_altbody_beast::round_number",
		"zm_altbody_beast::_kiosk_cooldown",
		"zm_altbody_beast::player_watch_cancel",
		"zm_altbody_beast::beast_cancel_hint",
		"zm_altbody_beast::player_stance_hold_think",
		"zm_altbody_beast::player_continue_cancel",
		"zm_altbody_beast::player_beast_cancel_bar",
		"zm_altbody_beast::player_progress_bar_update",
		"zm_altbody_beast::player_take_mana",
		"zm_altbody_beast::player_give_lives",
		"zm_altbody_beast::player_take_lives",
		"zm_altbody_beast::player_give_mana",
		"zm_altbody_beast::player_get_revive_time",
		"zm_altbody_beast::player_damage_override_beast_mode",
		"zm_altbody_beast::player_check_grenades",
		"zm_altbody_beast::watch_round_start_mana",
		"zm_altbody_beast::player_watch_mana",
		"zm_altbody_beast::player_on_killed",
		"zm_altbody_beast::hide_ooze_triggers",
		"zm_altbody_beast::player_watch_melee_charge",
		"zm_altbody_beast::player_watch_melee_power",
		"zm_altbody_beast::player_watch_melee",
		"zm_altbody_beast::player_watch_melee_juke",
		"zm_altbody_beast::player_beast_melee_juke",
		"zm_altbody_beast::trigger_melee_only",
		"zm_altbody_beast::player_watch_lightning",
		"zm_altbody_beast::get_grapple_targets",
		"zm_altbody_beast::trigger_grapple_only",
		"zm_altbody_beast::player_watch_grapple",
		"zm_altbody_beast::grapple_valid_target_check",
		"zm_altbody_beast::zombie_on_spawn",
		"zm_altbody_beast::player_watch_grappled_object",
		"zm_altbody_beast::player_watch_grapple_traverse",
		"zm_altbody_beast::player_watch_grapple_landing",
		"zm_altbody_beast::player_watch_grappled_zombies",
		"zm_altbody_beast::player_kill_grappled_zombies",
		"zm_altbody_beast::zombie_gets_pulled",
		"zm_altbody_beast::lightning_zombie_damage_response",
		"zm_altbody_beast::watch_lightning_damage",
		"zm_altbody_beast::beast_mode_death_watch",
		"zm_altbody_beast::trigger_ooze_only",
		"zm_altbody_beast::lightning_slow_zombie",
		"zm_altbody_beast::lightning_slow_zombie_fx",
		"zm_altbody_beast::beastmode_devgui",
		"zm_altbody_beast::beastmode_devgui_callback",
		"zm_altbody_beast::player_zombie_devgui_beast_mode",
		"zm_altbody_beast::detect_reentry",
		"zm_altbody_beast::player_zombie_devgui_beast_mode_preserve",
		"_zm_weap_plunger::init",
		"zm_attackables::activate",
		"zm_attackables::deactivate",
		"zm_attackables::do_damage",
		"zm::post_main",
		"zm::cheat_enabled",
		"zm::set_round_number",
		"zm::get_round_number",
		"zm::startunitriggers",
		"zm::drive_client_connected_notifies",
		"zm::fade_out_intro_screen_zm",
		"zm::showhudandplaypromo",
		"zm::onallplayersready",
		"zm::initialblack",
		"zm::initialblackend",
		"zm::start_zombie_logic_in_x_sec",
		"zm::getallotherplayers",
		"zm::updateplayernum",
		"zm::getfreespawnpoint",
		"zm::delete_in_createfx",
		"zm::add_bots",
		"zm::zbot_spawn",
		"zm::post_all_players_connected",
		"zm::start_zm_dash_counter_watchers",
		"zm::first_consumables_used_watcher",
		"zm::players_reached_rounds_counter_watcher",
		"zm::init_custom_ai_type",
		"zm::zombiemode_melee_miss",
		"zm::player_track_ammo_count",
		"zm::spawn_vo",
		"zm::spawn_vo_player",
		"zm::precache_models",
		"zm::init_shellshocks",
		"zm::init_strings",
		"zm::init_sounds",
		"zm::init_levelvars",
		"zm::init_player_levelvars",
		"zm::init_dvars",
		"zm::init_function_overrides",
		"zm::callback_playerlaststand",
		"zm::breakafter",
		"zm::callback_playerdamage",
		"zm::finishplayerdamagewrapper",
		"zm::register_player_friendly_fire_callback",
		"zm::process_friendly_fire_callbacks",
		"zm::init_flags",
		"zm::init_client_field_callback_funcs",
		"zm::init_fx",
		"zm::zombie_intro_screen",
		"zm::players_playing",
		"zm::onplayerconnect_clientdvars",
		"zm::checkforalldead",
		"zm::onplayerspawned",
		"zm::player_spawn_protection",
		"zm::spawn_life_brush",
		"zm::in_life_brush",
		"zm::spawn_kill_brush",
		"zm::in_kill_brush",
		"zm::in_enabled_playable_area",
		"zm::get_player_out_of_playable_area_monitor_wait_time",
		"zm::player_out_of_playable_area_monitor",
		"zm::get_player_too_many_weapons_monitor_wait_time",
		"zm::player_too_many_weapons_monitor_takeaway_simultaneous",
		"zm::player_too_many_weapons_monitor_takeaway_sequence",
		"zm::player_too_many_weapons_monitor",
		"zm::player_monitor_travel_dist",
		"zm::player_monitor_time_played",
		"zm::player_grenade_multiattack_bookmark_watcher",
		"zm::player_grenade_watcher",
		"zm::player_prevent_damage",
		"zm::player_revive_monitor",
		"zm::laststand_giveback_player_perks",
		"zm::remote_revive_watch",
		"zm::player_laststand",
		"zm::failsafe_revive_give_back_weapons",
		"zm::set_intermission_point",
		"zm::spawnspectator",
		"zm::setspectatepermissions",
		"zm::spectator_thread",
		"zm::spectator_toggle_3rd_person",
		"zm::set_third_person",
		"zm::last_stand_revive",
		"zm::last_stand_pistol_rank_init",
		"zm::last_stand_pistol_swap",
		"zm::last_stand_minimum_pistol_override",
		"zm::last_stand_best_pistol",
		"zm::last_stand_compare_pistols",
		"zm::last_stand_save_pistol_ammo",
		"zm::last_stand_restore_pistol_ammo",
		"zm::last_stand_take_thrown_grenade",
		"zm::last_stand_grenade_save_and_return",
		"zm::spectators_respawn",
		"zm::spectator_respawn_player",
		"zm::spectator_respawn",
		"zm::check_for_valid_spawn_near_team",
		"zm::get_valid_spawn_location",
		"zm::check_for_valid_spawn_near_position",
		"zm::check_for_valid_spawn_within_range",
		"zm::get_players_on_team",
		"zm::get_safe_breadcrumb_pos",
		"zm::round_spawning",
		"zm::get_zombie_count_for_round",
		"zm::run_custom_ai_spawn_checks",
		"zm::register_custom_ai_spawn_check",
		"zm::round_spawning_test",
		"zm::round_pause",
		"zm::round_start",
		"zm::play_door_dialog",
		"zm::wait_until_first_player",
		"zm::round_one_up",
		"zm::round_over",
		"zm::get_delay_between_rounds",
		"zm::recordplayerroundweapon",
		"zm::recordprimaryweaponsstats",
		"zm::recordroundstartstats",
		"zm::recordroundendstats",
		"zm::round_think",
		"zm::award_grenades_for_survivors",
		"zm::get_zombie_spawn_delay",
		"zm::round_spawn_failsafe_debug",
		"zm::print_zombie_counts",
		"zm::round_wait",
		"zm::sndmusiconkillround",
		"zm::zombify_player",
		"zm::playerzombie_player_damage",
		"zm::playerzombie_downed_state",
		"zm::playerzombie_downed_hud",
		"zm::playerzombie_infinite_health",
		"zm::playerzombie_soundboard",
		"zm::can_do_input",
		"zm::playerzombie_play_sound",
		"zm::playerzombie_waitfor_buttonrelease",
		"zm::remove_ignore_attacker",
		"zm::player_damage_override_cheat",
		"zm::player_damage_override",
		"zm::clear_path_timers",
		"zm::check_player_damage_callbacks",
		"zm::register_player_damage_callback",
		"zm::wait_and_revive",
		"zm::register_vehicle_damage_callback",
		"zm::vehicle_damage_override",
		"zm::actor_damage_override",
		"zm::check_actor_damage_callbacks",
		"zm::register_actor_damage_callback",
		"zm::actor_damage_override_wrapper",
		"zm::register_zombie_damage_override_callback",
		"zm::actor_killed_override",
		"zm::round_end_monitor",
		"zm::updateendofmatchcounters",
		"zm::end_game",
		"zm::end_game_player_was_spectator",
		"zm::disable_end_game_intermission",
		"zm::check_end_game_intermission_delay",
		"zm::upload_leaderboards",
		"zm::initializestattracking",
		"zm::uploadglobalstatcounters",
		"zm::player_fake_death",
		"zm::player_exit_level",
		"zm::player_killed_override",
		"zm::player_zombie_breadcrumb",
		"zm::store_crumb",
		"zm::to_mins",
		"zm::intermission",
		"zm::zombie_game_over_death",
		"zm::screen_fade_in",
		"zm::player_intermission",
		"zm::fade_up_over_time",
		"zm::default_exit_level",
		"zm::default_delayed_exit",
		"zm::default_find_exit_point",
		"zm::play_level_start_vox_delayed",
		"zm::register_sidequest",
		"zm::is_sidequest_previously_completed",
		"zm::set_sidequest_completed",
		"zm::playswipesound",
		"zm::precache_zombie_leaderboards",
		"zm::zm_on_player_connect",
		"zm::zm_on_player_disconnect",
		"zm::watchdisconnect",
		"zm::increment_dog_round_stat",
		"zm::setup_player_navcard_hud",
		"zm::refresh_player_navcard_hud",
		"zm::set_default_laststand_pistol",
		"zm::player_too_many_players_check",
		"zm::is_idgun_damage",
		"zm::zm_on_player_spawned",
		"zm::update_is_player_valid",
		"zm::update_zone_name",
		"zm::printhashids",
		"zm_weap_gravityspikes::register_clientfields",
		"zm_weap_gravityspikes::reset_after_bleeding_out",
		"zm_weap_gravityspikes::gravityspikes_power_override",
		"zm_weap_gravityspikes::wield_gravityspikes",
		"zm_weap_gravityspikes::unwield_gravityspikes",
		"zm_weap_gravityspikes::weapon_drop_watcher",
		"zm_weap_gravityspikes::weapon_change_watcher",
		"zm_weap_gravityspikes::gravityspikes_attack_watcher",
		"zm_weap_gravityspikes::gravityspikes_stuck_above_zombie_watcher",
		"zm_weap_gravityspikes::gravityspikes_altfire_watcher",
		"zm_weap_gravityspikes::gravity_spike_position_valid",
		"zm_weap_gravityspikes::chop_actor",
		"zm_weap_gravityspikes::chop_zombies",
		"zm_weap_gravityspikes::spikesarc_swipe",
		"zm_weap_gravityspikes::gravityspikes_swipe_watcher",
		"zm_weap_gravityspikes::gravityspikes_power_update",
		"zm_weap_gravityspikes::gravityspikes_power_expired",
		"zm_weap_gravityspikes::player_invulnerable_during_gravityspike_slam",
		"zm_weap_gravityspikes::no_damage_gravityspikes_slam",
		"zm_weap_gravityspikes::player_near_gravity_vortex",
		"zm_weap_gravityspikes::player_vortex_rumble",
		"zm_weap_gravityspikes::plant_gravity_trap",
		"zm_weap_gravityspikes::gravity_trap_loop",
		"zm_weap_gravityspikes::gravity_trap_check",
		"zm_weap_gravityspikes::create_gravity_trap_spikes_in_ground",
		"zm_weap_gravityspikes::gravity_spike_planted_play",
		"zm_weap_gravityspikes::destroy_gravity_trap_spikes_in_ground",
		"zm_weap_gravityspikes::gravity_trap_fx_on",
		"zm_weap_gravityspikes::gravity_trap_fx_off",
		"zm_weap_gravityspikes::create_gravity_trap_unitrigger",
		"zm_weap_gravityspikes::gravity_trap_trigger_visibility",
		"zm_weap_gravityspikes::gravity_trap_trigger_think",
		"zm_weap_gravityspikes::gravity_trap_trigger_activate",
		"zm_weap_gravityspikes::update_gravityspikes_state",
		"zm_weap_gravityspikes::update_gravityspikes_energy",
		"zm_weap_gravityspikes::check_for_range_and_los",
		"zm_weap_gravityspikes::gravityspikes_target_filtering",
		"zm_weap_gravityspikes::zombie_lift",
		"zm_weap_gravityspikes::gravity_trap_notify_watcher",
		"zm_weap_gravityspikes::gravity_trap_timeout_watcher",
		"zm_weap_gravityspikes::zombie_lift_wacky_rotate",
		"zm_weap_gravityspikes::gravity_spike_melee_kill",
		"zm_weap_gravityspikes::knockdown_zombies_slam",
		"zm_weap_gravityspikes::play_slam_fx",
		"zm_weap_gravityspikes::zombie_slam_direction",
		"_zm_weap_nesting_dolls::setup_nesting_dolls_data",
		"_zm_weap_nesting_dolls::nesting_dolls_exists",
		"_zm_weap_nesting_dolls::player_give_nesting_dolls",
		"_zm_weap_nesting_dolls::player_handle_nesting_dolls",
		"_zm_weap_nesting_dolls::doll_spawner",
		"_zm_weap_nesting_dolls::doll_spawner_cluster",
		"_zm_weap_nesting_dolls::doll_do_damage",
		"_zm_weap_nesting_dolls::randomize_angles",
		"_zm_weap_nesting_dolls::get_random_launch_velocity",
		"_zm_weap_nesting_dolls::get_cluster_launch_velocity",
		"_zm_weap_nesting_dolls::get_launch_velocity",
		"_zm_weap_nesting_dolls::get_target_leading_pos",
		"_zm_weap_nesting_dolls::spawn_doll_model",
		"_zm_weap_nesting_dolls::doll_behavior_explode_when_stopped",
		"_zm_weap_nesting_dolls::nesting_dolls_end_achievement_tracking",
		"_zm_weap_nesting_dolls::get_player_aim_best_doll_target",
		"_zm_weap_nesting_dolls::get_doll_best_doll_target",
		"_zm_weap_nesting_dolls::nesting_dolls_cleanup",
		"_zm_weap_nesting_dolls::do_nesting_dolls_sound",
		"_zm_weap_nesting_dolls::get_thrown_nesting_dolls",
		"_zm_weap_nesting_dolls::nesting_dolls_debug_print",
		"_zm_weap_nesting_dolls::nesting_dolls_set_id",
		"_zm_weap_nesting_dolls::nesting_dolls_track_achievement",
		"_zm_weap_nesting_dolls::nesting_dolls_check_achievement",
		"_zm_weap_nesting_dolls::nesting_dolls_create_randomized_indices",
		"_zm_weap_nesting_dolls::nesting_dolls_setup_next_doll_throw",
		"zm_score::register_score_event",
		"zm_score::reset_doublexp_timer",
		"zm_score::doublexp_timer",
		"zm_score::player_on_spawned",
		"zm_score::score_cf_register_info",
		"zm_score::score_cf_increment_info",
		"zm_score::wait_score_cf_increment_info",
		"zm_score::player_add_points",
		"zm_score::get_points_multiplier",
		"zm_score::get_zombie_death_player_points",
		"zm_score::get_zombie_death_team_points",
		"zm_score::player_add_points_kill_bonus",
		"zm_score::player_reduce_points",
		"zm_score::add_to_player_score",
		"zm_score::minus_to_player_score",
		"zm_score::add_to_team_score",
		"zm_score::minus_to_team_score",
		"zm_score::player_died_penalty",
		"zm_score::player_downed_penalty",
		"zm_score::can_player_purchase",
		"zm_pers_upgrades_functions::pers_boards_updated",
		"zm_pers_upgrades_functions::pers_revive_active",
		"zm_pers_upgrades_functions::pers_increment_revive_stat",
		"zm_pers_upgrades_functions::pers_mulit_kill_headshot_active",
		"zm_pers_upgrades_functions::pers_check_for_pers_headshot",
		"zm_pers_upgrades_functions::cash_back_player_drinks_perk",
		"zm_pers_upgrades_functions::cash_back_money_reward",
		"zm_pers_upgrades_functions::cash_back_player_prone_check",
		"zm_pers_upgrades_functions::pers_upgrade_insta_kill_upgrade_check",
		"zm_pers_upgrades_functions::insta_kill_upgraded_player_kill_func",
		"zm_pers_upgrades_functions::pers_insta_kill_melee_swipe",
		"zm_pers_upgrades_functions::pers_upgrade_jugg_player_death_stat",
		"zm_pers_upgrades_functions::pers_jugg_active",
		"zm_pers_upgrades_functions::pers_upgrade_pistol_points_kill",
		"zm_pers_upgrades_functions::pers_upgrade_pistol_points_set_score",
		"zm_pers_upgrades_functions::pers_upgrade_double_points_pickup_start",
		"zm_pers_upgrades_functions::pers_upgrade_double_points_set_score",
		"zm_pers_upgrades_functions::pers_upgrade_double_points_cost",
		"zm_pers_upgrades_functions::is_pers_double_points_active",
		"zm_pers_upgrades_functions::pers_upgrade_perk_lose_bought",
		"zm_pers_upgrades_functions::pers_upgrade_perk_lose_save",
		"zm_pers_upgrades_functions::pers_upgrade_perk_lose_restore",
		"zm_pers_upgrades_functions::pers_upgrade_sniper_kill_check",
		"zm_pers_upgrades_functions::pers_sniper_score_reward",
		"zm_pers_upgrades_functions::pers_sniper_player_fires",
		"zm_pers_upgrades_functions::pers_get_player_accuracy",
		"zm_pers_upgrades_functions::pers_upgrade_box_weapon_used",
		"zm_pers_upgrades_functions::pers_magic_box_teddy_bear",
		"zm_pers_upgrades_functions::pers_magic_box_set_teddy_location",
		"zm_pers_upgrades_functions::pers_treasure_chest_choosespecialweapon",
		"zm_pers_upgrades_functions::pers_treasure_chest_get_weapons_array",
		"zm_pers_upgrades_functions::pers_magic_box_firesale",
		"zm_pers_upgrades_functions::box_firesale_teddy_bear",
		"zm_pers_upgrades_functions::pers_nube_unlock_watcher",
		"zm_pers_upgrades_functions::pers_nube_player_ranked_as_nube",
		"zm_pers_upgrades_functions::pers_nube_weapon_upgrade_check",
		"zm_pers_upgrades_functions::pers_nube_weapon_ammo_check",
		"zm_pers_upgrades_functions::pers_nube_should_we_give_raygun",
		"zm_pers_upgrades_functions::pers_nube_ammo_hint_string",
		"zm_pers_upgrades_functions::pers_nube_ammo_cost",
		"zm_pers_upgrades_functions::pers_nube_override_ammo_cost",
		"zm_altbody::trigger_monitor_visibility",
		"zm_timer::start_timer",
		"zm_timer::wait_for_stop_notify",
		"zm_timer::update_hud_position",
		"zm_stats::player_stats_init",
		"zm_stats::update_players_stats_at_match_end",
		"zm_stats::update_playing_utc_time",
		"zm_stats::survival_classic_custom_stat_update",
		"zm_stats::grief_custom_stat_update",
		"zm_stats::get_global_stat",
		"zm_stats::set_global_stat",
		"zm_stats::add_global_stat",
		"zm_stats::increment_global_stat",
		"zm_stats::highwater_global_stat",
		"zm_stats::add_client_stat",
		"zm_stats::increment_player_stat",
		"zm_stats::increment_root_stat",
		"zm_stats::increment_client_stat",
		"zm_stats::set_client_stat",
		"zm_stats::zero_client_stat",
		"zm_stats::get_map_stat",
		"zm_stats::set_map_stat",
		"zm_stats::add_map_stat",
		"zm_stats::increment_map_stat",
		"zm_stats::highwater_map_stat",
		"zm_stats::increment_map_cheat_stat",
		"zm_stats::increment_challenge_stat",
		"zm_stats::get_stat_distance_traveled",
		"zm_stats::get_stat_round_number",
		"zm_stats::get_stat_combined_rank_value_survival_classic",
		"zm_stats::update_global_counters_on_match_end",
		"zm_stats::get_specific_stat",
		"zm_stats::initializematchstats",
		"zm_stats::adjustrecentstats",
		"zm_stats::uploadstatssoon",
		"zm_weap_staff_air::onplayerspawned",
		"zm_weap_staff_air::air_projectile_delete",
		"zm_weap_staff_air::watch_staff_air_fired",
		"zm_weap_staff_air::watch_staff_air_impact",
		"zm_weap_staff_air::staff_air_find_source",
		"zm_weap_staff_air::staff_air_zombie_source",
		"zm_weap_staff_air::staff_air_position_source",
		"zm_weap_staff_air::whirlwind_seek_zombies",
		"zm_weap_staff_air::whirlwind_timeout",
		"zm_weap_staff_air::move_along_ground_position",
		"zm_weap_staff_air::whirlwind_kill_zombies",
		"zm_weap_staff_air::whirlwind_drag_zombie",
		"zm_weap_staff_air::whirlwind_move_zombie",
		"zm_weap_staff_air::whirlwind_unlink",
		"zm_weap_staff_air::source_zombie_death",
		"zm_weap_staff_air::get_air_blast_range",
		"zm_weap_staff_air::staff_air_proximity_kill",
		"zm_weap_staff_air::staff_air_zombie_range",
		"zm_weap_staff_air::staff_air_fling_zombie",
		"zm_weap_staff_air::zombie_launch",
		"zm_weap_staff_air::determine_launch_vector",
		"zm_weap_staff_air::staff_air_gib",
		"zm_weap_staff_air::staff_air_zombie_damage_response",
		"zm_weap_staff_air::is_staff_air_damage",
		"zm_weap_staff_air::staff_air_death_event",
		"zm_weap_staff_air::wind_damage_cone",
		"zm_weap_staff_air::stun_zombie",
		"zm_weap_staff_air::whirlwind_attract_anim_watch_cancel",
		"zm_weap_staff_air::whirlwind_attract_anim",
		"zm_game_module::register_game_module",
		"zm_game_module::set_current_game_module",
		"zm_game_module::get_current_game_module",
		"zm_game_module::get_game_module",
		"zm_game_module::game_module_pre_zombie_spawn_init",
		"zm_game_module::game_module_post_zombie_spawn_init",
		"zm_game_module::freeze_players",
		"zm_game_module::respawn_spectators_and_freeze_players",
		"zm_game_module::damage_callback_no_pvp_damage",
		"zm_game_module::respawn_players",
		"zm_game_module::zombie_goto_round",
		"zm_game_module::make_supersprinter",
		"zm_game_module::game_module_custom_intermission",
		"zm_game_module::create_fireworks",
		"zm_game_module::fireworks_launch",
		"zm_shadow_zombie::shadow_zombie_damage_fx",
		"bouncingbetty::proximityweaponobjectdetonation_override",
		"dragon_scale_shield::on_player_connect",
		"dragon_scale_shield::watchfirstuse",
		"dragon_scale_shield::on_player_spawned",
		"dragon_scale_shield::player_watch_ammo_change",
		"dragon_scale_shield::player_watch_max_ammo",
		"dragon_scale_shield::check_weapon_ammo",
		"dragon_scale_shield::should_shield_absorb_damage",
		"dragon_scale_shield::riotshield_damage_absorb_callback",
		"dragon_scale_shield::burninate",
		"dragon_scale_shield::zombie_knockdown",
		"dragon_scale_shield::detect_reentry",
		"zm_ai_sonic::RegisterBehaviorScriptFunctions",
		"zm_ai_sonic::_sonic_initfx",
		"zm_ai_sonic::_sonic_initsounds",
		"zm_ai_sonic::_entity_in_zone",
		"zm_ai_sonic::sonic_zombie_spawn",
		"zm_ai_sonic::_zombie_screamattack",
		"zm_ai_sonic::_zombie_scream_attack_done",
		"zm_ai_sonic::_zombie_playscreamfx",
		"zm_ai_sonic::_player_screamattackwatch",
		"zm_ai_sonic::_player_in_blur_area",
		"zm_ai_sonic::_zombie_any_players_in_blur_area",
		"zm_ai_sonic::_player_sonicblurvision",
		"zm_ai_sonic::_player_screamattackdamage",
		"zm_ai_sonic::_player_blurfailsafe",
		"zm_ai_sonic::_player_screamattack_wait",
		"zm_ai_sonic::_player_soniczombiedeath_doublevision",
		"zm_ai_sonic::_zombie_runeffects",
		"zm_ai_sonic::_zombie_setupfxonjoint",
		"zm_ai_sonic::_zombie_getnearbyplayers",
		"zm_ai_sonic::sonic_zombie_death",
		"zm_ai_sonic::zombie_sonic_scream_death",
		"zm_ai_sonic::_sonic_zombie_death_scream",
		"zm_ai_sonic::_sonic_zombie_death_explode",
		"zm_ai_sonic::_sonic_zombie_network_choke",
		"zm_ai_sonic::_sonic_zombie_get_enemies_in_scream_range",
		"zm_ai_sonic::_sonic_zombie_get_enemies_in_range",
		"zm_ai_sonic::_soniczombie_fling_zombie",
		"zm_ai_sonic::_soniczombie_knockdown_zombie",
		"zm_ai_sonic::_sonic_shrink",
		"zm_ai_sonic::_sonic_unshrink",
		"zm_ai_sonic::sonic_zombie_count_watch",
		"zm_ai_sonic::_sonic_damage_callback",
		"zm_ai_sonic::sonic_monkey_bolt_taunts",
		"zm_mgturret::main",
		"zm_mgturret::set_difficulty",
		"zm_mgturret::init_turret_difficulty_settings",
		"zm_mgturret::turret_set_difficulty",
		"zm_mgturret::turret_suppression_fire",
		"zm_mgturret::burst_fire_settings",
		"zm_mgturret::burst_fire",
		"zm_mgturret::burst_fire_unmanned",
		"zm_mgturret::avoid_synchronization",
		"zm_mgturret::do_shoot",
		"zm_mgturret::turret_timer",
		"zm_mgturret::random_spread",
		"zm_weap_annihilator::check_annihilator_death",
		"zm_audio::SetExertVoice",
		"zm_audio::exert_timer",
		"zm_audio::zmbVox",
		"zm_audio::init_audio_functions",
		"zm_audio::zombie_behind_vox",
		"zm_audio::oh_shit_vox",
		"zm_audio::player_killstreak_timer",
		"zm_audio::player_zombie_kill_vox",
		"zm_audio::get_response_chance",
		"zm_audio::get_mod_type",
		"zm_audio::timer_actual",
		"zm_audio::zmbVoxCreate",
		"zm_audio::zmbVoxInitSpeaker",
		"zm_audio::custom_kill_damaged_vo",
		"zm_audio::loadPlayerVoiceCategories",
		"zm_audio::checkStringValid",
		"zm_audio::checkStringTrue",
		"zm_audio::checkIntValid",
		"zm_audio::zmbVoxAdd",
		"zm_audio::create_and_play_dialog",
		"zm_audio::do_player_or_npc_playvox",
		"zm_audio::setup_response_line_override",
		"zm_audio::setup_hero_rival",
		"zm_audio::setup_response_line",
		"zm_audio::shouldPlayerSpeak",
		"zm_audio::isVoxOnCooldown",
		"zm_audio::zmbVoxGetLineVariant",
		"zm_audio::areNearbySpeakersActive",
		"zm_audio::musicState_Create",
		"zm_audio::sndMusicSystem_CreateState",
		"zm_audio::sndMusicSystem_PlayState",
		"zm_audio::playState",
		"zm_audio::sndMusicSystem_QueueState",
		"zm_audio::sndMusicSystem_StopAndFlush",
		"zm_audio::sndMusicSystem_IsAbleToPlay",
		"zm_audio::sndMusicSystem_LocationsInit",
		"zm_audio::sndMusicSystem_Locations",
		"zm_audio::sndLocationShouldPlay",
		"zm_audio::sndCurrentLocationArray",
		"zm_audio::sndLocationQueue",
		"zm_audio::sndMusicSystem_EESetup",
		"zm_audio::sndMusicSystem_EEWait",
		"zm_audio::sndMusicSystem_EEOverride",
		"zm_audio::secretUse",
		"zm_audio::sndAnnouncer_Init",
		"zm_audio::sndAnnouncerVoxAdd",
		"zm_audio::sndAnnouncerPlayVox",
		"zm_audio::zmbAIVox_NotifyConvert",
		"zm_audio::zmbAIVox_PlayVox",
		"zm_audio::zmbAIVox_PlayDeath",
		"zm_audio::zmbAIVox_PlayElectrocution",
		"zm_audio::zmbAIVox_AmbientDelay",
		"zm_audio::networkSafeReset",
		"zm_audio::sndIsNetworkSafe",
		"zm_audio::is_last_zombie",
		"zm_audio::sndRadioSetup",
		"zm_audio::sndRadioWait",
		"zm_audio::sndRadio_Override",
		"zm_audio::sndPerksJingles_Timer",
		"zm_audio::sndPerksJingles_Player",
		"zm_audio::sndPerksJingles_Cooldown",
		"zm_audio::sndConversation_Init",
		"zm_audio::sndConversation_AddLine",
		"zm_audio::sndConversation_Play",
		"zm_audio::sndConvoStopCurrentConversation",
		"zm_audio::waitPlayBackTime",
		"zm_audio::isCurrentSpeakerAbleToTalk",
		"zm_audio::getRandomCharacter",
		"zm_audio::getSpecificCharacter",
		"zm_audio::isAnyoneTalking",
		"zm_audio::sndConvoInterrupt",
		"zm_audio::water_vox",
		"zm_audio::vo_clear_underwater",
		"zm_audio::sndPlayerHitAlert",
		"zm_audio::sndPlayerHitAlert_PlaySound",
		"zm_audio::checkForValidMod",
		"zm_audio::checkForValidWeapon",
		"zm_audio::checkForValidAIType",
		"zm_powerup_insta_kill::grab_insta_kill",
		"zm_powerup_insta_kill::insta_kill_powerup",
		"zm_powerups::init_powerups",
		"zm_powerups::init_player_zombie_vars",
		"zm_powerups::set_weapon_ignore_max_ammo",
		"zm_powerups::powerup_hud_monitor",
		"zm_powerups::set_clientfield_powerups",
		"zm_powerups::randomize_powerups",
		"zm_powerups::get_next_powerup",
		"zm_powerups::get_valid_powerup",
		"zm_powerups::minigun_no_drop",
		"zm_powerups::watch_for_drop",
		"zm_powerups::get_random_powerup_name",
		"zm_powerups::get_regular_random_powerup_name",
		"zm_powerups::powerup_set_can_pick_up_in_last_stand",
		"zm_powerups::powerup_set_prevent_pick_up_if_drinking",
		"zm_powerups::powerup_set_player_specific",
		"zm_powerups::powerup_set_statless_powerup",
		"zm_powerups::add_zombie_special_drop",
		"zm_powerups::powerup_remove_from_regular_drops",
		"zm_powerups::powerup_round_start",
		"zm_powerups::powerup_drop",
		"zm_powerups::specific_powerup_drop",
		"zm_powerups::special_powerup_drop",
		"zm_powerups::powerup_setup",
		"zm_powerups::special_drop_setup",
		"zm_powerups::powerup_zombie_grab_trigger_cleanup",
		"zm_powerups::powerup_zombie_grab",
		"zm_powerups::powerup_grab",
		"zm_powerups::get_closest_window_repair",
		"zm_powerups::powerup_vo",
		"zm_powerups::powerup_wobble_fx",
		"zm_powerups::powerup_wobble",
		"zm_powerups::powerup_show",
		"zm_powerups::powerup_timeout",
		"zm_powerups::powerup_delete",
		"zm_powerups::powerup_delete_delayed",
		"zm_powerups::is_insta_kill_active",
		"zm_powerups::check_for_instakill",
		"zm_powerups::point_doubler_on_hud",
		"zm_powerups::time_remaining_on_point_doubler_powerup",
		"zm_powerups::devil_dialog_delay",
		"zm_powerups::check_for_rare_drop_override",
		"zm_powerups::tesla_powerup_active",
		"zm_powerups::print_powerup_drop",
		"zm_powerups::register_carpenter_node",
		"zm_powerups::is_carpenter_boards_upgraded",
		"zm_powerups::func_should_never_drop",
		"zm_powerups::func_should_always_drop",
		"zm_powerups::powerup_move",
		"zm_powerups::powerup_emp",
		"zm_powerups::get_powerups",
		"zm_powerups::should_award_stat",
		"zm_powerups::teller_withdrawl",
		"zm_powerups::show_on_hud",
		"zm_powerups::time_remaining_on_powerup",
		"zm_powerups::weapon_powerup",
		"zm_powerups::weapon_powerup_change",
		"zm_powerups::weapon_powerup_countdown",
		"zm_powerups::weapon_powerup_replace",
		"zm_powerups::weapon_powerup_remove",
		"zm_powerups::weapon_watch_gunner_downed",
		"zm_powerups::register_powerup",
		"zm_powerups::_register_undefined_powerup",
		"zm_powerups::register_powerup_weapon",
		"zm_weap_microwavegun::on_player_spawned",
		"zm_weap_microwavegun::add_microwaveable_object",
		"zm_weap_microwavegun::remove_microwaveable_object",
		"zm_weap_microwavegun::microwavegun_on_player_connect",
		"zm_weap_microwavegun::wait_for_microwavegun_fired",
		"zm_weap_microwavegun::microwavegun_network_choke",
		"zm_weap_microwavegun::microwavegun_fired",
		"zm_weap_microwavegun::microwavegun_get_enemies_in_range",
		"zm_weap_microwavegun::microwavegun_debug_print",
		"zm_weap_microwavegun::microwavegun_sizzle_zombie",
		"zm_weap_microwavegun::microwavegun_handle_death_notetracks",
		"zm_weap_microwavegun::microwavegun_sizzle_death_ending",
		"zm_weap_microwavegun::microwavegun_zap_get_shock_fx",
		"zm_weap_microwavegun::microwavegun_zap_get_shock_eyes_fx",
		"zm_weap_microwavegun::microwavegun_zap_head_gib",
		"zm_weap_microwavegun::microwavegun_zap_death_fx",
		"zm_weap_microwavegun::microwavegun_zombie_damage_response",
		"zm_weap_microwavegun::microwavegun_zombie_death_response",
		"zm_weap_microwavegun::is_microwavegun_dw_damage",
		"zm_weap_microwavegun::enemy_killed_by_dw_microwavegun",
		"zm_weap_microwavegun::is_microwavegun_damage",
		"zm_weap_microwavegun::enemy_killed_by_microwavegun",
		"zm_weap_microwavegun::microwavegun_sound_thread",
		"zm_weap_microwavegun::setup_microwavegun_vox",
		"zm_ai_raps::init",
		"zm_ai_raps::enable_raps_rounds",
		"zm_ai_raps::raps_spawner_init",
		"zm_ai_raps::raps_round_tracker",
		"zm_ai_raps::raps_round_start",
		"zm_ai_raps::raps_round_stop",
		"zm_ai_raps::raps_round_spawning",
		"zm_ai_raps::spawn_raps",
		"zm_ai_raps::get_raps_spawn_total",
		"zm_ai_raps::raps_round_wait_func",
		"zm_ai_raps::get_current_raps_count",
		"zm_ai_raps::show_hit_marker",
		"zm_ai_raps::rapsdamage",
		"zm_ai_raps::can_we_spawn_raps",
		"zm_ai_raps::waiting_for_next_raps_spawn",
		"zm_ai_raps::raps_round_aftermath",
		"zm_ai_raps::raps_spawn_fx",
		"zm_ai_raps::cleanup_meteor",
		"zm_ai_raps::cleanup_meteor_fx",
		"zm_ai_raps::create_global_raps_spawn_locations_list",
		"zm_ai_raps::raps_find_closest_in_global_pool",
		"zm_ai_raps::calculate_spawn_position",
		"zm_ai_raps::get_favorite_enemy",
		"zm_ai_raps::raps_health_increase",
		"zm_ai_raps::play_raps_round",
		"zm_ai_raps::raps_init",
		"zm_ai_raps::raps_timeout_after_xsec",
		"zm_ai_raps::raps_death",
		"zm_ai_raps::raps_custom_player_shellshock",
		"zm_ai_raps::player_watch_shellshock_accumulation",
		"zm_ai_raps::raps_explode_fx",
		"zm_ai_raps::zombie_setup_attack_properties_raps",
		"zm_ai_raps::stop_raps_sound_on_death",
		"zm_ai_raps::special_raps_spawn",
		"zm_ai_raps::raps_run_think",
		"zm_ai_raps::should_raps_giveup_inaccessible_player",
		"zm_ai_raps::raps_stalk_audio",
		"zm_ai_raps::raps_thundergun_knockdown",
		"zm_powerup_double_points::grab_double_points",
		"zm_powerup_double_points::double_points_powerup",
		"zm_ai_dogs::init",
		"zm_ai_dogs::enable_dog_rounds",
		"zm_ai_dogs::dog_spawner_init",
		"zm_ai_dogs::dog_round_spawning",
		"zm_ai_dogs::waiting_for_next_dog_spawn",
		"zm_ai_dogs::dog_round_aftermath",
		"zm_ai_dogs::dog_spawn_fx",
		"zm_ai_dogs::dog_spawn_factory_logic",
		"zm_ai_dogs::get_favorite_enemy",
		"zm_ai_dogs::dog_health_increase",
		"zm_ai_dogs::dog_round_wait_func",
		"zm_ai_dogs::dog_round_tracker",
		"zm_ai_dogs::dog_round_start",
		"zm_ai_dogs::dog_round_stop",
		"zm_ai_dogs::play_dog_round",
		"zm_ai_dogs::dog_init",
		"zm_ai_dogs::dog_death",
		"zm_ai_dogs::dog_explode_fx",
		"zm_ai_dogs::zombie_setup_attack_properties_dog",
		"zm_ai_dogs::stop_dog_sound_on_death",
		"zm_ai_dogs::dog_behind_audio",
		"zm_ai_dogs::dog_clip_monitor",
		"zm_ai_dogs::special_dog_spawn",
		"zm_ai_dogs::dog_run_think",
		"zm_ai_dogs::dog_stalk_audio",
		"zm_ai_dogs::dog_thundergun_knockdown",
		"zm_hero_weapon::gadget_hero_weapon_on_activate",
		"zm_hero_weapon::gadget_hero_weapon_on_off",
		"zm_hero_weapon::watch_for_glitches",
		"zm_hero_weapon::register_hero_weapon",
		"zm_hero_weapon::register_hero_weapon_give_take_callbacks",
		"zm_hero_weapon::default_give",
		"zm_hero_weapon::default_take",
		"zm_hero_weapon::register_hero_weapon_wield_unwield_callbacks",
		"zm_hero_weapon::default_wield",
		"zm_hero_weapon::default_unwield",
		"zm_hero_weapon::register_hero_weapon_power_callbacks",
		"zm_hero_weapon::default_power_full",
		"zm_hero_weapon::default_power_empty",
		"zm_hero_weapon::set_hero_weapon_state",
		"zm_hero_weapon::on_player_spawned",
		"zm_hero_weapon::watch_hero_weapon_give",
		"zm_hero_weapon::watch_hero_weapon_take",
		"zm_hero_weapon::watch_hero_weapon_change",
		"zm_hero_weapon::watch_hero_power",
		"zm_hero_weapon::continue_draining_hero_weapon",
		"zm_hero_weapon::register_hero_recharge_event",
		"zm_hero_weapon::hero_power_event_callback",
		"zm_hero_weapon::hero_power_event",
		"zm_hero_weapon::player_hero_power_event",
		"zm_hero_weapon::take_hero_weapon",
		"zm_hero_weapon::is_hero_weapon_in_use",
		"zm_weap_staff_water::init_tag_array",
		"zm_weap_staff_water::water_dart_cleanup",
		"zm_weap_staff_water::onplayerspawned",
		"zm_weap_staff_water::watch_staff_water_fired",
		"zm_weap_staff_water::watch_staff_water_impact",
		"zm_weap_staff_water::staff_water_kill_zombie",
		"zm_weap_staff_water::freeze_zombie",
		"zm_weap_staff_water::_network_safe_play_fx",
		"zm_weap_staff_water::network_safe_play_fx",
		"zm_weap_staff_water::frozen_zombie_shatter",
		"zm_weap_staff_water::frozen_zombie_gib",
		"zm_weap_staff_water::staff_water_position_source",
		"zm_weap_staff_water::ice_staff_blizzard_do_kills",
		"zm_weap_staff_water::ice_staff_blizzard_timeout",
		"zm_weap_staff_water::ice_staff_blizzard_off",
		"zm_weap_staff_water::get_ice_blast_range",
		"zm_weap_staff_water::staff_water_zombie_range",
		"zm_weap_staff_water::is_staff_water_damage",
		"zm_weap_staff_water::ice_affect_mechz",
		"zm_weap_staff_water::ice_affect_zombie",
		"zm_weap_staff_water::set_anim_rate",
		"zm_weap_staff_water::staff_water_on_zombie_spawned",
		"zm_weap_staff_water::staff_water_death_event",
		"zm_weap_staff_water::_icicle_locate_target",
		"zm_weap_staff_water::_icicle_get_spread",
		"zm_unitrigger::register_unitrigger_system_func",
		"zm_unitrigger::unitrigger_force_per_player_triggers",
		"zm_unitrigger::unitrigger_trigger",
		"zm_unitrigger::unitrigger_origin",
		"zm_unitrigger::register_unitrigger",
		"zm_unitrigger::unregister_unitrigger",
		"zm_unitrigger::delay_delete_contact_ent",
		"zm_unitrigger::register_static_unitrigger",
		"zm_unitrigger::register_dyn_unitrigger",
		"zm_unitrigger::reregister_unitrigger_as_dynamic",
		"zm_unitrigger::debug_unitriggers",
		"zm_unitrigger::cleanup_trigger",
		"zm_unitrigger::assess_and_apply_visibility",
		"zm_unitrigger::main",
		"zm_unitrigger::run_visibility_function_for_all_triggers",
		"zm_unitrigger::is_same_trigger",
		"zm_unitrigger::check_and_build_trigger_from_unitrigger_stub",
		"zm_unitrigger::build_trigger_from_unitrigger_stub",
		"zm_unitrigger::copy_zombie_keys_onto_trigger",
		"zm_unitrigger::trigger_thread",
		"zm_unitrigger::get_closest_unitriggers",
		"zm_unitrigger::create_unitrigger",
		"zm_unitrigger::create_dyn_unitrigger",
		"zm_unitrigger::unitrigger_prompt_and_visibility",
		"zm_unitrigger::unitrigger_logic",
		"zm_perks::perk_machine_think",
		"zm_perks::default_vending_precaching",
		"zm_perks::do_initial_power_off_callback",
		"zm_perks::use_solo_revive",
		"zm_perks::set_power_on",
		"zm_perks::turn_perk_off",
		"zm_perks::play_loop_on_machine",
		"zm_perks::perk_fx",
		"zm_perks::electric_perks_dialog",
		"zm_perks::reset_vending_hint_string",
		"zm_perks::vending_trigger_can_player_use",
		"zm_perks::vending_trigger_think",
		"zm_perks::vending_trigger_post_think",
		"zm_perks::wait_give_perk",
		"zm_perks::return_retained_perks",
		"zm_perks::give_perk_presentation",
		"zm_perks::give_perk",
		"zm_perks::perk_set_max_health_if_jugg",
		"zm_perks::check_player_has_perk",
		"zm_perks::vending_set_hintstring",
		"zm_perks::perk_think",
		"zm_perks::set_perk_clientfield",
		"zm_perks::perk_hud_destroy",
		"zm_perks::perk_hud_grey",
		"zm_perks::perk_give_bottle_begin",
		"zm_perks::perk_give_bottle_end",
		"zm_perks::perk_abort_drinking",
		"zm_perks::give_random_perk",
		"zm_perks::lose_random_perk",
		"zm_perks::update_perk_hud",
		"zm_perks::quantum_bomb_give_nearest_perk_validation",
		"zm_perks::quantum_bomb_give_nearest_perk_result",
		"zm_perks::perk_pause",
		"zm_perks::perk_unpause",
		"zm_perks::perk_pause_all_perks",
		"zm_perks::perk_unpause_all_perks",
		"zm_perks::has_perk_paused",
		"zm_perks::getvendingmachinenotify",
		"zm_perks::perk_machine_removal",
		"zm_perks::perk_machine_spawn_init",
		"zm_perks::get_perk_machine_start_state",
		"zm_perks::thread_bump_trigger",
		"zm_perks::players_are_in_perk_area",
		"zm_perks::perk_hostmigration",
		"zm_perks::host_migration_func",
		"zm_perks::spare_change",
		"zm_perks::check_for_change",
		"zm_perks::get_perk_array",
		"zm_perks::initialize_custom_perk_arrays",
		"zm_perks::register_revive_success_perk_func",
		"zm_perks::register_perk_basic_info",
		"zm_perks::register_perk_machine",
		"zm_perks::register_perk_machine_power_override",
		"zm_perks::register_perk_precache_func",
		"zm_perks::register_perk_threads",
		"zm_perks::register_perk_host_migration_params",
		"zm_perks::register_perk_damage_override_func",
		"zm_ai_spiders::init",
		"zm_ai_spiders::get_favorite_enemy",
		"zm_ai_spiders::spit_projectile",
		"zm_ai_wasp::init",
		"zm_ai_wasp::enable_wasp_rounds",
		"zm_ai_wasp::wasp_spawner_init",
		"zm_ai_wasp::get_current_wasp_count",
		"zm_ai_wasp::wasp_round_spawning",
		"zm_ai_wasp::spawn_wasp",
		"zm_ai_wasp::show_hit_marker",
		"zm_ai_wasp::waspdamage",
		"zm_ai_wasp::ready_to_spawn_wasp",
		"zm_ai_wasp::wasp_round_aftermath",
		"zm_ai_wasp::parasite_drop_item",
		"zm_ai_wasp::wasp_spawn_init",
		"zm_ai_wasp::create_global_wasp_spawn_locations_list",
		"zm_ai_wasp::wasp_find_closest_in_global_pool",
		"zm_ai_wasp::wasp_spawn_logic",
		"zm_ai_wasp::get_favorite_enemy",
		"zm_ai_wasp::wasp_health_increase",
		"zm_ai_wasp::wasp_round_wait_func",
		"zm_ai_wasp::wasp_round_tracker",
		"zm_ai_wasp::wasp_round_start",
		"zm_ai_wasp::wasp_round_stop",
		"zm_ai_wasp::play_wasp_round",
		"zm_ai_wasp::wasp_init",
		"zm_ai_wasp::wasp_thundergun_knockdown",
		"zm_ai_wasp::wasp_cleanup_failsafe",
		"zm_ai_wasp::wasp_death",
		"zm_ai_wasp::zombie_setup_attack_properties_wasp",
		"zm_ai_wasp::stop_wasp_sound_on_death",
		"zm_ai_wasp::wasp_behind_audio",
		"zm_ai_wasp::special_wasp_spawn",
		"zm_ai_wasp::wasp_run_think",
		"zm_ai_wasp::watch_player_melee",
		"zm_ai_wasp::watch_player_melee_events",
		"zm_ai_wasp::wasp_stalk_audio",
		"zm_ai_wasp::wasp_add_to_spawn_pool",
		"zm_perk_juggernaut::enable_juggernaut_perk_for_level",
		"zm_perk_juggernaut::juggernaut_precache",
		"zm_perk_juggernaut::juggernaut_register_clientfield",
		"zm_perk_juggernaut::juggernaut_set_clientfield",
		"zm_perk_juggernaut::juggernaut_perk_machine_setup",
		"zm_zonemgr::zone_is_enabled",
		"zm_zonemgr::zone_wait_till_enabled",
		"zm_zonemgr::get_player_zone",
		"zm_zonemgr::get_zone_from_position",
		"zm_zonemgr::get_zone_magic_boxes",
		"zm_zonemgr::get_zone_zbarriers",
		"zm_zonemgr::get_players_in_zone",
		"zm_zonemgr::any_player_in_zone",
		"zm_zonemgr::entity_in_zone",
		"zm_zonemgr::entity_in_active_zone",
		"zm_zonemgr::deactivate_initial_barrier_goals",
		"zm_zonemgr::zone_init",
		"zm_zonemgr::reinit_zone_spawners",
		"zm_zonemgr::enable_zone",
		"zm_zonemgr::make_zone_adjacent",
		"zm_zonemgr::add_zone_flags",
		"zm_zonemgr::add_adjacent_zone",
		"zm_zonemgr::setup_zone_flag_waits",
		"zm_zonemgr::wait_zone_flags_updating",
		"zm_zonemgr::zone_flag_wait_throttle",
		"zm_zonemgr::zone_flag_wait",
		"zm_zonemgr::door_close_disconnect",
		"zm_zonemgr::connect_zones",
		"zm_zonemgr::manage_zones",
		"zm_zonemgr::debug_show_spawn_locations",
		"zm_zonemgr::old_manage_zones",
		"zm_zonemgr::create_spawner_list",
		"zm_zonemgr::get_active_zone_names",
		"zm_zonemgr::get_active_zones_entities",
		"zm_zonemgr::_init_debug_zones",
		"zm_zonemgr::_destroy_debug_zones",
		"zm_zonemgr::_debug_show_zone",
		"zm_zonemgr::_debug_zones",
		"_zm_weap_bowie::init",
		"_zm_weap_beacon::player_give_beacon",
		"_zm_weap_beacon::player_handle_beacon",
		"_zm_weap_beacon::watch_for_dud",
		"_zm_weap_beacon::watch_for_emp",
		"_zm_weap_beacon::clone_player_angles",
		"_zm_weap_beacon::show_briefly",
		"_zm_weap_beacon::show_owner_on_attack",
		"_zm_weap_beacon::hide_owner",
		"_zm_weap_beacon::proximity_detonate",
		"_zm_weap_beacon::player_throw_beacon",
		"_zm_weap_beacon::weapon_beacon_anims",
		"_zm_weap_beacon::grenade_stolen_by_sam",
		"_zm_weap_beacon::wait_for_attractor_positions_complete",
		"_zm_weap_beacon::beacon_cleanup",
		"_zm_weap_beacon::do_beacon_sound",
		"_zm_weap_beacon::play_delayed_explode_vox",
		"_zm_weap_beacon::get_thrown_beacon",
		"_zm_weap_beacon::wait_and_explode",
		"_zm_weap_beacon::start_artillery_launch_normal",
		"_zm_weap_beacon::start_artillery_launch_ee",
		"_zm_weap_beacon::artillery_fx_logic",
		"_zm_weap_beacon::artillery_fx_logic_ee",
		"_zm_weap_beacon::homing_beacon_vo",
		"_zm_weap_beacon::artillery_barrage_logic",
		"_zm_weap_beacon::allow_beacons_to_be_targeted_by_giant_robot",
		"_zm_weap_beacon::wait_and_do_weapon_beacon_damage",
		"zm_behavior_utility::setupattackproperties",
		"zm_behavior_utility::enteredplayablearea",
		"zm_powerup_carpenter::grab_carpenter",
		"zm_powerup_carpenter::start_carpenter",
		"zm_powerup_carpenter::get_closest_window_repair",
		"zm_powerup_carpenter::start_carpenter_new",
		"zm_powerup_carpenter::get_near_boards",
		"zm_powerup_carpenter::get_far_boards",
		"zm_powerup_carpenter::repair_far_boards",
		"zm_powerup_carpenter::func_should_drop_carpenter",
		"zm_powerup_carpenter::get_num_window_destroyed",
		"rocketshield::on_player_connect",
		"rocketshield::watchfirstuse",
		"rocketshield::on_player_spawned",
		"rocketshield::player_watch_ammo_change",
		"rocketshield::player_watch_max_ammo",
		"rocketshield::check_weapon_ammo",
		"rocketshield::player_watch_upgraded_pickup_from_table",
		"rocketshield::player_damage_rocketshield",
		"rocketshield::player_watch_shield_juke",
		"rocketshield::riotshield_melee_juke",
		"rocketshield::riotshield_get_juke_enemies_in_range",
		"rocketshield::spawn_recharge_tanks",
		"rocketshield::create_bottle_unitrigger",
		"rocketshield::bottle_trigger_visibility",
		"rocketshield::shield_recharge_trigger_think",
		"rocketshield::bottle_trigger_activate",
		"rocketshield::detect_reentry",
		"zm_behavior::zombiefindflesh",
		"zm_behavior::zombiefindfleshcode",
		"zm_behavior::zombieupdategoal",
		"zm_behavior::zombieupdategoalcode",
		"zm_behavior::zombieenteredplayable",
		"zm_behavior::shouldmovecondition",
		"zm_behavior::zombieshouldmoveawaycondition",
		"zm_behavior::waskilledbyteslacondition",
		"zm_behavior::disablepowerups",
		"zm_behavior::enablepowerups",
		"zm_behavior::zombieshouldstun",
		"zm_behavior::zombiestunactionstart",
		"zm_behavior::zombiestunactionend",
		"zm_behavior::zombietraverseaction",
		"zm_behavior::zombietraverseactionterminate",
		"zm_behavior::zombiegottoentrancecondition",
		"zm_behavior::zombiegottoattackspotcondition",
		"zm_behavior::zombiehasattackspotalreadycondition",
		"zm_behavior::zombieshouldtearcondition",
		"zm_behavior::zombieshouldattackthroughboardscondition",
		"zm_behavior::zombieshouldtauntcondition",
		"zm_behavior::zombieshouldenterplayablecondition",
		"zm_behavior::ischunkvalidcondition",
		"zm_behavior::inplayablearea",
		"zm_behavior::shouldskipteardown",
		"zm_behavior::zombieisthinkdone",
		"zm_behavior::zombieisatgoal",
		"zm_behavior::zombieisatentrance",
		"zm_behavior::getchunkservice",
		"zm_behavior::updatechunkservice",
		"zm_behavior::updateattackspotservice",
		"zm_behavior::findnodesservice",
		"zm_behavior::zombieattackableobjectservice",
		"zm_behavior::zombiemovetoentranceaction",
		"zm_behavior::zombiemovetoentranceactionterminate",
		"zm_behavior::zombiemovetoattackspotaction",
		"zm_behavior::zombiemovetoattackspotactionterminate",
		"zm_behavior::zombieholdboardaction",
		"zm_behavior::zombieholdboardactionterminate",
		"zm_behavior::zombiegrabboardaction",
		"zm_behavior::zombiegrabboardactionterminate",
		"zm_behavior::zombiepullboardaction",
		"zm_behavior::zombiepullboardactionterminate",
		"zm_behavior::zombieattackthroughboardsaction",
		"zm_behavior::zombieattackthroughboardsactionterminate",
		"zm_behavior::zombietauntaction",
		"zm_behavior::zombietauntactionterminate",
		"zm_behavior::zombiemantleaction",
		"zm_behavior::zombiemantleactionterminate",
		"zm_behavior::boardtearmocompstart",
		"zm_behavior::boardtearmocompupdate",
		"zm_behavior::barricadeentermocompstart",
		"zm_behavior::barricadeentermocompupdate",
		"zm_behavior::barricadeentermocompterminate",
		"zm_behavior::barricadeentermocompnozstart",
		"zm_behavior::barricadeentermocompnozupdate",
		"zm_behavior::barricadeentermocompnozterminate",
		"zm_behavior::notetrackboardtear",
		"zm_behavior::notetrackboardmelee",
		"zm_behavior::findzombieenemy",
		"zm_behavior::zombieblackholebombpullstart",
		"zm_behavior::zombieupdateblackholebombpullstate",
		"zm_behavior::zombieblackholebombpullupdate",
		"zm_behavior::zombieblackholebombpullend",
		"zm_behavior::zombiekilledwhilegettingpulled",
		"zm_behavior::zombiekilledbyblackholebombcondition",
		"zm_behavior::zombiekilledbyblackholebombstart",
		"zm_behavior::zombiekilledbyblackholebombend",
		"zm_behavior::zombiebhbburst",
		"zm_hackables_box::box_hacks",
		"zm_hackables_box::custom_check_firesale_loc_valid_func",
		"zm_hackables_box::custom_box_move_logic",
		"zm_hackables_box::check_for_free_locations",
		"zm_hackables_box::init_box_respin",
		"zm_hackables_box::box_respin_think",
		"zm_hackables_box::respin_box_thread",
		"zm_hackables_box::respin_box",
		"zm_hackables_box::hack_box_qualifier",
		"zm_hackables_box::init_box_respin_respin",
		"zm_hackables_box::box_respin_respin_think",
		"zm_hackables_box::respin_respin_box",
		"zm_hackables_box::fake_weapon_powerup_thread",
		"zm_hackables_box::fake_weapon_powerup_timeout",
		"zm_hackables_box::init_summon_hacks",
		"zm_hackables_box::init_summon_box",
		"zm_hackables_box::summon_box_thread",
		"zm_hackables_box::summon_box",
		"zm_hackables_box::summon_box_qualifier",
		"zm_pap_util::init_parameters",
		"zm_pap_util::set_timeout",
		"zm_pap_util::set_interaction_height",
		"zm_pap_util::set_interaction_trigger_radius",
		"zm_pap_util::set_interaction_trigger_height",
		"zm_pap_util::set_move_in_func",
		"zm_pap_util::set_move_out_func",
		"zm_pap_util::set_grabbable_by_anyone",
		"zm_pap_util::get_triggers",
		"zm_pap_util::is_pap_trigger",
		"zm_pap_util::enable_swap_attachments",
		"zm_pap_util::can_swap_attachments",
		"zm_pap_util::update_hint_string",
		"_sticky_grenade::init",
		"_sticky_grenade::watch_bolt_detonation",
		"ball::carry_think_ball",
		"ball::anyballsintheair",
		"ball::waitforballtocometorest",
		"ball::freezeplayersforroundend",
		"ball::waitforallballstocometorest",
		"ball::ball_ontimelimit",
		"ball::ballovertimeround2_ontimelimit",
		"ball::onspawnplayer",
		"ball::ballconsistencyswitchthread",
		"ball::onplayerkilled",
		"ball::get_real_ball_location",
		"ball::can_use_goal",
		"ball::on_use_goal",
		"ball::spawn_ball",
		"ball::can_use_ball",
		"ball::ball_carrier_cleanup",
		"ball::ball_set_dropped",
		"ball::on_reset_ball",
		"ball::ball_return_home",
		"ball::reset_ball",
		"ball::upload_ball",
		"ball::download_ball",
		"ball::ball_pass_watch",
		"ball::ball_shoot_watch",
		"ball::ball_weapon_change_watch",
		"ball::valid_ball_pickup_weapon",
		"ball::player_no_pickup_time",
		"ball::watchunderwater",
		"ball::ball_physics_launch_drop",
		"ball::ball_check_pass_kill_pickup",
		"ball::timer_run",
		"ball::timer_cancel",
		"ball::adjust_for_stance",
		"ball::ball_pass_projectile",
		"ball::ball_on_projectile_death",
		"ball::ball_restore_contents",
		"ball::ball_on_projectile_hit_client",
		"ball::ball_clear_contents",
		"ball::ball_create_killcam_ent",
		"ball::ball_pass_or_throw_active",
		"ball::ball_download_fx",
		"ball::ball_assign_random_start",
		"ball::ball_assign_start",
		"ball::ball_physics_launch",
		"ball::ball_check_oob",
		"ball::ball_physics_touch_cant_pickup_player",
		"ball::ball_physics_fake_bounce",
		"ball::ball_watch_touch_enemy_goal",
		"ball::line_intersect_sphere",
		"ball::ball_touched_goal",
		"ball::ball_give_score",
		"ball::should_record_final_score_cam",
		"ball::ball_check_assist",
		"ball::ball_physics_timeout",
		"ball::ball_physics_out_of_level",
		"ball::player_update_pass_target",
		"ball::play_return_vo",
		"ball::compare_player_pass_dot",
		"ball::player_set_pass_target",
		"ball::player_clear_pass_target",
		"ball::ballfindground",
		"ball::is_touching_any_ball_return_trigger",
		"zm_fog::setup_devgui_func",
		"zm_magicbox_zod::custom_joker_movement",
		"zm_magicbox_zod::custom_magic_box_timer_til_despawn",
		"zm_magicbox_zod::custom_magic_box_fx",
		"zm_magicbox_zod::custom_pandora_show_func",
		"zm_magicbox_zod::custom_magic_box_weapon_wait",
		"zm_magicbox_zod::set_magic_box_zbarrier_state",
		"zm_magicbox_zod::magic_box_initial",
		"zm_magicbox_zod::magic_box_arrives",
		"zm_magicbox_zod::magic_box_leaves",
		"zm_magicbox_zod::magic_box_opens",
		"zm_magicbox_zod::magic_box_open_idle",
		"zm_magicbox_zod::magic_box_closes",
		"zm_magicbox_zod::custom_magic_box_do_weapon_rise",
		"zm_magicbox_zod::handle_fire_sale",
		"zm_weap_shrink_ray::add_shrinkable_object",
		"zm_weap_shrink_ray::remove_shrinkable_object",
		"zm_weap_shrink_ray::watch_for_death",
		"zm_traps::init",
		"zm_traps::trap_init",
		"zm_traps::trap_main",
		"zm_traps::trap_use_think",
		"zm_traps::trap_lights_red",
		"zm_traps::trap_lights_green",
		"zm_traps::trap_set_string",
		"zm_traps::trap_move_switches",
		"zm_traps::trap_activate_fire",
		"zm_traps::trap_activate_rotating",
		"zm_traps::trap_activate_flipper",
		"zm_traps::trap_audio_fx",
		"zm_traps::trap_damage",
		"zm_traps::trig_update",
		"zm_traps::player_elec_damage",
		"zm_traps::player_fire_damage",
		"zm_traps::zombie_trap_death",
		"zm_traps::zombie_flame_watch",
		"zm_traps::play_elec_vocals",
		"zm_traps::electroctute_death_fx",
		"zm_traps::electrocute_timeout",
		"zm_traps::trap_dialog",
		"zm_traps::get_trap_array",
		"zm_traps::trap_disable",
		"zm_traps::trap_enable",
		"zm_traps::trap_model_type_init",
		"zm_traps::register_trap_basic_info",
		"zm_traps::_register_undefined_trap",
		"zm_traps::register_trap_damage",
		"zm_bot::debug_coop_bot_test",
		"zm_bot::on_bot_spawned",
		"zm_bot::debugmsg",
		"zm_perk_deadshot::deadshot_precache",
		"zm_perk_deadshot::deadshot_register_clientfield",
		"zm_perk_deadshot::deadshot_set_clientfield",
		"zm_perk_deadshot::deadshot_perk_machine_setup",
		"zm_perk_deadshot::give_deadshot_perk",
		"zm_perk_widows_wine::enable_widows_wine_perk_for_level",
		"zm_perk_widows_wine::widows_wine_precache",
		"zm_perk_widows_wine::widows_wine_register_clientfield",
		"zm_perk_widows_wine::widows_wine_set_clientfield",
		"zm_perk_widows_wine::widows_wine_perk_machine_setup",
		"zm_perk_widows_wine::widows_wine_perk_activate",
		"zm_perk_widows_wine::widows_wine_contact_explosion",
		"zm_perk_widows_wine::widows_wine_zombie_damage_response",
		"zm_perk_widows_wine::widows_wine_vehicle_damage_response",
		"zm_perk_widows_wine::widows_wine_damage_callback",
		"zm_perk_widows_wine::widows_wine_zombie_death_watch",
		"zm_perk_widows_wine::powerup_widows_wine_timeout",
		"zm_perk_widows_wine::widows_wine_cocoon_zombie_score",
		"zm_perk_widows_wine::widows_wine_cocoon_zombie",
		"zm_perk_widows_wine::widows_wine_slow_zombie",
		"zm_perk_widows_wine::vehicle_stuck_grenade_monitor",
		"zm_perk_widows_wine::grenade_bounce_monitor",
		"zm_perk_widows_wine::grenade_bounces",
		"zm_perk_widows_wine::widows_wine_vehicle_behavior",
		"zm_perk_widows_wine::widows_wine_perk_lost",
		"zm_perk_widows_wine::widows_wine_override_wallbuy_purchase",
		"zm_perk_widows_wine::widows_wine_override_melee_wallbuy_purchase",
		"zm_equipment::signal_activated",
		"zm_equipment::register",
		"zm_equipment::register_slot_watcher_override",
		"zm_equipment::set_ammo_driven",
		"zm_equipment::limit",
		"zm_equipment::init_upgrade",
		"zm_equipment::get_hint",
		"zm_equipment::get_howto_hint",
		"zm_equipment::get_icon",
		"zm_equipment::get_notify_strings",
		"zm_equipment::add_to_trigger_list",
		"zm_equipment::equipment_spawn_think",
		"zm_equipment::set_equipment_invisibility_to_player",
		"zm_equipment::take",
		"zm_equipment::give",
		"zm_equipment::buy",
		"zm_equipment::slot_watcher",
		"zm_equipment::is_limited",
		"zm_equipment::limited_in_use",
		"zm_equipment::setup_limited",
		"zm_equipment::release_limited_on_taken",
		"zm_equipment::release_limited_on_disconnect",
		"zm_equipment::is_active",
		"zm_equipment::init_hint_hudelem",
		"zm_equipment::setup_client_hintelem",
		"zm_equipment::show_hint",
		"zm_equipment::show_hint_text",
		"zm_equipment::start_ammo",
		"zm_equipment::change_ammo",
		"zm_equipment::disappear_fx",
		"zm_equipment::register_for_level",
		"zm_equipment::is_equipment",
		"zm_equipment::is_equipment_that_blocks_purchase",
		"zm_equipment::is_player_equipment",
		"zm_equipment::has_deployed_equipment",
		"zm_equipment::has_player_equipment",
		"zm_equipment::get_player_equipment",
		"zm_equipment::hacker_active",
		"zm_equipment::set_player_equipment",
		"zm_equipment::init_player_equipment",
		"zm_ai_sentinel_drone::register_clientfields",
		"zm_ai_sentinel_drone::get_zombie_spawn_delay",
		"_zm_weap_elemental_bow_wolf_howl::do_zombie_explode",
		"riotshield::on_player_connect",
		"riotshield::player_init_shield_health",
		"riotshield::player_set_shield_health",
		"riotshield::player_shield_absorb_damage",
		"riotshield::player_shield_facing_attacker",
		"riotshield::should_shield_absorb_damage",
		"riotshield::player_damage_override_callback",
		"riotshield::player_damage_shield",
		"riotshield::player_watch_weapon_change",
		"riotshield::player_watch_shield_melee",
		"riotshield::player_watch_shield_melee_power",
		"riotshield::riotshield_fling_zombie",
		"riotshield::zombie_knockdown",
		"riotshield::riotshield_knockdown_zombie",
		"riotshield::riotshield_get_enemies_in_range",
		"riotshield::riotshield_network_choke",
		"riotshield::riotshield_melee",
		"riotshield::updateriotshieldmodel",
		"riotshield::player_take_riotshield",
		"zm_powerup_free_perk::grab_free_perk",
		"zm_powerup_free_perk::free_perk_powerup",
		"zm_powerup_free_perk::disable_perk_before_power",
		"zm_turned::init",
		"zm_turned::setup_zombie_exerts",
		"zm_turned::delay_turning_on_eyes",
		"zm_turned::turn_to_zombie",
		"zm_turned::turn_to_human",
		"zm_turned::deletezombiesinradius",
		"zm_turned::turned_give_melee_weapon",
		"zm_turned::turned_player_buttons",
		"zm_turned::turned_disable_player_weapons",
		"zm_turned::turned_enable_player_weapons",
		"zm_turned::get_farthest_available_zombie",
		"zm_turned::get_available_human",
		"zm_turned::silentlyremovezombie",
		"zm_turned::getspawnpoint",
		"zm_powerup_bonus_points_player::bonus_points_player_powerup",
		"controllable_spider::register_clientfields",
		"controllable_spider::closest_player_targets_override",
		"zm_playerhealth::on_player_spawned",
		"zm_playerhealth::player_health_visionset",
		"zm_playerhealth::playerhurtcheck",
		"zm_playerhealth::playerhealthregen",
		"zm_playerhealth::playerinvul",
		"zm_playerhealth::healthoverlay",
		"zm_playerhealth::fadefunc",
		"zm_playerhealth::watchhideredflashingoverlay",
		"zm_playerhealth::redflashingoverlay",
		"zm_playerhealth::healthoverlay_remove",
		"zm_playerhealth::empty_kill_func",
		"zm_playerhealth::loghit",
		"zm_playerhealth::logregen",
		"zm_playerhealth::showhitlog",
		"zm_playerhealth::playerhealthdebug",
		"zm_playerhealth::printhealthdebug",
		"zm_playerhealth::destroyhealthdebug",
		"zm_craft_shield::init",
		"zm_craft_shield::riotshield_craftable",
		"zm_craft_shield::show_infotext_for_duration",
		"zm_craft_shield::on_pickup_common",
		"zm_craft_shield::on_drop_common",
		"zm_craft_shield::pickup_from_mover",
		"zm_craft_shield::on_fully_crafted",
		"zm_craft_shield::drop_on_mover",
		"zm_craft_shield::on_buy_weapon_riotshield",
		"zm_craft_shield::detect_reentry",
		"zm_craftables::anystub_update_prompt",
		"zm_craftables::anystub_get_unitrigger_origin",
		"zm_craftables::anystub_on_spawn_trigger",
		"zm_craftables::craftables_watch_swipes",
		"zm_craftables::explosiondamage",
		"zm_craftables::make_zombie_craftable_open",
		"zm_craftables::set_hide_model_if_unavailable",
		"zm_craftables::get_hide_model_if_unavailable",
		"zm_craftables::set_build_time",
		"zm_craftables::add_zombie_craftable_vox_category",
		"zm_craftables::generate_zombie_craftable_piece",
		"zm_craftables::manage_multiple_pieces",
		"zm_craftables::combine_craftable_pieces",
		"zm_craftables::add_craftable_piece",
		"zm_craftables::player_drop_piece_on_downed",
		"zm_craftables::onplayerlaststand",
		"zm_craftables::piecestub_get_unitrigger_origin",
		"zm_craftables::generate_piece_unitrigger",
		"zm_craftables::piecetrigger_update_prompt",
		"zm_craftables::piecestub_update_prompt",
		"zm_craftables::piece_unitrigger_think",
		"zm_craftables::player_can_take_piece",
		"zm_craftables::dbline",
		"zm_craftables::player_throw_piece",
		"zm_craftables::watch_hit_players",
		"zm_craftables::piece_wait_and_return",
		"zm_craftables::player_return_piece_to_original_spawn",
		"zm_craftables::player_drop_piece_on_death",
		"zm_craftables::player_drop_piece",
		"zm_craftables::player_take_piece",
		"zm_craftables::player_destroy_piece",
		"zm_craftables::claim_location",
		"zm_craftables::is_point_in_craft_trigger",
		"zm_craftables::piece_allocate_spawn",
		"zm_craftables::piece_deallocate_spawn",
		"zm_craftables::piece_pick_random_spawn",
		"zm_craftables::piece_set_spawn",
		"zm_craftables::piece_spawn_in",
		"zm_craftables::piece_spawn_at",
		"zm_craftables::piece_unspawn",
		"zm_craftables::piece_hide",
		"zm_craftables::piece_show",
		"zm_craftables::generate_piece",
		"zm_craftables::craftable_piece_unitriggers",
		"zm_craftables::hide_craftable_table_model",
		"zm_craftables::setup_unitrigger_craftable",
		"zm_craftables::setup_unitrigger_craftable_array",
		"zm_craftables::setup_craftable_pieces",
		"zm_craftables::craftable_has_piece",
		"zm_craftables::get_actual_uts_craftable",
		"zm_craftables::get_actual_craftablespawn",
		"zm_craftables::craftable_can_use_shared_piece",
		"zm_craftables::craftable_set_piece_crafted",
		"zm_craftables::craftable_set_piece_crafting",
		"zm_craftables::craftable_clear_piece_crafting",
		"zm_craftables::craftable_is_piece_crafted",
		"zm_craftables::start_crafting_shared_piece",
		"zm_craftables::finish_crafting_shared_piece",
		"zm_craftables::can_craft_shared_piece",
		"zm_craftables::craftable_is_piece_crafting",
		"zm_craftables::craftable_is_piece_crafted_or_crafting",
		"zm_craftables::craftable_all_crafted",
		"zm_craftables::waittill_crafted",
		"zm_craftables::player_can_craft",
		"zm_craftables::craftable_transfer_data",
		"zm_craftables::player_craft",
		"zm_craftables::update_open_table_status",
		"zm_craftables::player_finish_craftable",
		"zm_craftables::complete_craftable",
		"zm_craftables::craftablestub_remove",
		"zm_craftables::craftabletrigger_update_prompt",
		"zm_craftables::craftablestub_update_prompt",
		"zm_craftables::choose_open_craftable",
		"zm_craftables::open_craftablestub_update_prompt",
		"zm_craftables::player_continue_crafting",
		"zm_craftables::player_progress_bar_update",
		"zm_craftables::player_progress_bar",
		"zm_craftables::craftable_play_craft_fx",
		"zm_craftables::craftable_use_hold_think",
		"zm_craftables::craftable_place_think",
		"zm_craftables::model_fly_away",
		"zm_craftables::find_craftable_stub",
		"zm_craftables::uncraft_craftable",
		"zm_craftables::stub_uncraft_craftable",
		"zm_craftables::player_explode_craftable",
		"zm_craftables::think_craftables",
		"zm_craftables::opentablecraftable",
		"zm_craftables::craftable_trigger_think",
		"zm_craftables::craftable_trigger_think_array",
		"zm_craftables::setup_vehicle_unitrigger_craftable",
		"zm_craftables::vehicle_craftable_trigger_think",
		"zm_craftables::onpickuputs",
		"zm_craftables::ondroputs",
		"zm_craftables::onbeginuseuts",
		"zm_craftables::onenduseuts",
		"zm_craftables::oncantuseuts",
		"zm_craftables::onuseplantobjectuts",
		"zm_craftables::is_craftable",
		"zm_craftables::craftable_crafted",
		"zm_craftables::craftable_complete",
		"zm_craftables::get_craftable_hint",
		"zm_craftables::delete_on_disconnect",
		"zm_craftables::is_holding_part",
		"zm_craftables::is_part_crafted",
		"zm_craftables::track_craftable_piece_pickedup",
		"zm_craftables::track_craftable_pieces_crafted",
		"zm_craftables::track_craftables_crafted",
		"zm_craftables::track_craftables_pickedup",
		"zm_craftables::track_craftables_planted",
		"zm_craftables::placed_craftable_vo_timer",
		"zm_craftables::craftable_pickedup_timer",
		"zm_craftables::track_planted_craftables_pickedup",
		"zm_craftables::track_placed_craftables",
		"zm_craftables::zombie_craftable_set_record_stats",
		"zm_craftables::add_map_craftable_stat",
		"zm_craftables::say_pickup_craftable_vo",
		"zm_craftables::get_craftable_vo_name",
		"zm_craftables::get_craftable_stat_name",
		"zm_craftables::get_craftable_model",
		"zm_craftables::get_craftable_piece",
		"zm_craftables::player_get_craftable_piece",
		"zm_craftables::player_remove_craftable_piece",
		"zm_craftables::player_remove_piece",
		"zm_craftables::get_craftable_piece_model",
		"zm_craftables::player_show_craftable_parts_ui",
		"zm_craftables::player_hide_craftable_parts_ui_after_duration",
		"zm_craftables::run_craftables_devgui",
		"zm_craftables::add_craftable_cheat",
		"util::warning",
		"util::brush_delete",
		"util::brush_show",
		"util::brush_throw",
		"util::playsoundonplayers",
		"util::get_player_height",
		"util::isbulletimpactmod",
		"util::waitrespawnbutton",
		"util::setlowermessage",
		"util::setlowermessagevalue",
		"util::clearlowermessage",
		"util::printonteam",
		"util::printboldonteam",
		"util::printboldonteamarg",
		"util::printonteamarg",
		"util::printonplayers",
		"util::printandsoundoneveryone",
		"util::_playlocalsound",
		"util::getotherteam",
		"util::getteammask",
		"util::getotherteamsmask",
		"util::plot_points",
		"util::getfx",
		"util::set_dvar_if_unset",
		"util::set_dvar_float_if_unset",
		"util::set_dvar_int_if_unset",
		"util::isstrstart",
		"util::iskillstreaksenabled",
		"util::setusingremote",
		"util::getremotename",
		"util::setobjectivetext",
		"util::setobjectivescoretext",
		"util::setobjectivehinttext",
		"util::getobjectivetext",
		"util::getobjectivescoretext",
		"util::getobjectivehinttext",
		"util::registerroundswitch",
		"util::registerroundlimit",
		"util::registerroundwinlimit",
		"util::registerscorelimit",
		"util::registertimelimit",
		"util::registernumlives",
		"util::getplayerfromclientnum",
		"util::ispressbuild",
		"util::isflashbanged",
		"util::domaxdamage",
		"util::get_array_of_closest",
		"rat::derriesezombiespawnnavmeshtest",
		"idgun::main",
		"zm_ai_clone::register_clientfields",
		"zm_ai_clone::init",
		"zm_ai_clone::precache",
		"zm_weap_staff_revive::onplayerspawned",
		"zm_weap_staff_revive::watch_staff_revive_fired",
		"zm_weap_staff_revive::staff_revive_impact",
		"zm_daily_challenges::on_connect",
		"zm_daily_challenges::on_spawned",
		"zm_daily_challenges::round_tracking",
		"zm_daily_challenges::death_check_for_challenge_updates",
		"zm_daily_challenges::increment_magic_box",
		"zm_daily_challenges::increment_nuked_zombie",
		"zm_daily_challenges::perk_purchase_tracking",
		"zm_ai_mechz::spawn_mechz",
		"zm_elemental_zombie::napalm_zombie_death",
		"zm_powerup_nuke::grab_nuke",
		"zm_powerup_nuke::nuke_powerup",
		"zm_powerup_nuke::nuke_flash",
		"zm_powerup_full_ammo::grab_full_ammo",
		"zm_powerup_full_ammo::full_ammo_powerup",
		"zm_powerup_full_ammo::full_ammo_on_hud",
		"zm_blockers::init_blockers",
		"zm_blockers::door_init",
		"zm_blockers::door_classify",
		"zm_blockers::door_buy",
		"zm_blockers::blocker_update_prompt_visibility",
		"zm_blockers::door_delay",
		"zm_blockers::door_activate",
		"zm_blockers::kill_trapped_zombies",
		"zm_blockers::any_player_touching",
		"zm_blockers::any_player_touching_any",
		"zm_blockers::any_zombie_touching_any",
		"zm_blockers::wait_trigger_clear",
		"zm_blockers::waittill_door_trigger_clear_local_power_off",
		"zm_blockers::waittill_door_trigger_clear_global_power_off",
		"zm_blockers::waittill_door_can_close",
		"zm_blockers::door_think",
		"zm_blockers::self_and_flag_wait",
		"zm_blockers::door_block",
		"zm_blockers::door_opened",
		"zm_blockers::physics_launch_door",
		"zm_blockers::door_solid_thread",
		"zm_blockers::door_solid_thread_anim",
		"zm_blockers::disconnect_paths_when_done",
		"zm_blockers::self_disconnectpaths",
		"zm_blockers::debris_init",
		"zm_blockers::debris_think",
		"zm_blockers::debris_zbarrier_move",
		"zm_blockers::door_zbarrier_move",
		"zm_blockers::move_chunk",
		"zm_blockers::debris_move",
		"zm_blockers::blocker_disconnect_paths",
		"zm_blockers::blocker_connect_paths",
		"zm_blockers::blocker_init",
		"zm_blockers::should_delete_zbarriers",
		"zm_blockers::destructible_glass_barricade",
		"zm_blockers::blocker_attack_spots",
		"zm_blockers::blocker_choke",
		"zm_blockers::blocker_think",
		"zm_blockers::player_fails_blocker_repair_trigger_preamble",
		"zm_blockers::has_blocker_affecting_perk",
		"zm_blockers::do_post_chunk_repair_delay",
		"zm_blockers::handle_post_board_repair_rewards",
		"zm_blockers::blocker_unitrigger_think",
		"zm_blockers::blocker_trigger_think",
		"zm_blockers::increment_window_repaired",
		"zm_blockers::blockertrigger_update_prompt",
		"zm_blockers::blockerstub_update_prompt",
		"zm_blockers::random_destroyed_chunk_show",
		"zm_blockers::door_repaired_rumble_n_sound",
		"zm_blockers::board_completion",
		"zm_blockers::trigger_delete_on_repair",
		"zm_blockers::rebuild_barrier_reward_reset",
		"zm_blockers::remove_chunk",
		"zm_blockers::remove_chunk_rotate_grate",
		"zm_blockers::zombie_boardtear_audio_offset",
		"zm_blockers::zombie_bartear_audio_offset",
		"zm_blockers::ensure_chunk_is_back_to_origin",
		"zm_blockers::replace_chunk",
		"zm_blockers::open_all_zbarriers",
		"zm_blockers::zombie_boardtear_audio_plus_fx_offset_repair_horizontal",
		"zm_blockers::zombie_boardtear_audio_plus_fx_offset_repair_verticle",
		"zm_blockers::zombie_gratetear_audio_plus_fx_offset_repair_horizontal",
		"zm_blockers::zombie_bartear_audio_plus_fx_offset_repair_horizontal",
		"zm_blockers::zombie_bartear_audio_plus_fx_offset_repair_verticle",
		"zm_blockers::flag_blocker",
		"zm_blockers::update_states",
		"zm_blockers::quantum_bomb_open_nearest_door_validation",
		"zm_blockers::quantum_bomb_open_nearest_door_result",
		"zm_hackables_powerups::unhackable_powerup",
		"zm_hackables_powerups::hack_powerups",
		"zm_hackables_powerups::powerup_pickup_watcher",
		"zm_hackables_powerups::powerup_hack",
		"zm_perk_electric_cherry::enable_electric_cherry_perk_for_level",
		"zm_perk_electric_cherry::electric_cherry_precache",
		"zm_perk_electric_cherry::electric_cherry_register_clientfield",
		"zm_perk_electric_cherry::electric_cherry_set_clientfield",
		"zm_perk_electric_cherry::electric_cherry_perk_machine_setup",
		"zm_perk_electric_cherry::electric_cherry_perk_machine_think",
		"zm_perk_electric_cherry::electric_cherry_host_migration_func",
		"zm_perk_electric_cherry::electric_cherry_laststand",
		"zm_perk_electric_cherry::electric_cherry_death_fx",
		"zm_perk_electric_cherry::electric_cherry_shock_fx",
		"zm_perk_electric_cherry::electric_cherry_stun",
		"zm_perk_electric_cherry::electric_cherry_reload_attack",
		"zm_perk_electric_cherry::electric_cherry_cooldown_timer",
		"zm_perk_electric_cherry::check_for_reload_complete",
		"zm_perk_electric_cherry::weapon_replaced_monitor",
		"zm_perk_electric_cherry::electric_cherry_reload_fx",
		"zm_perk_electric_cherry::electric_cherry_perk_lost",
		"zm_perk_sleight_of_hand::sleight_of_hand_precache",
		"zm_perk_sleight_of_hand::sleight_of_hand_register_clientfield",
		"zm_perk_sleight_of_hand::sleight_of_hand_set_clientfield",
		"zm_perk_sleight_of_hand::sleight_of_hand_perk_machine_setup",
		"zm_hackables_packapunch::hack_packapunch",
		"zm_hackables_packapunch::pack_trigger_think",
		"zm_hackables_packapunch::packapunch_hack",
		"zm_game_module_utility::move_ring",
		"zm_game_module_utility::rotate_ring",
		"zm_hackables_doors::door_struct_debug",
		"zm_hackables_doors::hack_doors",
		"zm_hackables_doors::hide_door_buy_when_hacker_active",
		"zm_hackables_doors::watch_door_for_open",
		"zm_hackables_doors::door_hack",
		"zm_hackables_doors::remove_all_door_hackables_that_target_door",
		"zm_pers_upgrades_system::pers_register_upgrade",
		"zm_pers_upgrades_system::add_pers_upgrade_stat",
		"zm_pers_upgrades_system::pers_upgrades_monitor",
		"zm_pers_upgrades_system::wait_for_game_end",
		"zm_pers_upgrades_system::check_pers_upgrade",
		"zm_pers_upgrades_system::is_any_pers_upgrade_stat_updated",
		"zm_pers_upgrades_system::check_pers_upgrade_stat",
		"zm_pers_upgrades_system::round_end",
		"zm_powerup_zombie_blood::init_player_zombie_blood_vars",
		"zm_powerup_zombie_blood::zombie_blood_powerup",
		"zm_powerup_zombie_blood::fx_disconnect_watch",
		"zm_powerup_zombie_blood::watch_zombie_blood_early_exit",
		"zm_powerup_zombie_blood::make_zombie_blood_entity",
		"serversettings::updateserversettings",
		"serversettings::constraingametype",
		"weapon_utils::getbaseweaponparam",
		"spawnlogic::main",
		"spawnlogic::findboxcenter",
		"spawnlogic::expandmins",
		"spawnlogic::expandmaxs",
		"spawnlogic::addspawnpointsinternal",
		"spawnlogic::clearspawnpoints",
		"spawnlogic::addspawnpoints",
		"spawnlogic::rebuildspawnpoints",
		"spawnlogic::placespawnpoints",
		"spawnlogic::dropspawnpoints",
		"spawnlogic::addspawnpointclassname",
		"spawnlogic::addspawnpointteamclassname",
		"spawnlogic::getspawnpointarray",
		"spawnlogic::spawnpointinit",
		"spawnlogic::getteamspawnpoints",
		"spawnlogic::getspawnpoint_final",
		"spawnlogic::finalizespawnpointchoice",
		"spawnlogic::getbestweightedspawnpoint",
		"spawnlogic::checkbad",
		"spawnlogic::badspawnline",
		"spawnlogic::storespawndata",
		"spawnlogic::readspawndata",
		"spawnlogic::drawspawndata",
		"spawnlogic::vectostr",
		"spawnlogic::strtovec",
		"spawnlogic::getspawnpoint_random",
		"spawnlogic::getallotherplayers",
		"spawnlogic::getallalliedandenemyplayers",
		"spawnlogic::initweights",
		"spawnlogic::spawnpointupdate_zm",
		"spawnlogic::getspawnpoint_nearteam",
		"spawnlogic::getspawnpoint_dm",
		"spawnlogic::getspawnpoint_turned",
		"spawnlogic::spawnlogic_begin",
		"spawnlogic::watchspawnprofile",
		"spawnlogic::spawnprofile",
		"spawnlogic::spawngraphcheck",
		"spawnlogic::spawngraph",
		"spawnlogic::drawspawngraph",
		"spawnlogic::setupspawngraphpoint",
		"spawnlogic::spawngraphline",
		"spawnlogic::loopbotspawns",
		"spawnlogic::allowspawndatareading",
		"spawnlogic::showdeathsdebug",
		"spawnlogic::updatedeathinfodebug",
		"spawnlogic::spawnweightdebug",
		"spawnlogic::profiledebug",
		"spawnlogic::debugnearbyplayers",
		"spawnlogic::deathoccured",
		"spawnlogic::checkforsimilardeaths",
		"spawnlogic::updatedeathinfo",
		"spawnlogic::ispointvulnerable",
		"spawnlogic::avoidweapondamage",
		"spawnlogic::spawnperframeupdate",
		"spawnlogic::getnonteamsum",
		"spawnlogic::getnonteammindist",
		"spawnlogic::spawnpointupdate",
		"spawnlogic::getlospenalty",
		"spawnlogic::lastminutesighttraces",
		"spawnlogic::avoidvisibleenemies",
		"spawnlogic::avoidspawnreuse",
		"spawnlogic::avoidsamespawn",
		"spawnlogic::getrandomintermissionpoint",
		"zm_gametype::main",
		"zm_gametype::globallogic_setupdefault_zombiecallbacks",
		"zm_gametype::do_game_mode_shellshock",
		"zm_gametype::canplayersuicide",
		"zm_gametype::onplayerdisconnect",
		"zm_gametype::ondeadevent",
		"zm_gametype::onspawnintermission",
		"zm_gametype::onspawnspectator",
		"zm_gametype::mayspawn",
		"zm_gametype::onstartgametype",
		"zm_gametype::onspawnplayerunified",
		"zm_gametype::onfindvalidspawnpoint",
		"zm_gametype::onspawnplayer",
		"zm_gametype::get_player_spawns_for_gametype",
		"zm_gametype::onendgame",
		"zm_gametype::onroundendgame",
		"zm_gametype::menu_init",
		"zm_gametype::menu_onplayerconnect",
		"zm_gametype::menu_onmenuresponse",
		"zm_gametype::menuallieszombies",
		"zm_gametype::custom_spawn_init_func",
		"zm_gametype::init",
		"zm_gametype::onplayerconnect",
		"zm_gametype::onplayerspawned",
		"zm_gametype::onplayerconnect_check_for_hotjoin",
		"zm_gametype::player_hotjoin",
		"zm_gametype::wait_fade_in",
		"zm_gametype::initialblack",
		"zm_gametype::initialblackend",
		"hud_message::init",
		"hud_message::teamoutcomenotify",
		"hud_message::teamoutcomenotifyzombie",
		"hud_message::outcomenotify",
		"hud_message::wageroutcomenotify",
		"hud_message::teamwageroutcomenotify",
		"hud_message::resetoutcomenotify",
		"hud_message::resetwageroutcomenotify",
		"hud_message::updateoutcome",
		"hud_message::updatewageroutcome",
		"dev::init",
		"dev::on_player_connect",
		"dev::warpalltohost",
		"dev::warpalltoplayer",
		"dev::updatedevsettingszm",
		"dev::updatedevsettings",
		"dev::devgui_spawn_think",
		"dev::devgui_unlimited_ammo",
		"dev::devgui_unlimited_momentum",
		"dev::devgui_increase_momentum",
		"dev::devgui_health_debug",
		"dev::giveextraperks",
		"dev::xkillsy",
		"dev::testscriptruntimeerrorassert",
		"dev::testscriptruntimeerror2",
		"dev::testscriptruntimeerror1",
		"dev::testscriptruntimeerror",
		"dev::testdvars",
		"dev::showonespawnpoint",
		"dev::showspawnpoints",
		"dev::hidespawnpoints",
		"dev::showstartspawnpoints",
		"dev::hidestartspawnpoints",
		"dev::print3duntilnotified",
		"dev::lineuntilnotified",
		"dev::dvar_turned_on",
		"dev::new_hud",
		"dev::set_hudelem",
		"dev::getattachmentchangemodifierbutton",
		"dev::watchattachmentchange",
		"dev::print_weapon_name",
		"dev::set_equipment_list",
		"dev::set_grenade_list",
		"dev::take_all_grenades_and_equipment",
		"dev::equipment_dev_gui",
		"dev::grenade_dev_gui",
		"dev::devstraferunpathdebugdraw",
		"dev::devhelipathdebugdraw",
		"dev::draworiginlines",
		"dev::drawtargetnametext",
		"dev::drawnoteworthytext",
		"dev::draworigintext",
		"dev::drawspeedacceltext",
		"dev::drawpath",
		"dev::drawpathsegment",
		"dev::get_lookat_origin",
		"dev::draw_pathnode",
		"dev::draw_pathnode_think",
		"dev::draw_pathnodes_stop",
		"dev::node_get",
		"dev::dev_get_node_pair",
		"dev::draw_point",
		"dev::point_get",
		"dev::dev_get_point_pair",
		"scoreboard::main",
		"globallogic_defaults::getwinningteamfromloser",
		"globallogic_defaults::default_onforfeit",
		"globallogic_defaults::default_ondeadevent",
		"globallogic_defaults::default_onalivecountchange",
		"globallogic_defaults::default_onroundendgame",
		"globallogic_defaults::default_ononeleftevent",
		"globallogic_defaults::default_ontimelimit",
		"globallogic_defaults::default_onscorelimit",
		"globallogic_defaults::default_onspawnspectator",
		"globallogic_defaults::default_onspawnintermission",
		"globallogic_defaults::default_gettimelimit",
		"globallogic_score::gethighestscoringplayer",
		"globallogic_score::resetscorechain",
		"globallogic_score::scorechaintimer",
		"globallogic_score::roundtonearestfive",
		"globallogic_score::giveplayermomentumnotification",
		"globallogic_score::resetplayermomentumondeath",
		"globallogic_score::giveplayerxpdisplay",
		"globallogic_score::giveplayerscore",
		"globallogic_score::default_onplayerscore",
		"globallogic_score::_setplayerscore",
		"globallogic_score::_getplayerscore",
		"globallogic_score::_setplayermomentum",
		"globallogic_score::_giveplayerkillstreakinternal",
		"globallogic_score::setplayermomentumdebug",
		"globallogic_score::giveteamscore",
		"globallogic_score::giveteamscoreforobjective",
		"globallogic_score::_setteamscore",
		"globallogic_score::resetteamscores",
		"globallogic_score::resetallscores",
		"globallogic_score::resetplayerscores",
		"globallogic_score::updateteamscores",
		"globallogic_score::updateallteamscores",
		"globallogic_score::_getteamscore",
		"globallogic_score::gethighestteamscoreteam",
		"globallogic_score::areteamarraysequal",
		"globallogic_score::onteamscore",
		"globallogic_score::default_onteamscore",
		"globallogic_score::initpersstat",
		"globallogic_score::getpersstat",
		"globallogic_score::incpersstat",
		"globallogic_score::threadedrecordplayerstats",
		"globallogic_score::inckillstreaktracker",
		"globallogic_score::trackattackerkill",
		"globallogic_score::trackattackeedeath",
		"globallogic_score::default_iskillboosting",
		"globallogic_score::givekillstats",
		"globallogic_score::inctotalkills",
		"globallogic_score::setinflictorstat",
		"globallogic_score::processshieldassist",
		"globallogic_score::processassist",
		"globallogic_score::xpratethread",
		"globallogic::init",
		"globallogic::registerdvars",
		"globallogic::blank",
		"globallogic::setupcallbacks",
		"globallogic::precache_mp_leaderboards",
		"globallogic::compareteambygamestat",
		"globallogic::determineteamwinnerbygamestat",
		"globallogic::compareteambyteamscore",
		"globallogic::determineteamwinnerbyteamscore",
		"globallogic::forceend",
		"globallogic::killserverpc",
		"globallogic::someoneoneachteam",
		"globallogic::checkifteamforfeits",
		"globallogic::checkforanyteamforfeit",
		"globallogic::dospawnqueueupdates",
		"globallogic::isteamalldead",
		"globallogic::areallteamsdead",
		"globallogic::alldeadteamcount",
		"globallogic::dodeadeventupdates",
		"globallogic::isonlyoneleftaliveonteam",
		"globallogic::doonelefteventupdates",
		"globallogic::updategameevents",
		"globallogic::matchstarttimer",
		"globallogic::matchstarttimerskip",
		"globallogic::notifyteamwavespawn",
		"globallogic::wavespawntimer",
		"globallogic::hostidledout",
		"globallogic::incrementmatchcompletionstat",
		"globallogic::setmatchcompletionstat",
		"globallogic::displayroundend",
		"globallogic::displayroundswitch",
		"globallogic::displaygameend",
		"globallogic::getendreasontext",
		"globallogic::resetoutcomeforallplayers",
		"globallogic::startnextround",
		"globallogic::getgamelength",
		"globallogic::gamehistoryplayerquit",
		"globallogic::recordzmendgamecomscoreevent",
		"globallogic::endgame",
		"globallogic::bbplayermatchend",
		"globallogic::roundendwait",
		"globallogic::roundenddof",
		"globallogic::checktimelimit",
		"globallogic::allteamsunderscorelimit",
		"globallogic::checkscorelimit",
		"globallogic::updategametypedvars",
		"globallogic::removedisconnectedplayerfromplacement",
		"globallogic::updateplacement",
		"globallogic::updateteamplacement",
		"globallogic::getplacementforplayer",
		"globallogic::sortdeadplayers",
		"globallogic::totalalivecount",
		"globallogic::totalplayerlives",
		"globallogic::initteamvariables",
		"globallogic::resetteamvariables",
		"globallogic::updateteamstatus",
		"globallogic::checkteamscorelimitsoon",
		"globallogic::checkplayerscorelimitsoon",
		"globallogic::startgame",
		"globallogic::waitforplayers",
		"globallogic::prematchperiod",
		"globallogic::graceperiod",
		"globallogic::watchmatchendingsoon",
		"globallogic::assertteamvariables",
		"globallogic::anyteamhaswavedelay",
		"globallogic::callback_startgametype",
		"globallogic::forcedebughostmigration",
		"globallogic::registerfriendlyfiredelay",
		"globallogic::checkroundswitch",
		"globallogic::listenforgameend",
		"globallogic::getkillstreaks",
		"globallogic::updaterankedmatch",
		"globallogic_actor::callback_actorspawned",
		"globallogic_actor::callback_actordamage",
		"globallogic_actor::callback_actorkilled",
		"globallogic_actor::callback_actorcloned",
		"globallogic_audio::init",
		"globallogic_audio::registerdialoggroup",
		"globallogic_audio::sndstartmusicsystem",
		"globallogic_audio::suspensemusicforplayer",
		"globallogic_audio::suspensemusic",
		"globallogic_audio::leaderdialogforotherteams",
		"globallogic_audio::announceroundwinner",
		"globallogic_audio::announcegamewinner",
		"globallogic_audio::doflameaudio",
		"globallogic_audio::leaderdialog",
		"globallogic_audio::leaderdialogallteams",
		"globallogic_audio::flushdialog",
		"globallogic_audio::flushdialogonplayer",
		"globallogic_audio::flushgroupdialog",
		"globallogic_audio::flushgroupdialogonplayer",
		"globallogic_audio::addgroupdialogtoplayer",
		"globallogic_audio::testdialogqueue",
		"globallogic_audio::leaderdialogonplayer",
		"globallogic_audio::waitforsound",
		"globallogic_audio::playleaderdialogonplayer",
		"globallogic_audio::isteamwinning",
		"globallogic_audio::announceteamiswinning",
		"globallogic_audio::musiccontroller",
		"globallogic_audio::musictimesout",
		"globallogic_audio::actionmusicset",
		"globallogic_audio::play_2d_on_team",
		"globallogic_audio::set_music_on_team",
		"globallogic_audio::set_music_on_player",
		"globallogic_audio::return_music_state_player",
		"globallogic_audio::return_music_state_team",
		"globallogic_audio::set_next_music_state",
		"globallogic_audio::getroundswitchdialog",
		"globallogic_audio::post_match_snapshot_watcher",
		"damagefeedback::main",
		"damagefeedback::on_player_connect",
		"damagefeedback::should_play_sound",
		"damagefeedback::updatedamagefeedback",
		"damagefeedback::playhitsound",
		"damagefeedback::updatespecialdamagefeedback",
		"damagefeedback::sendhitspecialeventatframeend",
		"globallogic_ui::setupcallbacks",
		"globallogic_ui::freegameplayhudelems",
		"globallogic_ui::teamplayercountsequal",
		"globallogic_ui::teamwithlowestplayercount",
		"globallogic_ui::menuautoassign",
		"globallogic_ui::teamscoresequal",
		"globallogic_ui::teamwithlowestscore",
		"globallogic_ui::pickteamfromscores",
		"globallogic_ui::getsplitscreenteam",
		"globallogic_ui::updateobjectivetext",
		"globallogic_ui::closemenus",
		"globallogic_ui::beginclasschoice",
		"globallogic_ui::showmainmenuforteam",
		"globallogic_ui::menuteam",
		"globallogic_ui::menuspectator",
		"globallogic_ui::menuclass",
		"globallogic_ui::removespawnmessageshortly",
		"globallogic_vehicle::callback_vehiclespawned",
		"globallogic_vehicle::callback_vehicledamage",
		"globallogic_vehicle::callback_vehicleradiusdamage",
		"globallogic_vehicle::callback_vehiclekilled",
		"globallogic_vehicle::vehiclecrush",
		"globallogic_vehicle::getvehicleunderneathsplashscalar",
		"globallogic_vehicle::allowfriendlyfiredamage",
		"hostmigration::debug_script_structs",
		"hostmigration::updatetimerpausedness",
		"hostmigration::callback_hostmigrationsave",
		"hostmigration::callback_prehostmigrationsave",
		"hostmigration::pausetimer",
		"hostmigration::resumetimer",
		"hostmigration::locktimer",
		"hostmigration::callback_hostmigration",
		"hostmigration::post_migration_become_vulnerable",
		"hostmigration::post_migration_invulnerability",
		"hostmigration::host_migration_respawn",
		"hostmigration::matchstarttimerconsole",
		"hostmigration::matchstartblacscreen",
		"hostmigration::hostmigrationwait",
		"hostmigration::hostmigrationwaitforplayers",
		"hostmigration::hostmigrationtimerthink",
		"hostmigration::waittillhostmigrationdone",
		"hostmigration::waittillhostmigrationstarts",
		"hostmigration::waitlongdurationwithhostmigrationpause",
		"hostmigration::waitlongdurationwithgameendtimeupdate",
		"hostmigration::find_alternate_player_place",
		"hostmigration::hostmigration_put_player_in_better_place",
		"clientids::init",
		"clientids::on_player_connect",
		"globallogic_player::freezeplayerforroundend",
		"globallogic_player::callback_playerconnect",
		"globallogic_player::spectate_player_watcher",
		"globallogic_player::callback_playermigrated",
		"globallogic_player::inform_clientvm_of_migration",
		"globallogic_player::arraytostring",
		"globallogic_player::recordzmendgamecomscoreeventforplayer",
		"globallogic_player::callback_playerdisconnect",
		"globallogic_player::callback_playermelee",
		"globallogic_player::figureoutattacker",
		"globallogic_player::figureoutweapon",
		"globallogic_player::figureoutfriendlyfire",
		"globallogic_player::isplayerimmunetokillstreak",
		"globallogic_player::callback_playerdamage",
		"globallogic_player::resetattackerlist",
		"globallogic_player::dodamagefeedback",
		"globallogic_player::istacticalhitmarker",
		"globallogic_player::doperkfeedback",
		"globallogic_player::isaikillstreakdamage",
		"globallogic_player::finishplayerdamagewrapper",
		"globallogic_player::allowedassistweapon",
		"globallogic_player::callback_playerkilled",
		"globallogic_player::updateglobalbotkilledcounter",
		"globallogic_player::waittillkillstreakdone",
		"globallogic_player::teamkillkick",
		"globallogic_player::teamkilldelay",
		"globallogic_player::shouldteamkillkick",
		"globallogic_player::reduceteamkillsovertime",
		"globallogic_player::ignoreteamkills",
		"globallogic_player::callback_playerlaststand",
		"globallogic_player::damageshellshockandrumble",
		"globallogic_player::createdeadbody",
		"globallogic_player::is_explosive_ragdoll",
		"globallogic_player::start_explosive_ragdoll",
		"globallogic_player::notifyconnecting",
		"globallogic_player::delaystartragdoll",
		"globallogic_player::trackattackerdamage",
		"globallogic_player::giveattackerandinflictorownerassist",
		"globallogic_player::updatemeansofdeath",
		"globallogic_player::updateattacker",
		"globallogic_player::updateinflictor",
		"globallogic_player::updateweapon",
		"globallogic_player::getclosestkillcamentity",
		"globallogic_player::getkillcamentity",
		"globallogic_player::playkillbattlechatter",
		"globallogic_player::recordactiveplayersendgamematchrecordstats",
		"globallogic_utils::testmenu",
		"globallogic_utils::testshock",
		"globallogic_utils::testhps",
		"globallogic_utils::timeuntilroundend",
		"globallogic_utils::gettimeremaining",
		"globallogic_utils::registerpostroundevent",
		"globallogic_utils::executepostroundevents",
		"globallogic_utils::getvalueinrange",
		"globallogic_utils::assertproperplacement",
		"globallogic_utils::isvalidclass",
		"globallogic_utils::playtickingsound",
		"globallogic_utils::stoptickingsound",
		"globallogic_utils::gametimer",
		"globallogic_utils::gettimepassed",
		"globallogic_utils::pausetimer",
		"globallogic_utils::resumetimer",
		"globallogic_utils::getscoreremaining",
		"globallogic_utils::getscoreperminute",
		"globallogic_utils::getestimatedtimeuntilscorelimit",
		"globallogic_utils::rumbler",
		"globallogic_utils::waitfortimeornotify",
		"globallogic_utils::waitfortimeornotifynoartillery",
		"globallogic_utils::isheadshot",
		"globallogic_utils::gethitlocheight",
		"globallogic_utils::debugline",
		"globallogic_utils::isexcluded",
		"globallogic_utils::waitfortimeornotifies",
		"globallogic_utils::logteamwinstring",
		"globallogic_spawn::timeuntilspawn",
		"globallogic_spawn::allteamshaveexisted",
		"globallogic_spawn::mayspawn",
		"globallogic_spawn::timeuntilwavespawn",
		"globallogic_spawn::stoppoisoningandflareonspawn",
		"globallogic_spawn::spawnplayerprediction",
		"globallogic_spawn::giveloadoutlevelspecific",
		"globallogic_spawn::givestartloadout",
		"globallogic_spawn::spawnplayer",
		"globallogic_spawn::spawnspectator",
		"globallogic_spawn::kickwait",
		"globallogic_spawn::spawninterroundintermission",
		"globallogic_spawn::spawnintermission",
		"globallogic_spawn::spawnqueuedclientonteam",
		"globallogic_spawn::spawnqueuedclient",
		"globallogic_spawn::allteamsnearscorelimit",
		"globallogic_spawn::shouldshowrespawnmessage",
		"globallogic_spawn::default_spawnmessage",
		"globallogic_spawn::showspawnmessage",
		"globallogic_spawn::spawnclient",
		"globallogic_spawn::waitandspawnclient",
		"globallogic_spawn::waitrespawnorsafespawnbutton",
		"globallogic_spawn::waitinspawnqueue",
		"globallogic_spawn::setthirdperson",
		"globallogic_spawn::setspawnvariables",
		"spawning::init_spawn_system",
		"spawning::on_player_connecting",
		"spawning::on_player_spawned",
		"spawning::ondeath",
		"spawning::on_joined_team",
		"spawning::ongrenadethrow",
		"spawning::get_friendly_team_mask",
		"spawning::get_enemy_team_mask",
		"spawning::create_influencer",
		"spawning::create_friendly_influencer",
		"spawning::create_enemy_influencer",
		"spawning::create_entity_influencer",
		"spawning::create_entity_friendly_influencer",
		"spawning::create_entity_enemy_influencer",
		"spawning::create_entity_masked_friendly_influencer",
		"spawning::create_entity_masked_enemy_influencer",
		"spawning::create_player_influencers",
		"spawning::remove_influencers",
		"spawning::watch_remove_influencer",
		"spawning::enable_influencers",
		"spawning::enable_player_influencers",
		"spawning::player_influencers_set_team",
		"spawning::create_grenade_influencers",
		"spawning::create_map_placed_influencers",
		"spawning::create_map_placed_influencer",
		"spawning::updateallspawnpoints",
		"spawning::onspawnplayer_unified",
		"spawning::getspawnpoint",
		"spawning::get_debug_spawnpoint",
		"spawning::get_best_spawnpoint",
		"spawning::gatherspawnpoints",
		"spawning::is_hardcore",
		"spawning::teams_have_enmity",
		"spawning::remove_unused_spawn_entities",
		"spawning::delete_all_spawns",
		"spawning::spawn_point_class_name_being_used",
		"spawning::initialspawnprotection",
		"perplayer::init",
		"perplayer::enable",
		"perplayer::disable",
		"perplayer::onplayerconnect",
		"perplayer::onplayerdisconnect",
		"perplayer::onjoinedteam",
		"perplayer::onjoinedspectators",
		"perplayer::onplayerspawned",
		"perplayer::onplayerkilled",
		"perplayer::handleplayer",
		"perplayer::unhandleplayer",
		"shellshock::main",
		"shellshock::on_damage",
		"shellshock::endondeath",
		"shellshock::endontimer",
		"shellshock::rcbomb_earthquake",
		"weapons::init",
		"weapons::onplayerconnect",
		"weapons::onplayerspawned",
		"weapons::watchweaponchange",
		"weapons::watchriotshielduse",
		"weapons::updatelastheldweapontimings",
		"weapons::updateweapontimings",
		"weapons::trackweapon",
		"weapons::maydropweapon",
		"weapons::dropweaponfordeath",
		"weapons::deletepickupafterawhile",
		"weapons::watchpickup",
		"weapons::watchweaponusage",
		"weapons::trackweaponfire",
		"weapons::watchgrenadeusage",
		"weapons::watchmissileusage",
		"weapons::watchmissiledeath",
		"weapons::dropweaponstoground",
		"weapons::dropgrenadestoground",
		"weapons::watchgrenadecancel",
		"weapons::watch_offhand_end",
		"weapons::is_using_offhand_equipment",
		"weapons::begingrenadetracking",
		"weapons::beginothergrenadetracking",
		"weapons::checkstucktoplayer",
		"weapons::checkhatchetbounce",
		"weapons::stucktoplayerteamchange",
		"weapons::watchforthrowbacks",
		"weapons::registergrenadelauncherduddvar",
		"weapons::registerthrowngrenadeduddvar",
		"weapons::registerkillstreakdelay",
		"weapons::turngrenadeintoadud",
		"weapons::watchforgrenadeduds",
		"weapons::watchforgrenadelauncherduds",
		"weapons::getdamageableents",
		"weapons::damageent",
		"weapons::debugline",
		"weapons::onweapondamage",
		"weapons::playconcussionsound",
		"weapons::deleteentonownerdeath",
		"weapons::updatestowedweapon",
		"weapons::loadout_get_class_num",
		"weapons::loadout_get_offhand_weapon",
		"weapons::loadout_get_offhand_count",
		"weapons::scavenger_think",
		"weapons::scavenger_hud_create",
		"weapons::dropscavengerfordeath",
		"weapons::addlimitedweapon",
		"weapons::shoulddroplimitedweapon",
		"weapons::droplimitedweapon",
		"weapons::limitedpickup",
		"spectating::main",
		"spectating::on_player_connecting",
		"spectating::on_player_spawned",
		"spectating::on_joined_team",
		"spectating::on_joined_spectate",
		"spectating::updatespectatesettings",
		"spectating::getsplitscreenteam",
		"spectating::otherlocalplayerstillalive",
		"spectating::allowspectateallteams",
		"spectating::allowspectateallteamsexceptteam",
		"spectating::setspectatepermissions",
		"spectating::setspectatepermissionsformachine",
		"dragon_strike::on_player_connect",
		"dragon_strike::on_player_spawned",
		"dragon_strike::on_player_disconnect",
		"zm_powerup_shield_charge::func_drop_when_players_own",
		"zm_powerup_shield_charge::grab_shield_charge",
		"zm_powerup_shield_charge::shield_charge_powerup",
		"zm_powerup_shield_charge::shield_on_hud",
		"zm_powerup_shield_charge::full_ammo_move_hud",
		"zm_weap_black_hole_bomb::player_give_black_hole_bomb",
		"zm_weap_black_hole_bomb::player_handle_black_hole_bomb",
		"zm_weap_black_hole_bomb::move_valid_poi_to_navmesh",
		"zm_weap_black_hole_bomb::wait_for_attractor_positions_complete",
		"zm_weap_black_hole_bomb::black_hole_bomb_cleanup",
		"zm_weap_black_hole_bomb::black_hole_bomb_corpse_collect",
		"zm_weap_black_hole_bomb::black_hole_bomb_corpse_delete",
		"zm_weap_black_hole_bomb::get_thrown_black_hole_bomb",
		"zm_weap_black_hole_bomb::monitor_zombie_groans",
		"zm_weap_black_hole_bomb::play_zombie_groans",
		"zm_weap_black_hole_bomb::black_hole_bomb_exists",
		"zm_weap_black_hole_bomb::black_hole_bomb_store_movement_anim",
		"zm_weap_black_hole_bomb::black_hole_bomb_being_pulled_fx",
		"zm_weap_black_hole_bomb::black_hole_bomb_event_horizon_death",
		"zm_weap_black_hole_bomb::black_hole_bomb_corpse_hide",
		"zm_weap_black_hole_bomb::black_hole_bomb_throttle_anim_changes",
		"zm_weap_black_hole_bomb::black_hole_bomb_teleport_init",
		"zm_weap_black_hole_bomb::black_hole_bomb_trigger_monitor",
		"zm_weap_black_hole_bomb::black_hole_time_before_teleport",
		"zm_weap_black_hole_bomb::black_hole_teleport_cancel",
		"zm_weap_black_hole_bomb::black_hole_teleport",
		"zm_weap_black_hole_bomb::slightly_delayed_player_response",
		"zm_weap_black_hole_bomb::black_hole_teleport_trigger_thread",
		"zm_weap_black_hole_bomb::black_hole_teleport_add_trigger_to_ent",
		"zm_weap_black_hole_bomb::black_hole_teleport_remove_trigger_from_ent",
		"zm_weap_black_hole_bomb::black_hole_teleport_ent_already_in_trigger",
		"zm_weap_black_hole_bomb::black_hole_bomb_kill_counter",
		"zm_weap_black_hole_bomb::black_hole_bomb_create_exit_portal",
		"zm_weap_black_hole_bomb::black_hole_bomb_exit_clean_up",
		"zm_weap_black_hole_bomb::black_hole_bomb_stolen_by_sam",
		"zm_powerup_island_seed::show_infotext_for_duration",
		"zm_powerup_island_seed::on_player_connect",
		"zm_powerup_island_seed::on_player_spawned",
		"zm_magicbox::treasure_chest_init",
		"zm_magicbox::init_starting_chest_location",
		"zm_magicbox::set_treasure_chest_cost",
		"zm_magicbox::get_chest_pieces",
		"zm_magicbox::boxtrigger_update_prompt",
		"zm_magicbox::boxstub_update_prompt",
		"zm_magicbox::default_magic_box_check_equipment",
		"zm_magicbox::trigger_visible_to_player",
		"zm_magicbox::magicbox_unitrigger_think",
		"zm_magicbox::play_crazi_sound",
		"zm_magicbox::show_chest",
		"zm_magicbox::hide_chest",
		"zm_magicbox::magic_box_zbarrier_leave",
		"zm_magicbox::default_pandora_fx_func",
		"zm_magicbox::default_pandora_show_func",
		"zm_magicbox::unregister_unitrigger_on_kill_think",
		"zm_magicbox::treasure_chest_think",
		"zm_magicbox::watch_for_emp_close",
		"zm_magicbox::can_buy_weapon",
		"zm_magicbox::default_box_move_logic",
		"zm_magicbox::treasure_chest_move",
		"zm_magicbox::fire_sale_fix",
		"zm_magicbox::check_for_desirable_chest_location",
		"zm_magicbox::rotateroll_box",
		"zm_magicbox::verify_chest_is_open",
		"zm_magicbox::treasure_chest_timeout",
		"zm_magicbox::treasure_chest_lid_open",
		"zm_magicbox::treasure_chest_lid_close",
		"zm_magicbox::treasure_chest_canplayerreceiveweapon",
		"zm_magicbox::treasure_chest_chooseweightedrandomweapon",
		"zm_magicbox::weapon_show_hint_choke",
		"zm_magicbox::decide_hide_show_hint",
		"zm_magicbox::get_left_hand_weapon_model_name",
		"zm_magicbox::clean_up_hacked_box",
		"zm_magicbox::treasure_chest_firesale_active",
		"zm_magicbox::treasure_chest_should_move",
		"zm_magicbox::spawn_joker_weapon_model",
		"zm_magicbox::treasure_chest_weapon_locking",
		"zm_magicbox::treasure_chest_weapon_spawn",
		"zm_magicbox::chest_get_min_usage",
		"zm_magicbox::chest_get_max_usage",
		"zm_magicbox::timer_til_despawn",
		"zm_magicbox::treasure_chest_glowfx",
		"zm_magicbox::treasure_chest_give_weapon",
		"zm_magicbox::give_hero_weapon",
		"zm_magicbox::should_upgrade_weapon",
		"zm_magicbox::magic_box_teddy_twitches",
		"zm_magicbox::magic_box_initial",
		"zm_magicbox::magic_box_arrives",
		"zm_magicbox::magic_box_leaves",
		"zm_magicbox::magic_box_opens",
		"zm_magicbox::magic_box_closes",
		"zm_magicbox::magic_box_do_weapon_rise",
		"zm_magicbox::magic_box_do_teddy_flyaway",
		"zm_magicbox::is_chest_active",
		"zm_magicbox::get_magic_box_zbarrier_state",
		"zm_magicbox::set_magic_box_zbarrier_state",
		"zm_magicbox::process_magic_box_zbarrier_state",
		"zm_magicbox::magicbox_host_migration",
		"zm_magicbox::box_encounter_vo",
		"zm_melee_weapon::init",
		"zm_melee_weapon::prepare_stub",
		"zm_melee_weapon::find_melee_weapon",
		"zm_melee_weapon::add_stub",
		"zm_melee_weapon::add_melee_weapon",
		"zm_melee_weapon::set_fallback_weapon",
		"zm_melee_weapon::determine_fallback_weapon",
		"zm_melee_weapon::give_fallback_weapon",
		"zm_melee_weapon::take_fallback_weapon",
		"zm_melee_weapon::player_can_see_weapon_prompt",
		"zm_melee_weapon::spectator_respawn_all",
		"zm_melee_weapon::spectator_respawn",
		"zm_melee_weapon::trigger_hide_all",
		"zm_melee_weapon::trigger_hide",
		"zm_melee_weapon::has_any_ballistic_knife",
		"zm_melee_weapon::has_upgraded_ballistic_knife",
		"zm_melee_weapon::give_ballistic_knife",
		"zm_melee_weapon::change_melee_weapon",
		"zm_melee_weapon::melee_weapon_think",
		"zm_melee_weapon::melee_weapon_show",
		"zm_melee_weapon::award_melee_weapon",
		"zm_melee_weapon::give_melee_weapon",
		"zm_melee_weapon::do_melee_weapon_flourish_begin",
		"zm_melee_weapon::do_melee_weapon_flourish_end",
		"_zm_weap_octobomb::player_give_octobomb_upgraded",
		"_zm_weap_octobomb::player_give_octobomb",
		"_zm_weap_octobomb::player_handle_octobomb",
		"_zm_weap_octobomb::show_briefly",
		"_zm_weap_octobomb::show_owner_on_attack",
		"_zm_weap_octobomb::hide_owner",
		"_zm_weap_octobomb::fakelinkto",
		"_zm_weap_octobomb::grenade_planted",
		"_zm_weap_octobomb::check_octobomb_on_train",
		"_zm_weap_octobomb::player_throw_octobomb",
		"_zm_weap_octobomb::is_on_navmesh",
		"_zm_weap_octobomb::animate_octobomb",
		"_zm_weap_octobomb::move_away_from_edges",
		"_zm_weap_octobomb::grenade_stolen_by_sam",
		"_zm_weap_octobomb::octobomb_cleanup",
		"_zm_weap_octobomb::do_octobomb_sound",
		"_zm_weap_octobomb::do_tentacle_burst",
		"_zm_weap_octobomb::zombie_spore_infect",
		"_zm_weap_octobomb::zombie_explodes",
		"_zm_weap_octobomb::do_tentacle_grab",
		"_zm_weap_octobomb::octo_gib",
		"_zm_weap_octobomb::special_attractor_spawn",
		"_zm_weap_octobomb::vehicle_attractor",
		"_zm_weap_octobomb::vehicle_attractor_damage",
		"_zm_weap_octobomb::parasite_attractor_init",
		"_zm_weap_octobomb::parasite_variables",
		"_zm_weap_octobomb::parasite_attractor",
		"_zm_weap_octobomb::devgui_octobomb_give",
		"_zm_weap_tesla::tesla_devgui_dvar_think",
		"_zm_weap_tesla::tesla_damage_init",
		"_zm_weap_tesla::is_tesla_damage",
		"_zm_weap_tesla::enemy_killed_by_tesla",
		"_zm_weap_tesla::on_player_spawned",
		"_zm_weap_tesla::tesla_sound_thread",
		"_zm_weap_tesla::cleanup_loop_sound",
		"_zm_weap_tesla::tesla_engine_sweets",
		"_zm_weap_tesla::tesla_pvp_thread",
		"_zm_weap_tesla::play_tesla_sound",
		"_zm_weap_tesla::tesla_killstreak_sound",
		"_zm_weap_tesla::tesla_network_choke",
		"_zm_weap_tesla::tesla_zombie_death_response",
		"_zm_weap_tesla::tesla_zombie_damage_response",
		"zm_perk_doubletap2::doubletap2_precache",
		"zm_perk_doubletap2::doubletap2_register_clientfield",
		"zm_perk_doubletap2::doubletap2_set_clientfield",
		"zm_perk_doubletap2::doubletap2_perk_machine_setup",
		"zm_utility::init_utility",
		"zm_utility::is_standard",
		"zm_utility::convertsecondstomilliseconds",
		"zm_utility::is_player",
		"zm_utility::lerp",
		"zm_utility::recalc_zombie_array",
		"zm_utility::init_zombie_run_cycle",
		"zm_utility::change_zombie_run_cycle",
		"zm_utility::make_supersprinter",
		"zm_utility::speed_change_watcher",
		"zm_utility::move_zombie_spawn_location",
		"zm_utility::anchor_delete_failsafe",
		"zm_utility::run_spawn_functions",
		"zm_utility::create_simple_hud",
		"zm_utility::destroy_hud",
		"zm_utility::all_chunks_intact",
		"zm_utility::no_valid_repairable_boards",
		"zm_utility::is_survival",
		"zm_utility::all_chunks_destroyed",
		"zm_utility::check_point_in_playable_area",
		"zm_utility::check_point_in_enabled_zone",
		"zm_utility::random_tan",
		"zm_utility::places_before_decimal",
		"zm_utility::create_zombie_point_of_interest",
		"zm_utility::watch_for_poi_death",
		"zm_utility::debug_draw_new_attractor_positions",
		"zm_utility::create_zombie_point_of_interest_attractor_positions",
		"zm_utility::generated_radius_attract_positions",
		"zm_utility::debug_draw_attractor_positions",
		"zm_utility::debug_draw_claimed_attractor_positions",
		"zm_utility::get_zombie_point_of_interest",
		"zm_utility::activate_zombie_point_of_interest",
		"zm_utility::deactivate_zombie_point_of_interest",
		"zm_utility::assign_zombie_point_of_interest",
		"zm_utility::remove_poi_attractor",
		"zm_utility::array_check_for_dupes_using_compare",
		"zm_utility::poi_locations_equal",
		"zm_utility::add_poi_attractor",
		"zm_utility::can_attract",
		"zm_utility::update_poi_on_death",
		"zm_utility::update_on_poi_removal",
		"zm_utility::invalidate_attractor_pos",
		"zm_utility::remove_poi_from_ignore_list",
		"zm_utility::add_poi_to_ignore_list",
		"zm_utility::default_validate_enemy_path_length",
		"zm_utility::get_closest_valid_player",
		"zm_utility::update_valid_players",
		"zm_utility::is_player_valid",
		"zm_utility::get_number_of_valid_players",
		"zm_utility::in_revive_trigger",
		"zm_utility::get_closest_node",
		"zm_utility::non_destroyed_bar_board_order",
		"zm_utility::non_destroyed_grate_order",
		"zm_utility::non_destroyed_variant1_order",
		"zm_utility::non_destroyed_variant2_order",
		"zm_utility::non_destroyed_variant4_order",
		"zm_utility::non_destroyed_variant5_order",
		"zm_utility::show_grate_pull",
		"zm_utility::get_closest_2d",
		"zm_utility::in_playable_area",
		"zm_utility::get_closest_non_destroyed_chunk",
		"zm_utility::get_random_destroyed_chunk",
		"zm_utility::get_destroyed_repair_grates",
		"zm_utility::get_non_destroyed_chunks",
		"zm_utility::get_non_destroyed_chunks_grate",
		"zm_utility::get_non_destroyed_variant1",
		"zm_utility::get_non_destroyed_variant2",
		"zm_utility::get_non_destroyed_variant4",
		"zm_utility::get_non_destroyed_variant5",
		"zm_utility::get_destroyed_chunks",
		"zm_utility::grate_order_destroyed",
		"zm_utility::show_grate_repair",
		"zm_utility::get_chunk_state",
		"zm_utility::array_limiter",
		"zm_utility::fake_physicslaunch",
		"zm_utility::add_zombie_hint",
		"zm_utility::get_zombie_hint",
		"zm_utility::set_hint_string",
		"zm_utility::get_hint_string",
		"zm_utility::unitrigger_set_hint_string",
		"zm_utility::add_sound",
		"zm_utility::play_sound_at_pos",
		"zm_utility::play_sound_on_ent",
		"zm_utility::play_loopsound_on_ent",
		"zm_utility::string_to_float",
		"zm_utility::set_zombie_var",
		"zm_utility::get_table_var",
		"zm_utility::hudelem_count",
		"zm_utility::debug_round_advancer",
		"zm_utility::print_run_speed",
		"zm_utility::draw_line_ent_to_ent",
		"zm_utility::draw_line_ent_to_pos",
		"zm_utility::debug_print",
		"zm_utility::debug_blocker",
		"zm_utility::print3d_at_pos",
		"zm_utility::debug_breadcrumbs",
		"zm_utility::debug_attack_spots_taken",
		"zm_utility::float_print3d",
		"zm_utility::do_player_vo",
		"zm_utility::is_magic_bullet_shield_enabled",
		"zm_utility::really_play_2d_sound",
		"zm_utility::play_sound_2d",
		"zm_utility::include_weapon",
		"zm_utility::trigger_invisible",
		"zm_utility::print3d_ent",
		"zm_utility::create_counter_hud",
		"zm_utility::get_current_zone",
		"zm_utility::remove_mod_from_methodofdeath",
		"zm_utility::clear_fog_threads",
		"zm_utility::display_message",
		"zm_utility::is_quad",
		"zm_utility::is_leaper",
		"zm_utility::shock_onpain",
		"zm_utility::shock_onexplosion",
		"zm_utility::increment_ignoreme",
		"zm_utility::decrement_ignoreme",
		"zm_utility::increment_is_drinking",
		"zm_utility::is_multiple_drinking",
		"zm_utility::decrement_is_drinking",
		"zm_utility::clear_is_drinking",
		"zm_utility::increment_no_end_game_check",
		"zm_utility::decrement_no_end_game_check",
		"zm_utility::getweaponclasszm",
		"zm_utility::is_player_revive_tool",
		"zm_utility::is_limited_weapon",
		"zm_utility::register_lethal_grenade_for_level",
		"zm_utility::is_lethal_grenade",
		"zm_utility::is_player_lethal_grenade",
		"zm_utility::get_player_lethal_grenade",
		"zm_utility::set_player_lethal_grenade",
		"zm_utility::init_player_lethal_grenade",
		"zm_utility::register_tactical_grenade_for_level",
		"zm_utility::is_tactical_grenade",
		"zm_utility::is_player_tactical_grenade",
		"zm_utility::get_player_tactical_grenade",
		"zm_utility::set_player_tactical_grenade",
		"zm_utility::init_player_tactical_grenade",
		"zm_utility::is_placeable_mine",
		"zm_utility::is_player_placeable_mine",
		"zm_utility::get_player_placeable_mine",
		"zm_utility::set_player_placeable_mine",
		"zm_utility::init_player_placeable_mine",
		"zm_utility::register_melee_weapon_for_level",
		"zm_utility::is_melee_weapon",
		"zm_utility::is_player_melee_weapon",
		"zm_utility::get_player_melee_weapon",
		"zm_utility::set_player_melee_weapon",
		"zm_utility::init_player_melee_weapon",
		"zm_utility::register_hero_weapon_for_level",
		"zm_utility::is_hero_weapon",
		"zm_utility::is_player_hero_weapon",
		"zm_utility::get_player_hero_weapon",
		"zm_utility::set_player_hero_weapon",
		"zm_utility::init_player_hero_weapon",
		"zm_utility::has_player_hero_weapon",
		"zm_utility::should_watch_for_emp",
		"zm_utility::register_offhand_weapons_for_level_defaults",
		"zm_utility::init_player_offhand_weapons",
		"zm_utility::is_offhand_weapon",
		"zm_utility::is_player_offhand_weapon",
		"zm_utility::has_powerup_weapon",
		"zm_utility::has_hero_weapon",
		"zm_utility::give_start_weapon",
		"zm_utility::array_flag_wait_any",
		"zm_utility::array_flag_wait_any_thread",
		"zm_utility::groundpos",
		"zm_utility::groundpos_ignore_water",
		"zm_utility::groundpos_ignore_water_new",
		"zm_utility::self_delete",
		"zm_utility::giveachievement_wrapper",
		"zm_utility::getyaw",
		"zm_utility::getyawtospot",
		"zm_utility::disable_react",
		"zm_utility::enable_react",
		"zm_utility::bullet_attack",
		"zm_utility::pick_up",
		"zm_utility::destroy_ent",
		"zm_utility::waittill_not_moving",
		"zm_utility::get_closest_player",
		"zm_utility::ent_flag_init_ai_standards",
		"zm_utility::ent_flag_wait_ai_standards",
		"zm_utility::flat_angle",
		"zm_utility::clear_run_anim",
		"zm_utility::track_players_intersection_tracker",
		"zm_utility::is_player_looking_at",
		"zm_utility::add_gametype",
		"zm_utility::add_gameloc",
		"zm_utility::get_closest_index",
		"zm_utility::is_valid_zombie_spawn_point",
		"zm_utility::get_closest_index_to_entity",
		"zm_utility::set_gamemode_var",
		"zm_utility::set_gamemode_var_once",
		"zm_utility::set_game_var",
		"zm_utility::set_game_var_once",
		"zm_utility::get_game_var",
		"zm_utility::get_gamemode_var",
		"zm_utility::waittill_subset",
		"zm_utility::is_headshot",
		"zm_utility::is_jumping",
		"zm_utility::is_explosive_damage",
		"zm_utility::sndswitchannouncervox",
		"zm_utility::do_player_general_vox",
		"zm_utility::general_vox_timer",
		"zm_utility::create_vox_timer",
		"zm_utility::play_vox_to_player",
		"zm_utility::is_favorite_weapon",
		"zm_utility::add_vox_response_chance",
		"zm_utility::set_demo_intermission_point",
		"zm_utility::register_map_navcard",
		"zm_utility::does_player_have_map_navcard",
		"zm_utility::does_player_have_correct_navcard",
		"zm_utility::place_navcard",
		"zm_utility::sq_refresh_player_navcard_hud",
		"zm_utility::disable_player_move_states",
		"zm_utility::enable_player_move_states",
		"zm_utility::check_and_create_node_lists",
		"zm_utility::link_nodes",
		"zm_utility::unlink_nodes",
		"zm_utility::spawn_path_node",
		"zm_utility::delete_spawned_path_nodes",
		"zm_utility::respawn_path_nodes",
		"zm_utility::link_nodes_wrapper",
		"zm_utility::unlink_nodes_wrapper",
		"zm_utility::undo_link_changes",
		"zm_utility::redo_link_changes",
		"zm_utility::register_custom_spawner_entry",
		"zm_utility::get_player_weapon_limit",
		"zm_utility::get_player_perk_purchase_limit",
		"zm_utility::can_player_purchase_perk",
		"zm_utility::give_player_all_perks",
		"zm_utility::wait_for_attractor_positions_complete",
		"zm_utility::get_player_index",
		"zm_utility::get_specific_character",
		"zm_utility::zombie_goto_round",
		"zm_utility::is_point_inside_enabled_zone",
		"zm_utility::clear_streamer_hint",
		"zm_utility::wait_clear_streamer_hint",
		"zm_utility::create_streamer_hint",
		"zm_utility::approximate_path_dist",
		"zm_utility::register_slowdown",
		"zm_utility::slowdown_ai",
		"zm_utility::upload_zm_dash_counters",
		"zm_utility::upload_zm_dash_counters_end_game",
		"zm_utility::increment_zm_dash_counter",
		"zm_utility::zm_dash_stats_game_start",
		"zm_utility::zm_dash_stats_game_end",
		"zm_utility::zm_dash_stats_wait_for_consumable_use",
		"zm_auto_turret::auto_turret_think",
		"zm_auto_turret::activate_move_handle",
		"zm_auto_turret::play_no_money_turret_dialog",
		"zm_auto_turret::auto_turret_activate",
		"zm_auto_turret::auto_turret_deactivate",
		"zm_auto_turret::auto_turret_update_timeout",
		"zm_auto_turret::death_check_for_challenge_updates",
		"zm_perk_quick_revive::quick_revive_precache",
		"zm_perk_quick_revive::quick_revive_register_clientfield",
		"zm_perk_quick_revive::quick_revive_set_clientfield",
		"zm_perk_quick_revive::quick_revive_perk_machine_setup",
		"zm_perk_quick_revive::revive_cost_override",
		"zm_perk_quick_revive::turn_revive_on",
		"zm_perk_quick_revive::reenable_quickrevive",
		"zm_perk_quick_revive::update_quick_revive",
		"zm_perk_quick_revive::check_quickrevive_for_hotjoin",
		"zm_perk_quick_revive::revive_solo_fx",
		"zm_perk_quick_revive::disable_quickrevive",
		"zm_perk_quick_revive::unhide_quickrevive",
		"zm_perk_quick_revive::restart_quickrevive",
		"zm_perk_quick_revive::update_quickrevive_power_state",
		"zm_perk_quick_revive::solo_revive_buy_trigger_move",
		"zm_perk_quick_revive::solo_revive_buy_trigger_move_trigger",
		"zm_perk_quick_revive::give_quick_revive_perk",
		"zm_perk_quick_revive::take_quick_revive_perk",
		"zm_ffotd::optimize_for_splitscreen",
		"zm_ai_quad::quaddeathaction",
		"zm_ai_quad::register_overlay",
		"zm_ai_quad::quad_spawn_check",
		"zm_ai_quad::get_quad_spawners",
		"zm_ai_quad::quad_prespawn",
		"zm_ai_quad::init_quad_zombie_fx",
		"zm_ai_quad::quad_location",
		"zm_ai_quad::quad_vox",
		"zm_ai_quad::set_default_attack_properties",
		"zm_ai_quad::quad_thundergun_knockdown",
		"zm_ai_quad::quad_gas_explo_death",
		"zm_ai_quad::quad_death_explo",
		"zm_ai_quad::quad_damage_func",
		"zm_ai_quad::quad_gas_area_of_effect",
		"zm_ai_quad::quad_trail",
		"zm_ai_quad::quad_post_death",
		"zm_ai_quad::quad_killed_override",
		"zm_ai_quad::quad_pre_teleport",
		"zm_ai_quad::quad_post_teleport",
		"destructible::init_explosions",
		"destructible::get_unused_explosion",
		"destructible::physics_explosion_and_rumble",
		"destructible::destructible_event_callback",
		"destructible::simple_explosion",
		"destructible::simple_timed_explosion",
		"destructible::complex_explosion",
		"destructible::destructible_car_explosion",
		"destructible::destructible_car_death_think",
		"destructible::destructible_car_grenade_stuck_think",
		"destructible::destructible_car_grenade_stuck_explode",
		"destructible::destructible_car_hacked_c4",
		"destructible::destructible_car_death_notify",
		"destructible::destructible_car_fire_think",
		"destructible::breakafter",
		"destructible::explosive_incendiary_explosion",
		"destructible::explosive_electrical_explosion",
		"destructible::explosive_concussive_explosion",
		"zm_powerup_weapon_minigun::grab_minigun",
		"zm_powerup_weapon_minigun::init_player_zombie_vars",
		"zm_powerup_weapon_minigun::func_should_drop_minigun",
		"zm_powerup_weapon_minigun::minigun_weapon_powerup",
		"zm_powerup_weapon_minigun::minigun_powerup_last_stand",
		"zm_powerup_weapon_minigun::minigun_countdown",
		"zm_powerup_weapon_minigun::minigun_weapon_powerup_off",
		"zm_powerup_weapon_minigun::minigun_damage_adjust",
		"zm_trap_fire::trap_activate_fire",
		"zm_trap_fire::trap_audio",
		"zm_trap_fire::play_fire_sound",
		"zm_trap_fire::player_damage",
		"zm_trap_fire::damage",
		"mirg2000::is_wonder_weapon",
		"mirg2000::watch_weapon_change",
		"zm_ai_raz::register_clientfields",
		"zm_ai_raz::init",
		"zm_ai_raz::get_favorite_enemy",
		"fx::print_org",
		"fx::gunfireloopfx",
		"fx::gunfireloopfxthread",
		"fx::gunfireloopfxvec",
		"fx::gunfireloopfxvecthread",
		"fx::grenadeexplosionfx",
		"zm_weap_staff_lightning::onplayerspawned",
		"zm_weap_staff_lightning::watch_staff_lightning_fired",
		"zm_weap_staff_lightning::lightning_ball_wait",
		"zm_weap_staff_lightning::staff_lightning_position_source",
		"zm_weap_staff_lightning::staff_lightning_ball_kill_zombies",
		"zm_weap_staff_lightning::staff_lightning_get_valid_targets",
		"zm_weap_staff_lightning::staff_lightning_get_shot_range",
		"zm_weap_staff_lightning::get_lightning_blast_range",
		"zm_weap_staff_lightning::get_lightning_ball_damage_per_sec",
		"zm_weap_staff_lightning::staff_lightning_is_target_valid",
		"zm_weap_staff_lightning::staff_lightning_ball_damage_over_time",
		"zm_weap_staff_lightning::staff_lightning_arc_fx",
		"zm_weap_staff_lightning::staff_lightning_kill_zombie",
		"zm_weap_staff_lightning::staff_lightning_death_fx",
		"zm_weap_staff_lightning::zombie_shock_eyes_network_safe",
		"zm_weap_staff_lightning::zombie_shock_eyes",
		"zm_weap_staff_lightning::staff_lightning_zombie_damage_response",
		"zm_weap_staff_lightning::is_staff_lightning_damage",
		"zm_weap_staff_lightning::staff_lightning_death_event",
		"zm_weap_staff_lightning::stun_zombie",
		"zm_equip_gasmask::on_player_spawned",
		"zm_equip_gasmask::gasmask_removed_watcher_thread",
		"zm_equip_gasmask::gasmask_activation_watcher_thread",
		"zm_equip_gasmask::remove_gasmask_on_player_bleedout",
		"zm_equip_gasmask::remove_gasmask_on_game_over",
		"zm_equip_gasmask::gasmask_active",
		"zm_equip_gasmask::gasmask_debug_print",
		"namespace_c0afbdaf::astrotargetservice",
		"namespace_c0afbdaf::astro_prespawn",
		"namespace_c0afbdaf::init_astro_zombie_fx",
		"namespace_c0afbdaf::astro_zombie_spawn",
		"namespace_c0afbdaf::astro_zombie_total_update",
		"namespace_c0afbdaf::astro_zombie_think",
		"namespace_c0afbdaf::astro_zombie_headbutt_think",
		"namespace_c0afbdaf::astro_restore_move_speed",
		"namespace_c0afbdaf::astro_turn_player",
		"namespace_c0afbdaf::lerp_player_view_to_position",
		"namespace_c0afbdaf::astro_watch_controls",
		"namespace_c0afbdaf::astro_zombie_attack",
		"namespace_c0afbdaf::astro_headbutt_damage",
		"namespace_c0afbdaf::astro_zombie_teleport_enemy",
		"namespace_c0afbdaf::astro_zombie_teleport",
		"namespace_c0afbdaf::astro_zombie_die",
		"namespace_c0afbdaf::astro_delay_delete",
		"namespace_c0afbdaf::astro_player_pulse",
		"namespace_c0afbdaf::astro_actor_damage",
		"namespace_c0afbdaf::astro_nuke_damage",
		"namespace_c0afbdaf::astro_custom_damage",
		"namespace_c0afbdaf::astro_microwavegun_sizzle",
		"namespace_c0afbdaf::astro_zombie_default_enter_level",
		"namespace_c0afbdaf::astro_damage_callback",
		"namespace_c0afbdaf::_debug_astro_health_watch",
		"namespace_c0afbdaf::_debug_astro_print",
		"_zm_weap_raygun_mark3::is_slow_raygun",
		"_zm_weap_raygun_mark3::raygun_vortex_reposition",
		"_zm_weap_raygun_mark3::watch_raygun_impact",
		"_zm_weap_raygun_mark3::start_slow_vortex",
		"_zm_weap_raygun_mark3::pulse_damage",
		"_zm_weap_raygun_mark3::player_vortex_visionset",
		"_zm_weap_raygun_mark3::wait_for_beam_damage",
		"_zm_weap_raygun_mark3::raygun_mark3_damage_response",
		"_zm_weap_raygun_mark3::apply_vortex_fx",
		"_zm_weap_raygun_mark3::disintegrate_zombie",
		"zm_ai_quadrotor::quadrotor_think",
		"zm_ai_quadrotor::follow_ent",
		"zm_ai_quadrotor::quadrotor_start_ai",
		"zm_ai_quadrotor::quadrotor_main",
		"zm_ai_quadrotor::quadrotor_fireupdate",
		"zm_ai_quadrotor::quadrotor_watch_for_game_end",
		"zm_ai_quadrotor::quadrotor_check_move",
		"zm_ai_quadrotor::quadrotor_adjust_goal_for_enemy_height",
		"zm_ai_quadrotor::make_sure_goal_is_well_above_ground",
		"zm_ai_quadrotor::waittill_pathing_done",
		"zm_ai_quadrotor::quadrotor_movementupdate",
		"zm_ai_quadrotor::quadrotor_escape_into_air",
		"zm_ai_quadrotor::quadrotor_get_closest_node",
		"zm_ai_quadrotor::quadrotor_find_new_position",
		"zm_ai_quadrotor::quadrotor_teleport_to_nearest_node",
		"zm_ai_quadrotor::quadrotor_damage",
		"zm_ai_quadrotor::quadrotor_cleanup_fx",
		"zm_ai_quadrotor::quadrotor_death",
		"zm_ai_quadrotor::death_fx",
		"zm_ai_quadrotor::quadrotor_crash_movement",
		"zm_ai_quadrotor::qrotor_dmg_snd",
		"zm_ai_quadrotor::quadrotor_fire_for_time",
		"zm_ai_quadrotor::quadrotor_crash_accel",
		"zm_ai_quadrotor::quadrotor_predicted_collision",
		"zm_ai_quadrotor::quadrotor_collision_player",
		"zm_ai_quadrotor::quadrotor_collision",
		"zm_ai_quadrotor::death_fire_loop_audio",
		"zm_ai_quadrotor::quadrotor_set_team",
		"zm_ai_quadrotor::quadrotor_blink_lights",
		"zm_ai_quadrotor::quadrotor_self_destruct",
		"zm_ai_quadrotor::quadrotor_level_out_for_landing",
		"zm_ai_quadrotor::quadrotor_temp_bullet_shield",
		"zm_ai_quadrotor::death_radius_damage",
		"load::footsteps",
		"load::setup_traversals",
		"load::start_intro_screen_zm",
		"_zm_pack_a_punch::set_state_initial",
		"_zm_pack_a_punch::set_state_leaving",
		"_zm_pack_a_punch::set_state_arriving",
		"zm_weapons::onplayerconnect",
		"zm_weapons::onplayerspawned",
		"zm_weapons::watchforgrenadeduds",
		"zm_weapons::watchforgrenadelauncherduds",
		"zm_weapons::grenade_safe_to_throw",
		"zm_weapons::grenade_safe_to_bounce",
		"zm_weapons::makegrenadedudanddestroy",
		"zm_weapons::checkgrenadefordud",
		"zm_weapons::wait_explode",
		"zm_weapons::wait_timeout",
		"zm_weapons::wait_for_explosion",
		"zm_weapons::watchforscriptexplosion",
		"zm_weapons::get_nonalternate_weapon",
		"zm_weapons::switch_from_alt_weapon",
		"zm_weapons::give_start_weapons",
		"zm_weapons::give_fallback_weapon",
		"zm_weapons::take_fallback_weapon",
		"zm_weapons::switch_back_primary_weapon",
		"zm_weapons::add_retrievable_knife_init_name",
		"zm_weapons::watchweaponusagezm",
		"zm_weapons::trackweaponzm",
		"zm_weapons::updatelastheldweapontimingszm",
		"zm_weapons::updateweapontimingszm",
		"zm_weapons::watchweaponchangezm",
		"zm_weapons::weaponobjects_on_player_connect_override",
		"zm_weapons::createballisticknifewatcher_zm",
		"zm_weapons::default_check_firesale_loc_valid_func",
		"zm_weapons::add_zombie_weapon",
		"zm_weapons::add_attachments",
		"zm_weapons::is_weapon_or_base_included",
		"zm_weapons::include_zombie_weapon",
		"zm_weapons::init_weapons",
		"zm_weapons::add_limited_weapon",
		"zm_weapons::limited_weapon_below_quota",
		"zm_weapons::add_custom_limited_weapon_check",
		"zm_weapons::add_weapon_to_content",
		"zm_weapons::player_can_use_content",
		"zm_weapons::init_spawnable_weapon_upgrade",
		"zm_weapons::add_dynamic_wallbuy",
		"zm_weapons::wall_weapon_update_prompt",
		"zm_weapons::reset_wallbuys",
		"zm_weapons::init_weapon_upgrade",
		"zm_weapons::get_weapon_hint",
		"zm_weapons::get_weapon_cost",
		"zm_weapons::get_ammo_cost",
		"zm_weapons::get_upgraded_ammo_cost",
		"zm_weapons::get_ammo_cost_for_weapon",
		"zm_weapons::get_is_in_box",
		"zm_weapons::get_force_attachments",
		"zm_weapons::weapon_supports_default_attachment",
		"zm_weapons::default_attachment",
		"zm_weapons::weapon_supports_attachments",
		"zm_weapons::random_attachment",
		"zm_weapons::get_attachment_index",
		"zm_weapons::weapon_supports_this_attachment",
		"zm_weapons::get_base_weapon",
		"zm_weapons::get_upgrade_weapon",
		"zm_weapons::can_upgrade_weapon",
		"zm_weapons::weapon_supports_aat",
		"zm_weapons::get_weapon_with_attachments",
		"zm_weapons::has_weapon_or_attachments",
		"zm_weapons::has_upgrade",
		"zm_weapons::has_weapon_or_upgrade",
		"zm_weapons::add_shared_ammo_weapon",
		"zm_weapons::get_shared_ammo_weapon",
		"zm_weapons::get_player_weapon_with_same_base",
		"zm_weapons::get_weapon_hint_ammo",
		"zm_weapons::weapon_set_first_time_hint",
		"zm_weapons::placeable_mine_can_buy_weapon_extra_check_func",
		"zm_weapons::weapon_spawn_think",
		"zm_weapons::should_upgrade_weapon",
		"zm_weapons::show_all_weapon_buys",
		"zm_weapons::weapon_show",
		"zm_weapons::get_pack_a_punch_camo_index",
		"zm_weapons::get_pack_a_punch_weapon_options",
		"zm_weapons::give_build_kit_weapon",
		"zm_weapons::weapon_give",
		"zm_weapons::weapon_take",
		"zm_weapons::play_weapon_vo",
		"zm_weapons::weapon_type_check",
		"zm_weapons::ammo_give",
		"zm_weapons::get_default_weapondata",
		"zm_weapons::get_player_weapondata",
		"zm_weapons::weapon_is_better",
		"zm_weapons::merge_weapons",
		"zm_weapons::weapondata_give",
		"zm_weapons::weapondata_take",
		"zm_weapons::create_loadout",
		"zm_weapons::player_get_loadout",
		"zm_weapons::player_give_loadout",
		"zm_weapons::player_take_loadout",
		"zm_weapons::register_zombie_weapon_callback",
		"zm_weapons::set_stowed_weapon",
		"zm_weapons::clear_stowed_weapon",
		"zm_weapons::suppress_stowed_weapon",
		"zm_weapons::is_wonder_weapon",
		"zm_hackables_boards::hack_boards",
		"zm_hackables_boards::board_hack",
		"zm_hackables_boards::board_qualifier",
		"zm_perk_staminup::staminup_precache",
		"zm_perk_staminup::staminup_register_clientfield",
		"zm_perk_staminup::staminup_set_clientfield",
		"zm_perk_staminup::staminup_perk_machine_setup",
		"zm_light_zombie::light_zombie_death",
		"challenges::init",
		"challenges::challengekills",
		"challenges::challengeactorkills",
		"zm_weap_staff_fire::onplayerspawned",
		"zm_weap_staff_fire::watch_staff_fire_fired",
		"zm_weap_staff_fire::watch_staff_fire_upgrade_fired",
		"zm_weap_staff_fire::fire_spread_shots",
		"zm_weap_staff_fire::fire_staff_area_of_effect",
		"zm_weap_staff_fire::grenade_waittill_still_or_bounce",
		"zm_weap_staff_fire::fire_staff_update_grenade_fuse",
		"zm_weap_staff_fire::fire_additional_shots",
		"zm_weap_staff_fire::staff_fire_zombie_damage_response",
		"zm_weap_staff_fire::is_staff_fire_damage",
		"zm_weap_staff_fire::staff_fire_death_event",
		"zm_weap_staff_fire::on_fire_timeout",
		"zm_weap_staff_fire::flame_damage_fx",
		"zm_weap_staff_fire::zombie_set_and_restore_flame_state",
		"zm_weap_staff_fire::get_impact_damage",
		"zm_weap_staff_fire::get_damage_per_second",
		"zm_weap_staff_fire::get_damage_duration",
		"zm_weap_staff_fire::flame_damage_over_time",
		"zm_weap_staff_fire::mechz_flame_damage",
		"zm_weap_staff_fire::stop_zombie",
		"zm_laststand::laststand_global_init",
		"zm_laststand::player_last_stand_stats",
		"zm_laststand::increment_downed_stat",
		"zm_laststand::playerlaststand",
		"zm_laststand::refire_player_downed",
		"zm_laststand::laststand_disable_player_weapons",
		"zm_laststand::laststand_enable_player_weapons",
		"zm_laststand::laststand_has_players_weapons_returned",
		"zm_laststand::laststand_clean_up_on_disconnect",
		"zm_laststand::laststand_clean_up_reviving_any",
		"zm_laststand::laststand_give_pistol",
		"zm_laststand::wait_switch_weapon",
		"zm_laststand::laststand_bleedout",
		"zm_laststand::bleed_out",
		"zm_laststand::suicide_trigger_spawn",
		"zm_laststand::suicide_trigger_think",
		"zm_laststand::suicide_do_suicide",
		"zm_laststand::can_suicide",
		"zm_laststand::is_suiciding",
		"zm_laststand::revive_trigger_spawn",
		"zm_laststand::revive_trigger_think",
		"zm_laststand::revive_give_back_weapons_wait",
		"zm_laststand::revive_give_back_weapons_when_done",
		"zm_laststand::revive_give_back_weapons",
		"zm_laststand::can_revive",
		"zm_laststand::is_reviving",
		"zm_laststand::is_reviving_any",
		"zm_laststand::revive_get_revive_time",
		"zm_laststand::revive_do_revive",
		"zm_laststand::checkforbleedout",
		"zm_laststand::auto_revive",
		"zm_laststand::remote_revive",
		"zm_laststand::revive_success",
		"zm_laststand::xp_revive_once_per_round",
		"zm_laststand::set_ignoreme",
		"zm_laststand::revive_force_revive",
		"zm_laststand::player_getup_setup",
		"zm_laststand::laststand_getup",
		"zm_laststand::laststand_getup_damage_watcher",
		"zm_laststand::check_for_sacrifice",
		"zm_laststand::check_for_failed_revive",
		"zm_laststand::add_weighted_down",
		"zm_laststand::register_revive_override",
		"zm_laststand::deregister_revive_override",
		"zm_laststand::can_revive_via_override",
		"zm_laststand::is_reviving_via_override",
		"electroball_grenade::register",
		"electroball_grenade::setupkillcament",
		"electroball_grenade::cleanupkillcamentondeath",
		"electroball_grenade::proximitydetonate",
		"electroball_grenade::watchproximitygrenadehitplayer",
		"electroball_grenade::performhudeffects",
		"electroball_grenade::damageplayerinradius",
		"electroball_grenade::proximitydeathwait",
		"electroball_grenade::deleteentonownerdeath",
		"electroball_grenade::deleteentaftertime",
		"electroball_grenade::deleteentontimeout",
		"electroball_grenade::watch_death",
		"electroball_grenade::on_player_spawned",
		"electroball_grenade::on_ai_spawned",
		"electroball_grenade::begin_other_grenade_tracking",
		"zodcompanioninterface::registerzodcompanioninterfaceattributes",
		"zm_powerup_demonic_rune::detect_reentry",
		"_zm_weap_one_inch_punch::widows_wine_knife_override",
		"_zm_weap_one_inch_punch::one_inch_punch_melee_attack",
		"_zm_weap_one_inch_punch::monitor_melee_swipe",
		"_zm_weap_one_inch_punch::is_player_facing",
		"_zm_weap_one_inch_punch::is_oneinch_punch_damage",
		"_zm_weap_one_inch_punch::gib_zombies_head",
		"_zm_weap_one_inch_punch::punch_cooldown",
		"_zm_weap_one_inch_punch::zombie_punch_damage",
		"_zm_weap_one_inch_punch::zombie_punch_death",
		"_zm_weap_one_inch_punch::handle_punch_pain_notetracks",
		"_zm_weap_one_inch_punch::one_inch_punch_take_think",
		"_zm_weap_one_inch_punch::knockdown_zombie_animate",
		"_zm_weap_one_inch_punch::knockdown_zombie_animate_state",
		"_zm_weap_one_inch_punch::get_2d_yaw",
		"zm_powerup_bonus_points_team::grab_bonus_points_team",
		"zm_powerup_bonus_points_team::bonus_points_team_powerup",
		"zm_audio_zhd::snd_zhdegg_activate",
		"zm_audio_zhd::snd_monty_radio",
		"zm_audio_zhd::set_exert_id",
		"bgb::is_active",
		"bgb::is_team_active",
		"bgb::set_timer",
		"bgb::run_timer",
		"bgb::clear_timer",
		"bgb::register_lost_perk_override",
		"bgb::give",
		"bgb::take",
		"bgb::get_enabled",
		"bgb::is_enabled",
		"bgb::is_team_enabled",
		"bgb::actor_damage_override",
		"bgb::vehicle_damage_override",
		"bgb::actor_death_override",
		"bgb::lost_perk_override",
		"bgb::add_to_player_score_override",
		"bgb::suspend_weapon_cycling",
		"bgb::resume_weapon_cycling",
		"bgb::revive_and_return_perk_on_bgb_activation",
		"zm_bgb_respin_cycle::validation",
		"zm_bgb_respin_cycle::activation",
		"zm_bgb_arms_grace::event",
		"zm_bgb_arms_grace::givestartloadout",
		"zm_bgb_reign_drops::validation",
		"zm_bgb_reign_drops::activation",
		"zm_bgb_arsenal_accelerator::enable",
		"zm_bgb_arsenal_accelerator::disable",
		"zm_bgb_extra_credit::activation",
		"zm_bgb_unquenchable::event",
		"zm_bgb_whos_keeping_score::activation",
		"zm_bgb_on_the_house::activation",
		"zm_bgb_disorderly_combat::enable",
		"zm_bgb_disorderly_combat::disable",
		"zm_bgb_disorderly_combat::disable_weapons",
		"zm_bgb_disorderly_combat::has_weapon",
		"zm_bgb_idle_eyes::validation",
		"zm_bgb_idle_eyes::activation",
		"zm_bgb_idle_eyes::deactivate",
		"zm_bgb_lucky_crit::active",
		"zm_bgb_wall_power::event",
		"zm_bgb_burned_out::event",
		"zm_bgb_burned_out::result",
		"zm_bgb_tone_death::event",
		"zm_bgb_tone_death::actor_death_override",
		"zm_bgb_alchemical_antithesis::validation",
		"zm_bgb_alchemical_antithesis::activation",
		"zm_bgb_alchemical_antithesis::add_to_player_score_override",
		"zm_bgb_perkaholic::event",
		"zm_bgb_soda_fountain::event",
		"zm_bgb_self_medication::event",
		"zm_bgb_self_medication::validation",
		"zm_bgb_self_medication::actor_death_override",
		"zm_bgb_flavor_hexed::event",
		"zm_bgb_projectile_vomiting::enable",
		"zm_bgb_projectile_vomiting::disable",
		"zm_bgb_projectile_vomiting::actor_death_override",
		"zm_bgb_coagulant::enable",
		"zm_bgb_coagulant::disable",
		"zm_bgb_sword_flay::enable",
		"zm_bgb_sword_flay::disable",
		"zm_bgb_sword_flay::actor_damage_override",
		"zm_bgb_sword_flay::vehicle_damage_override",
		"zm_bgb_aftertaste::lost_perk_override",
		"zm_bgb_aftertaste::event",
		"zm_bgb_near_death_experience::enable",
		"zm_bgb_near_death_experience::disable",
		"zm_bgb_near_death_experience::on_connect",
		"zm_bgb_near_death_experience::lost_perk_override",
		"zm_bgb_eye_candy::validation",
		"zm_bgb_eye_candy::activation",
		"zm_bgb_newtonian_negation::enable",
		"zm_bgb_newtonian_negation::disable",
		"zm_bgb_impatient::event",
		"zm_bgb_bullet_boost::validation",
		"zm_bgb_bullet_boost::activation",
		"zm_bgb_stock_option::enable",
		"zm_bgb_stock_option::disable",
		"zm_bgb_always_done_swiftly::enable",
		"zm_bgb_always_done_swiftly::disable",
		"zm_bgb_crate_power::event",
		"zm_bgb_head_drama::enable",
		"zm_bgb_head_drama::disable",
		"zm_bgb_fatal_contraption::activation",
		"zm_bgb_in_plain_sight::validation",
		"zm_bgb_in_plain_sight::activation",
		"zm_bgb_shopping_free::enable",
		"zm_bgb_shopping_free::disable",
		"zm_bgb_crawl_space::activation",
		"zm_bgb_ephemeral_enhancement::validation",
		"zm_bgb_ephemeral_enhancement::activation",
		"zm_bgb_unbearable::event",
		"zm_bgb_dead_of_nuclear_winter::activation",
		"zm_bgb_slaughter_slide::event",
		"zm_bgb_slaughter_slide::is_sliding",
		"zm_bgb_slaughter_slide::actor_damage_override",
		"zm_bgb_slaughter_slide::vehicle_damage_override",
		"zm_bgb_secret_shopper::enable",
		"zm_bgb_secret_shopper::disable",
		"zm_bgb_board_to_death::enable",
		"zm_bgb_board_to_death::disable",
		"zm_bgb_temporal_gift::enable",
		"zm_bgb_temporal_gift::disable",
		"zm_bgb_round_robbin::validation",
		"zm_bgb_round_robbin::activation",
		"zm_bgb_undead_man_walking::enable",
		"zm_bgb_phoenix_up::validation",
		"zm_bgb_phoenix_up::activation",
		"zm_bgb_phoenix_up::lost_perk_override",
		"zm_bgb_pop_shocks::event",
		"zm_bgb_pop_shocks::actor_damage_override",
		"zm_bgb_pop_shocks::vehicle_damage_override",
		"zm_bgb_pop_shocks::electrocute_actor",
		"zm_bgb_pop_shocks::tesla_death",
		"zm_bgb_cache_back::activation",
		"zm_bgb_profit_sharing::enable",
		"zm_bgb_profit_sharing::disable",
		"zm_bgb_profit_sharing::add_to_player_score_override",
		"zm_bgb_anywhere_but_here::activation",
		"zm_bgb_anywhere_but_here::validation",
		"zm_bgb_im_feelin_lucky::activation",
		"zm_bgb_fear_in_headlights::validation",
		"zm_bgb_fear_in_headlights::activation",
		"_zm_weap_cymbal_monkey::init",
		"_zm_weap_cymbal_monkey::player_give_cymbal_monkey",
		"_zm_weap_cymbal_monkey::player_give_cymbal_monkey_upgraded",
		"_zm_weap_cymbal_monkey::player_handle_cymbal_monkey",
		"_zm_weap_cymbal_monkey::watch_for_dud",
		"_zm_weap_cymbal_monkey::watch_for_emp",
		"_zm_weap_cymbal_monkey::clone_player_angles",
		"_zm_weap_cymbal_monkey::show_briefly",
		"_zm_weap_cymbal_monkey::show_owner_on_attack",
		"_zm_weap_cymbal_monkey::hide_owner",
		"_zm_weap_cymbal_monkey::proximity_detonate",
		"_zm_weap_cymbal_monkey::fakelinkto",
		"_zm_weap_cymbal_monkey::player_throw_cymbal_monkey",
		"_zm_weap_cymbal_monkey::move_valid_poi_to_navmesh",
		"_zm_weap_cymbal_monkey::grenade_stolen_by_sam",
		"_zm_weap_cymbal_monkey::monkey_cleanup",
		"_zm_weap_cymbal_monkey::pulse_damage",
		"_zm_weap_cymbal_monkey::do_monkey_sound",
		"_zm_weap_cymbal_monkey::play_delayed_explode_vox",
		"_zm_weap_cymbal_monkey::get_thrown_monkey",
		"_zm_weap_cymbal_monkey::monitor_zombie_groans",
		"_zm_weap_cymbal_monkey::play_zombie_groans",
		"_zm_weap_cymbal_monkey::cymbal_monkey_exists",
		"zm_jump_pad::jump_pad_init",
		"zm_jump_pad::jump_pad_player_variables",
		"zm_jump_pad::jump_pad_think",
		"zm_jump_pad::delayed_jump_pad_start",
		"zm_jump_pad::jump_pad_start",
		"zm_jump_pad::jump_pad_cancel",
		"zm_jump_pad::jump_pad_move",
		"zm_jump_pad::disconnect_failsafe_pad_poi_clean",
		"zm_jump_pad::failsafe_pad_poi_clean",
		"zm_jump_pad::jump_pad_enemy_follow_or_ignore",
		"zm_jump_pad::jump_pad_ignore_poi_cleanup",
		"zm_jump_pad::stop_chasing_the_sky",
		"zm_jump_pad::jump_pad_player_overrides",
		"callback::setup_callbacks",
		"callback::setdefaultcallbacks",
		"bgb_machine::trigger_visible_to_player",
		"bgb_machine::turn_on_fire_sale",
		"bgb_machine::fire_sale_fix",
		"zm_hackables_perks::hack_perks",
		"zm_hackables_perks::solo_revive_expire_func",
		"zm_hackables_perks::perk_hack_qualifier",
		"zm_hackables_perks::perk_hack",
		"zm_power::debug_powered_items",
		"zm_power::electric_switch_init",
		"zm_power::electric_switch",
		"zm_power::watch_global_power",
		"zm_power::standard_powered_items",
		"zm_power::zone_controlled_perk",
		"zm_power::add_powered_item",
		"zm_power::remove_powered_item",
		"zm_power::add_temp_powered_item",
		"zm_power::watch_temp_powered_item",
		"zm_power::change_power_in_radius",
		"zm_power::change_power",
		"zm_power::revert_power_to_list",
		"zm_power::revert_power",
		"zm_power::add_local_power",
		"zm_power::move_local_power",
		"zm_power::end_local_power",
		"zm_power::has_local_power",
		"zm_power::get_powered_item_cost",
		"zm_power::get_local_power_cost",
		"zm_power::set_global_power",
		"zm_power::global_power",
		"zm_power::never_power_on",
		"zm_power::never_power_off",
		"zm_power::cost_negligible",
		"zm_power::cost_low_if_local",
		"zm_power::cost_high",
		"zm_power::door_range",
		"zm_power::door_power_on",
		"zm_power::door_power_off",
		"zm_power::door_local_power_on",
		"zm_power::door_local_power_off",
		"zm_power::cost_door",
		"zm_power::zombie_range",
		"zm_power::zombie_power_off",
		"zm_power::stun_zombie",
		"zm_power::perk_range",
		"zm_power::perk_power_on",
		"zm_power::perk_power_off",
		"zm_power::turn_power_on_and_open_doors",
		"zm_power::turn_power_off_and_close_doors",
		"zm_spawner::init",
		"zm_spawner::debug_show_exterior_goals",
		"zm_spawner::player_attacks_enemy",
		"zm_spawner::player_attacker",
		"zm_spawner::enemy_death_detection",
		"zm_spawner::is_spawner_targeted_by_blocker",
		"zm_spawner::add_custom_zombie_spawn_logic",
		"zm_spawner::zombie_spawn_init",
		"zm_spawner::zombie_damage_failsafe",
		"zm_spawner::should_skip_teardown",
		"zm_spawner::zombie_findnodes",
		"zm_spawner::zombie_think",
		"zm_spawner::zombie_entered_playable",
		"zm_spawner::zombie_goto_entrance",
		"zm_spawner::zombie_assure_node",
		"zm_spawner::zombie_bad_path",
		"zm_spawner::zombie_bad_path_notify",
		"zm_spawner::zombie_bad_path_timeout",
		"zm_spawner::tear_into_building",
		"zm_spawner::do_a_taunt",
		"zm_spawner::taunt_notetracks",
		"zm_spawner::should_attack_player_thru_boards",
		"zm_spawner::window_notetracks",
		"zm_spawner::get_attack_spot",
		"zm_spawner::get_attack_spot_index",
		"zm_spawner::zombie_tear_notetracks",
		"zm_spawner::zombie_boardtear_offset_fx_horizontle",
		"zm_spawner::zombie_boardtear_offset_fx_verticle",
		"zm_spawner::zombie_bartear_offset_fx_verticle",
		"zm_spawner::zombie_bartear_offset_fx_horizontle",
		"zm_spawner::check_zbarrier_piece_for_zombie_inert",
		"zm_spawner::check_zbarrier_piece_for_zombie_death",
		"zm_spawner::check_for_zombie_death",
		"zm_spawner::player_can_score_from_zombies",
		"zm_spawner::zombie_can_drop_powerups",
		"zm_spawner::zombie_delay_powerup_drop",
		"zm_spawner::zombie_death_points",
		"zm_spawner::get_number_variants",
		"zm_spawner::dragons_breath_flame_death_fx",
		"zm_spawner::zombie_ragdoll_then_explode",
		"zm_spawner::zombie_death_animscript",
		"zm_spawner::check_zombie_death_animscript_callbacks",
		"zm_spawner::register_zombie_death_animscript_callback",
		"zm_spawner::damage_on_fire",
		"zm_spawner::player_using_hi_score_weapon",
		"zm_spawner::zombie_damage",
		"zm_spawner::zombie_damage_ads",
		"zm_spawner::check_zombie_damage_callbacks",
		"zm_spawner::register_zombie_damage_callback",
		"zm_spawner::zombie_give_flame_damage_points",
		"zm_spawner::zombie_flame_damage",
		"zm_spawner::is_weapon_shotgun",
		"zm_spawner::zombie_explodes_intopieces",
		"zm_spawner::zombie_death_event",
		"zm_spawner::check_zombie_death_event_callbacks",
		"zm_spawner::register_zombie_death_event_callback",
		"zm_spawner::deregister_zombie_death_event_callback",
		"zm_spawner::zombie_setup_attack_properties",
		"zm_spawner::attractors_generated_listener",
		"zm_spawner::zombie_pathing",
		"zm_spawner::zombie_pathing_get_breadcrumb",
		"zm_spawner::crumb_is_bad",
		"zm_spawner::jitter_enemies_bad_breadcrumbs",
		"zm_spawner::zombie_repath_notifier",
		"zm_spawner::zombie_follow_enemy",
		"zm_spawner::zombie_history",
		"zm_spawner::do_zombie_spawn",
		"zm_spawner::draw_zone_spawned_from",
		"zm_spawner::do_zombie_rise",
		"zm_spawner::zombie_rise_fx",
		"zm_spawner::zombie_rise_burst_fx",
		"zm_spawner::zombie_rise_dust_fx",
		"zm_spawner::stop_zombie_rise_dust_fx",
		"zm_spawner::zombie_tesla_head_gib",
		"zm_spawner::play_ambient_zombie_vocals",
		"zm_spawner::zombie_complete_emerging_into_playable_area",
		"zm_spawner::zombie_free_cam_allowed",
		"zm_spawner::zombie_push",
		"namespace_48e69557::on_player_connect",
		"namespace_48e69557::on_player_spawned",
		"namespace_48e69557::player_watch_ammo_change",
		"namespace_48e69557::player_watch_max_ammo",
		"namespace_48e69557::check_weapon_ammo",
		"namespace_48e69557::player_watch_shield_juke",
		"namespace_48e69557::riotshield_melee_juke",
		"namespace_48e69557::riotshield_get_juke_enemies_in_range",
		"namespace_48e69557::spawn_recharge_tanks",
		"namespace_48e69557::create_bottle_unitrigger",
		"namespace_48e69557::bottle_trigger_visibility",
		"namespace_48e69557::shield_recharge_trigger_think",
		"namespace_48e69557::bottle_trigger_activate",
		"namespace_48e69557::detect_reentry",
		"zm_weap_glaive::get_correct_sword_for_player_character_at_level",
		"zm_weap_glaive::electrocute_actor",
		"zm_weap_glaive::tesla_death",
		"zm_weap_glaive::disabled_sword",
		"zm_weap_glaive::sword_power_hud",
		"zm_ai_napalm::registerbehaviorscriptfunctions",
		"zm_ai_napalm::_napalm_initsounds",
		"zm_ai_napalm::_entity_in_zone",
		"zm_ai_napalm::init_napalm_fx",
		"zm_ai_napalm::napalm_zombie_death",
		"zm_ai_napalm::napalm_delay_delete",
		"zm_ai_napalm::_napalm_damage_zombies",
		"zm_ai_napalm::_napalm_damage_players",
		"zm_ai_napalm::napalm_fire_trigger",
		"zm_ai_napalm::triggerdamage",
		"zm_ai_napalm::kill_with_fire",
		"zm_ai_napalm::zombie_flame_watch",
		"zm_ai_napalm::array_remove",
		"zm_ai_napalm::_zombie_setupfxonjoint",
		"zm_ai_napalm::_napalm_shrink",
		"zm_ai_napalm::_napalm_unshrink",
		"zm_ai_napalm::_napalm_damage_callback",
		"zm_ai_napalm::_napalm_zombie_damage",
		"zm_ai_napalm::napalm_zombie_count_watch",
		"zm_ai_napalm::napalm_clear_radius_fx_all_players",
		"zm_ai_napalm::exit_napalm_radius",
		"zm_ai_napalm::napalm_enter_water_trigger",
		"zm_ai_napalm::napalm_add_wet_time",
		"zm_ai_napalm::napalm_watch_for_sliding",
		"zm_ai_napalm::napalm_standing_in_water",
		"zm_ai_napalm::napalm_monkey_bolt_taunts",
		"zm_server_throttle::server_choke_init",
		"zm_server_throttle::server_choke_thread",
		"zm_server_throttle::server_choke_safe",
		"zm_server_throttle::server_choke_action",
		"zm_server_throttle::server_entity_valid",
		"zm_server_throttle::server_safe_init",
		"zm_server_throttle::_server_safe_ground_trace",
		"zm_server_throttle::server_safe_ground_trace",
		"zm_server_throttle::_server_safe_ground_trace_ignore_water",
		"zm_server_throttle::server_safe_ground_trace_ignore_water",
		"keeper_skull::watch_player_death",
		"keeper_skull::watch_weapon_change",
		"zm_clone::spawn_player_clone",
		"zm_clone::clone_damage_func",
		"zm_clone::clone_give_weapon",
		"zm_clone::clone_animate",
		"zm_clone::clone_actor_animate",
		"zm_clone::clone_mover_animate",
		"zm_equip_hacker::hacker_round_reward",
		"zm_equip_hacker::hacker_debug",
		"zm_equip_hacker::hacker_trigger_pool_think",
		"zm_equip_hacker::destroy_pooled_items",
		"zm_equip_hacker::sweep_pooled_items",
		"zm_equip_hacker::should_pooled_object_exist",
		"zm_equip_hacker::add_eligable_pooled_items",
		"zm_equip_hacker::get_hackable_trigger",
		"zm_equip_hacker::any_hackers_active",
		"zm_equip_hacker::register_hackable",
		"zm_equip_hacker::register_hackable_struct",
		"zm_equip_hacker::register_pooled_hackable_struct",
		"zm_equip_hacker::register_pooled_hackable",
		"zm_equip_hacker::deregister_hackable_struct",
		"zm_equip_hacker::deregister_hackable",
		"zm_equip_hacker::hack_trigger_think",
		"zm_equip_hacker::is_facing",
		"zm_equip_hacker::can_hack",
		"zm_equip_hacker::is_hacking",
		"zm_equip_hacker::set_hack_hint_string",
		"zm_equip_hacker::tidy_on_deregister",
		"zm_equip_hacker::hacker_do_hack",
		"zm_equip_hacker::lowreadywatcher",
		"zm_equip_hacker::hackable_object_thread",
		"zm_equip_hacker::hacker_on_player_connect",
		"zm_equip_hacker::player_hack_disconnect_watcher",
		"zm_equip_hacker::player_hack",
		"zm_equip_hacker::player_qualifier",
		"zm_equip_hacker::hide_hint_when_hackers_active",
		"zm_equip_hacker::hacker_debug_print",
		"zm_ai_thrasher::register_clientfields",
		"zm_ai_thrasher::init",
		"zm_ai_thrasher::precache",
		"zm_ai_thrasher::spawn_thrasher",
		"zm_trap_electric::trap_activate_electric",
		"zm_trap_electric::trap_audio",
		"zm_trap_electric::play_electrical_sound",
		"zm_trap_electric::player_damage",
		"zm_trap_electric::damage",
		"zm_powerup_fire_sale::grab_fire_sale",
		"zm_powerup_fire_sale::start_fire_sale",
		"zm_powerup_fire_sale::check_to_clear_fire_sale",
		"zm_powerup_fire_sale::firesale_chest_is_leaving",
		"zm_powerup_fire_sale::toggle_fire_sale_on",
		"zm_powerup_fire_sale::apply_fire_sale_to_chest",
		"zm_powerup_fire_sale::remove_temp_chest",
		"zm_powerup_fire_sale::func_should_drop_fire_sale",
		"zm_powerup_fire_sale::sndfiresalemusic_start",
		"zm_powerup_fire_sale::sndfiresalemusic_stop",
		"zm_sidequests::init_sidequests",
		"zm_sidequests::is_sidequest_allowed",
		"zm_sidequests::sidequest_debug",
		"zm_sidequests::damager_trigger_thread",
		"zm_sidequests::damage_trigger_thread",
		"zm_sidequests::sidequest_uses_teleportation",
		"zm_sidequests::add_sidequest_icon",
		"zm_sidequests::remove_sidequest_icon",
		"zm_sidequests::declare_sidequest",
		"zm_sidequests::declare_sidequest_stage",
		"zm_sidequests::set_stage_time_limit",
		"zm_sidequests::declare_stage_asset_from_struct",
		"zm_sidequests::declare_stage_title",
		"zm_sidequests::declare_stage_asset",
		"zm_sidequests::declare_sidequest_asset",
		"zm_sidequests::declare_sidequest_asset_from_struct",
		"zm_sidequests::build_asset_from_struct",
		"zm_sidequests::delete_stage_assets",
		"zm_sidequests::build_assets",
		"zm_sidequests::radius_trigger_thread",
		"zm_sidequests::thread_on_assets",
		"zm_sidequests::stage_logic_func_wrapper",
		"zm_sidequests::sidequest_start",
		"zm_sidequests::stage_start",
		"zm_sidequests::display_stage_title",
		"zm_sidequests::time_limited_stage",
		"zm_sidequests::sidequest_println",
		"zm_sidequests::precache_sidequest_assets",
		"zm_sidequests::sidequest_complete",
		"zm_sidequests::stage_completed",
		"zm_sidequests::stage_failed",
		"zm_sidequests::get_sidequest_stage",
		"zm_sidequests::get_damage_trigger",
		"zm_sidequests::dam_trigger_thread",
		"zm_sidequests::use_trigger_thread",
		"zm_sidequests::sidequest_stage_active",
		"zm_sidequests::sidequest_start_next_stage",
		"zm_sidequests::main",
		"zm_sidequests::is_facing",
		"zm_sidequests::fake_use",
		"lightning_chain::arc_damage",
		"lightning_chain::lc_play_arc_fx",
		"zm_weap_quantum_bomb::init",
		"zm_weap_quantum_bomb::quantum_bomb_debug_print_ln",
		"zm_weap_quantum_bomb::quantum_bomb_debug_print_bold",
		"zm_weap_quantum_bomb::quantum_bomb_debug_print_3d",
		"zm_weap_quantum_bomb::quantum_bomb_register_result",
		"zm_weap_quantum_bomb::quantum_bomb_deregister_result",
		"zm_weap_quantum_bomb::quantum_bomb_play_area_effect",
		"zm_weap_quantum_bomb::quantum_bomb_play_player_effect",
		"zm_weap_quantum_bomb::quantum_bomb_play_player_effect_at_position",
		"zm_weap_quantum_bomb::quantum_bomb_play_mystery_effect",
		"zm_weap_quantum_bomb::quantum_bomb_clear_cached_data",
		"zm_weap_quantum_bomb::quantum_bomb_select_result",
		"zm_weap_quantum_bomb::player_give_quantum_bomb",
		"zm_weap_quantum_bomb::player_handle_quantum_bomb",
		"zm_weap_quantum_bomb::quantum_bomb_exists",
		"zm_weap_quantum_bomb::get_thrown_quantum_bomb",
		"zm_weap_quantum_bomb::quantum_bomb_default_validation",
		"zm_weap_quantum_bomb::quantum_bomb_get_cached_closest_zombies",
		"zm_weap_quantum_bomb::quantum_bomb_get_cached_in_playable_area",
		"zm_weap_quantum_bomb::quantum_bomb_in_playable_area_validation",
		"zm_weap_quantum_bomb::quantum_bomb_lethal_grenade_result",
		"zm_weap_quantum_bomb::quantum_bomb_random_weapon_starburst_result",
		"zm_weap_quantum_bomb::quantum_bomb_pack_or_unpack_current_weapon_validation",
		"zm_weap_quantum_bomb::quantum_bomb_pack_or_unpack_current_weapon_result",
		"zm_weap_quantum_bomb::quantum_bomb_auto_revive_validation",
		"zm_weap_quantum_bomb::quantum_bomb_auto_revive_result",
		"zm_weap_quantum_bomb::quantum_bomb_player_teleport_result",
		"zm_weap_quantum_bomb::quantum_bomb_teleport_player",
		"zm_weap_quantum_bomb::quantum_bomb_teleport",
		"zm_weap_quantum_bomb::quantum_bomb_slightly_delayed_player_response",
		"zm_weap_quantum_bomb::quantum_bomb_zombie_speed_buff_result",
		"zm_weap_quantum_bomb::quantum_bomb_zombie_fling_result",
		"zm_weap_quantum_bomb::quantum_bomb_fling_zombie",
		"zm_weap_quantum_bomb::quantum_bomb_zombie_add_to_total_validation",
		"zm_weap_quantum_bomb::quantum_bomb_zombie_add_to_total_result",
		"zm_powerup_ww_grenade::grab_ww_grenade",
		"zm_powerup_ww_grenade::ww_grenade_powerup",
		"zm_powerup_ww_grenade::detect_reentry",
		"zm_perk_random::create_perk_random_machine_unitrigger_stub",
		"zm_perk_random::perk_random_machine_trigger_update_prompt",
		"zm_perk_random::perk_random_machine_stub_update_prompt",
		"zm_perk_random::trigger_visible_to_player",
		"zm_perk_random::player_has_all_available_perks",
		"zm_perk_random::can_buy_perk",
		"zm_perk_random::perk_random_unitrigger_think",
		"zm_perk_random::machine_think",
		"zm_perk_random::grab_check",
		"zm_perk_random::monitor_when_player_acquires_perk",
		"zm_perk_random::time_out_check",
		"zm_perk_random::wait_for_power",
		"zm_perk_random::machine_selector",
		"zm_perk_random::include_perk_in_random_rotation",
		"zm_perk_random::get_weighted_random_perk",
		"zm_perk_random::perk_bottle_motion",
		"zm_perk_random::start_perk_bottle_cycling",
		"zm_perk_random::get_perk_weapon_model",
		"zm_perk_random::perk_random_vending",
		"zm_perk_random::perk_random_loop_anim",
		"zm_perk_random::perk_random_vend_sfx",
		"zm_perk_random::perk_random_initial",
		"zm_perk_random::perk_random_idle",
		"zm_perk_random::perk_random_arrive",
		"zm_perk_random::perk_random_leaving",
		"zm_perk_random::set_perk_random_machine_state",
		"zm_perk_random::process_perk_random_machine_state",
		"zm_perk_random::machine_sounds",
		"zm_perk_random::getweaponmodel",
		"zm_perk_random::is_power_on",
		"zm_perk_random::setup_devgui",
		"zm_perk_random::wunderfizz_devgui_callback",
		"zm_net::network_choke_init",
		"zm_net::network_choke_thread",
		"zm_net::network_choke_safe",
		"zm_net::network_choke_action",
		"zm_net::network_entity_valid",
		"zm_net::network_safe_init",
		"zm_net::_network_safe_spawn",
		"zm_net::network_safe_spawn",
		"zm_net::_network_safe_play_fx_on_tag",
		"zm_net::network_safe_play_fx_on_tag",
		"zm_pers_upgrades::pers_upgrade_init",
		"zm_pers_upgrades::pers_abilities_init_globals",
		"zm_pers_upgrades::is_pers_system_active",
		"zm_pers_upgrades::is_pers_system_disabled",
		"zm_pers_upgrades::setup_pers_upgrade_boards",
		"zm_pers_upgrades::setup_pers_upgrade_revive",
		"zm_pers_upgrades::setup_pers_upgrade_multi_kill_headshots",
		"zm_pers_upgrades::setup_pers_upgrade_cash_back",
		"zm_pers_upgrades::setup_pers_upgrade_insta_kill",
		"zm_pers_upgrades::setup_pers_upgrade_jugg",
		"zm_pers_upgrades::setup_pers_upgrade_carpenter",
		"zm_pers_upgrades::setup_pers_upgrade_perk_lose",
		"zm_pers_upgrades::setup_pers_upgrade_pistol_points",
		"zm_pers_upgrades::setup_pers_upgrade_double_points",
		"zm_pers_upgrades::setup_pers_upgrade_sniper",
		"zm_pers_upgrades::setup_pers_upgrade_box_weapon",
		"zm_pers_upgrades::setup_pers_upgrade_nube",
		"zm_pers_upgrades::pers_upgrade_boards_active",
		"zm_pers_upgrades::pers_upgrade_revive_active",
		"zm_pers_upgrades::pers_upgrade_headshot_active",
		"zm_pers_upgrades::pers_upgrade_cash_back_active",
		"zm_pers_upgrades::pers_upgrade_insta_kill_active",
		"zm_pers_upgrades::is_insta_kill_upgraded_and_active",
		"zm_pers_upgrades::pers_upgrade_jugg_active",
		"zm_pers_upgrades::pers_upgrade_carpenter_active",
		"zm_pers_upgrades::persistent_carpenter_ability_check",
		"zm_pers_upgrades::pers_zombie_death_location_check",
		"zm_pers_upgrades::insta_kill_pers_upgrade_icon",
		"zm_pers_upgrades::time_remaining_pers_upgrade",
		"zm_pers_upgrades::kill_insta_kill_upgrade_hud_icon",
		"zm_pers_upgrades::pers_upgrade_perk_lose_active",
		"zm_pers_upgrades::pers_upgrade_pistol_points_active",
		"zm_pers_upgrades::pers_upgrade_double_points_active",
		"zm_pers_upgrades::pers_upgrade_sniper_active",
		"zm_pers_upgrades::pers_upgrade_box_weapon_active",
		"zm_pers_upgrades::pers_upgrade_nube_active",
		"_zm_weap_sickle::init",
		"zodcompanionbehavior::registerbehaviorscriptfunctions",
		"zodcompanionbehavior::zodcompanioncanjuke",
		"zodcompanionbehavior::zodcompanioncanpreemptivejuke",
		"zodcompanionbehavior::zod_companion_revive_player",
		"zodcompanionutility::manage_companion",
		"zodcompanionutility::define_new_leader",
		"zodcompanionutility::get_potential_leaders",
		"zm_aat_thunder_wall::result",
		"zm_aat_thunder_wall::thunder_wall_blast",
		"zm_aat_turned::result",
		"zm_aat_turned::turned_local_blast",
		"zm_aat_turned::turned_zombie_validation",
		"zm_aat_turned::zombie_death_time_limit",
		"zm_aat_turned::zombie_kill_tracker",
		"zm_aat_turned::zombie_death_gib",
		"zm_aat_dead_wire::result",
		"zm_aat_fire_works::result",
		"zm_aat_fire_works::fire_works_zombie_validation",
		"zm_aat_fire_works::fire_works_summon",
		"zm_aat_fire_works::zm_aat_fire_works_get_target",
		"zm_aat_fire_works::zm_aat_fire_works_zombie_damage_response",
		"zm_aat_fire_works::zm_aat_fire_works_death_callback",
		"zm_aat_fire_works::zombie_death_gib",
		"zm_aat_blast_furnace::result",
		"zm_aat_blast_furnace::blast_furnace_explosion",
		"zm_aat_blast_furnace::blast_furnace_zombie_burn",
		"zm_aat_blast_furnace::zombie_death_gib",
		"zm_ai_faller::zombie_faller_delete",
		"zm_ai_faller::faller_script_parameters",
		"zm_ai_faller::setup_deathfunc",
		"zm_ai_faller::do_zombie_fall",
		"zm_ai_faller::zombie_faller_do_fall",
		"zm_ai_faller::zombie_fall_loop",
		"zm_ai_faller::zombie_land",
		"zm_ai_faller::zombie_faller_always_drop",
		"zm_ai_faller::zombie_faller_drop_not_occupied",
		"zm_ai_faller::zombie_faller_watch_all_players",
		"zm_ai_faller::zombie_faller_watch_player",
		"zm_ai_faller::zombie_fall_wait",
		"zm_ai_faller::zombie_fall_should_attack",
		"zm_ai_faller::zombie_fall_get_vicitims",
		"zm_ai_faller::get_fall_anim",
		"zm_ai_faller::zombie_faller_enable_location",
		"zm_ai_faller::zombie_faller_death_wait",
		"zm_ai_faller::zombie_fall_death_func",
		"zm_ai_faller::zombie_fall_death",
		"zm_ai_faller::_damage_mod_to_damage_type",
		"zm_ai_faller::zombie_fall_fx",
		"zm_ai_faller::zombie_fall_burst_fx",
		"zm_ai_faller::zombie_fall_dust_fx",
		"zm_ai_faller::stop_zombie_fall_dust_fx",
		"zm_ai_faller::handle_fall_death_notetracks",
		"zm_ai_faller::handle_fall_notetracks",
		"zm_ai_faller::faller_death_ragdoll",
		"zm_ai_faller::in_player_fov",
		"zm_ai_faller::potentially_visible",
		"zm_ai_faller::do_zombie_emerge",
		"zm_ai_faller::zombie_faller_emerge",
		"zm_ai_faller::zombie_emerge_fx",
		"zm_ai_faller::zombie_emerge_dust_fx",
		"zm_ai_faller::stop_zombie_emerge_dust_fx",
		"zm_powerup_castle_tram_token::on_player_connect",
		"zm_powerup_castle_tram_token::on_player_spawned",
		"zm_hackables_wallbuys::hack_wallbuys",
		"zm_hackables_wallbuys::wallbuy_hack",
		"_zm_weap_ballistic_knife::init",
		"_zm_weap_ballistic_knife::on_spawn",
		"_zm_weap_ballistic_knife::wait_to_show_glowing_model",
		"_zm_weap_ballistic_knife::on_spawn_retrieve_trigger",
		"_zm_weap_ballistic_knife::debug_print",
		"_zm_weap_ballistic_knife::watch_use_trigger",
		"_zm_weap_ballistic_knife::pick_up",
		"_zm_weap_ballistic_knife::destroy_ent",
		"_zm_weap_ballistic_knife::watch_shutdown",
		"_zm_weap_ballistic_knife::drop_knives_to_ground",
		"_zm_weap_ballistic_knife::force_drop_knives_to_ground_on_death",
		"_zm_weap_ballistic_knife::update_retrieve_trigger",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_precache",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_register_clientfield",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_set_clientfield",
		"zm_perk_additionalprimaryweapon::additional_primary_weapon_perk_machine_setup",
		"zm_perk_additionalprimaryweapon::give_additional_primary_weapon_perk",
		"zm_perk_additionalprimaryweapon::take_additional_primary_weapon_perk",
		"zm_perk_additionalprimaryweapon::take_additionalprimaryweapon",
		"zm_perk_additionalprimaryweapon::on_laststand",
		"zm_perk_additionalprimaryweapon::return_additionalprimaryweapon",
		"namespace_8fb880d9::monkeytargetservice",
		"namespace_8fb880d9::monkeyshouldgroundhit",
		"namespace_8fb880d9::monkeygroundhitstart",
		"namespace_8fb880d9::monkeygroundhitterminate",
		"namespace_8fb880d9::monkeyshouldthrowbackrun",
		"namespace_8fb880d9::monkeyshouldthrowbackstill",
		"namespace_8fb880d9::monkeythrowbackterminate",
		"namespace_8fb880d9::monkeygrenadetauntterminate",
		"namespace_8fb880d9::monkey_prespawn",
		"namespace_8fb880d9::monkey_zombie_spawn",
		"namespace_8fb880d9::wait_for_damage",
		"namespace_8fb880d9::watch_for_death",
		"namespace_8fb880d9::monkey_round_spawning",
		"namespace_8fb880d9::monkey_setup_packs",
		"namespace_8fb880d9::monkey_setup_health",
		"namespace_8fb880d9::monkey_setup_spawners",
		"namespace_8fb880d9::randomize_array",
		"namespace_8fb880d9::monkey_get_next_spawner",
		"namespace_8fb880d9::monkey_get_available_spawners",
		"namespace_8fb880d9::monkey_pack_man_setup_perks",
		"namespace_8fb880d9::monkey_pack_man_get_next_perk",
		"namespace_8fb880d9::monkey_pack_spawn",
		"namespace_8fb880d9::monkey_pack_think",
		"namespace_8fb880d9::monkey_pack_update_perk",
		"namespace_8fb880d9::monkey_pack_next_perk",
		"namespace_8fb880d9::monkey_pack_set_machine",
		"namespace_8fb880d9::monkey_pack_choose_enemy",
		"namespace_8fb880d9::monkey_pack_update_enemy",
		"namespace_8fb880d9::monkey_zombie_check_ground_hit",
		"namespace_8fb880d9::monkey_pack_update_ground_hit",
		"namespace_8fb880d9::monkey_round_wait",
		"namespace_8fb880d9::monkey_round_aftermath",
		"namespace_8fb880d9::monkey_round_tracker",
		"namespace_8fb880d9::monkey_round_start",
		"namespace_8fb880d9::play_delayed_player_vox",
		"namespace_8fb880d9::monkey_round_stop",
		"namespace_8fb880d9::monkey_player_has_perk",
		"namespace_8fb880d9::monkey_zombie_manager",
		"namespace_8fb880d9::monkey_zombie_pick_best_spawner",
		"namespace_8fb880d9::monkey_zombie_choose_run",
		"namespace_8fb880d9::monkey_zombie_think",
		"namespace_8fb880d9::monkey_zombie_debug",
		"namespace_8fb880d9::monkey_zombie_update",
		"namespace_8fb880d9::monkey_zombie_get_perk_pos",
		"namespace_8fb880d9::monkey_pack_clear_perk_pos",
		"namespace_8fb880d9::monkey_zombie_health_watcher",
		"namespace_8fb880d9::monkey_zombie_fling_watcher",
		"namespace_8fb880d9::monkey_zombie_speed_watcher",
		"namespace_8fb880d9::monkey_grenade_watcher",
		"namespace_8fb880d9::monkey_grenade_watch",
		"namespace_8fb880d9::monkey_grenade_wait",
		"namespace_8fb880d9::monkey_bhb_wait",
		"namespace_8fb880d9::monkey_zombie_grenade_throw_watcher",
		"namespace_8fb880d9::monkey_zombie_grenade_throw",
		"namespace_8fb880d9::vector_scale",
		"namespace_8fb880d9::monkey_zombie_watch_machine_damage",
		"namespace_8fb880d9::monkey_zombie_set_state",
		"namespace_8fb880d9::monkey_zombie_get_state",
		"namespace_8fb880d9::monkey_zombie_attack_perk",
		"namespace_8fb880d9::monkey_wait_to_drop",
		"namespace_8fb880d9::play_player_perk_theft_vox",
		"namespace_8fb880d9::play_attack_impacts",
		"namespace_8fb880d9::monkey_zombie_destroy_perk",
		"namespace_8fb880d9::monkey_zombie_default_spawn_heuristic",
		"namespace_8fb880d9::monkey_zombie_ground_hit",
		"namespace_8fb880d9::monkey_pack_ready_to_detonate",
		"namespace_8fb880d9::monkey_zombie_force_groundhit",
		"namespace_8fb880d9::monkey_zombie_ground_hit_think",
		"namespace_8fb880d9::groundhit_watcher",
		"namespace_8fb880d9::monkey_zombie_grenade_pickup",
		"namespace_8fb880d9::monkey_zombie_grenade_response",
		"namespace_8fb880d9::monkey_zombie_grenade_watcher",
		"namespace_8fb880d9::monkey_zombie_bhb_teleport",
		"namespace_8fb880d9::monkey_zombie_bhb_failsafe",
		"namespace_8fb880d9::monkey_zombie_bhb_run",
		"namespace_8fb880d9::monkey_zombie_clear_attack_pos",
		"namespace_8fb880d9::monkey_zombie_bhb_response",
		"namespace_8fb880d9::monkey_zombie_bhb_watcher",
		"namespace_8fb880d9::monkey_remove_from_pack",
		"namespace_8fb880d9::monkey_zombie_can_drop_free_perk",
		"namespace_8fb880d9::monkey_zombie_die",
		"namespace_8fb880d9::monkey_custom_damage",
		"namespace_8fb880d9::monkey_zombie_default_enter_level",
		"namespace_8fb880d9::monkey_pathing",
		"namespace_8fb880d9::monkey_find_flesh",
		"namespace_8fb880d9::monkey_zombie_setup_perks",
		"namespace_8fb880d9::monkey_zombie_perk_init",
		"namespace_8fb880d9::monkey_zombie_perk_damage",
		"namespace_8fb880d9::monkey_pack_take_perk",
		"namespace_8fb880d9::monkey_perk_lost",
		"namespace_8fb880d9::monkey_perk_bought",
		"namespace_8fb880d9::monkey_pack_flash_perk",
		"namespace_8fb880d9::monkey_pack_stop_flash",
		"namespace_8fb880d9::monkey_get_zone",
		"namespace_8fb880d9::monkey_fling",
		"namespace_8fb880d9::monkey_revive_solo_fx",
		"namespace_8fb880d9::monkey_print",
		"namespace_8fb880d9::play_random_monkey_vox",
		"zm_weap_thundergun::thundergun_devgui_dvar_think",
		"zm_weap_thundergun::thundergun_on_player_connect",
		"zm_weap_thundergun::wait_for_thundergun_fired",
		"zm_weap_thundergun::thundergun_network_choke",
		"zm_weap_thundergun::thundergun_fired",
		"zm_weap_thundergun::thundergun_affect_ais",
		"zm_weap_thundergun::thundergun_get_enemies_in_range",
		"zm_weap_thundergun::thundergun_debug_print",
		"zm_weap_thundergun::thundergun_fling_zombie",
		"zm_weap_thundergun::zombie_knockdown",
		"zm_weap_thundergun::playthundergunpainanim",
		"zm_weap_thundergun::thundergun_knockdown_zombie",
		"zm_weap_thundergun::handle_thundergun_pain_notetracks",
		"zm_weap_thundergun::is_thundergun_damage",
		"zm_weap_thundergun::enemy_killed_by_thundergun",
		"zm_weap_thundergun::thundergun_sound_thread",
		"zm_weap_thundergun::setup_thundergun_vox",
		"zm_weap_thundergun::override_thundergun_damage_func",
		"zm_devgui::zombie_devgui_player_commands",
		"zm_devgui::player_on_connect",
		"zm_devgui::devgui_add_weapon_entry",
		"zm_devgui::devgui_add_weapon_and_attachments",
		"zm_devgui::devgui_add_weapon",
		"zm_devgui::zombie_weapon_devgui_think",
		"zm_devgui::zombie_devgui_weapon_give",
		"zm_devgui::zombie_devgui_attachment_give",
		"zm_devgui::devgui_add_ability",
		"zm_devgui::zombie_devgui_ability_give",
		"zm_devgui::zombie_devgui_ability_take",
		"zm_devgui::zombie_ability_devgui_think",
		"zm_devgui::zombie_healthbar",
		"zm_devgui::devgui_zombie_healthbar",
		"zm_devgui::zombie_devgui_watch_input",
		"zm_devgui::damage_player",
		"zm_devgui::kill_player",
		"zm_devgui::force_drink",
		"zm_devgui::zombie_devgui_dpad_none",
		"zm_devgui::zombie_devgui_dpad_death",
		"zm_devgui::zombie_devgui_dpad_damage",
		"zm_devgui::zombie_devgui_dpad_changeweapon",
		"zm_devgui::watch_debug_input",
		"zm_devgui::zombie_devgui_think",
		"zm_devgui::add_custom_devgui_callback",
		"zm_devgui::devgui_all_spawn",
		"zm_devgui::devgui_toggle_show_spawn_locations",
		"zm_devgui::devgui_toggle_show_exterior_goals",
		"zm_devgui::devgui_zombie_spawn",
		"zm_devgui::devgui_make_crawler",
		"zm_devgui::devgui_bot_spawn",
		"zm_devgui::devgui_bot_spawn_think",
		"zm_devgui::zombie_devgui_open_sesame",
		"zm_devgui::any_player_in_noclip",
		"zm_devgui::diable_fog_in_noclip",
		"zm_devgui::zombie_devgui_allow_fog",
		"zm_devgui::zombie_devgui_give_money",
		"zm_devgui::zombie_devgui_take_money",
		"zm_devgui::zombie_devgui_turn_player",
		"zm_devgui::zombie_devgui_debug_pers",
		"zm_devgui::zombie_devgui_cool_jetgun",
		"zm_devgui::zombie_devgui_preserve_turbines",
		"zm_devgui::zombie_devgui_equipment_stays_healthy",
		"zm_devgui::zombie_devgui_disown_equipment",
		"zm_devgui::zombie_devgui_equipment_give",
		"zm_devgui::zombie_devgui_give_placeable_mine",
		"zm_devgui::zombie_devgui_give_claymores",
		"zm_devgui::zombie_devgui_give_lethal",
		"zm_devgui::zombie_devgui_give_frags",
		"zm_devgui::zombie_devgui_give_sticky",
		"zm_devgui::zombie_devgui_give_monkey",
		"zm_devgui::zombie_devgui_give_dolls",
		"zm_devgui::zombie_devgui_give_emp_bomb",
		"zm_devgui::zombie_devgui_invulnerable",
		"zm_devgui::zombie_devgui_kill",
		"zm_devgui::zombie_devgui_toggle_ammo",
		"zm_devgui::zombie_devgui_toggle_ignore",
		"zm_devgui::zombie_devgui_revive",
		"zm_devgui::zombie_devgui_give_health",
		"zm_devgui::zombie_devgui_give_perk",
		"zm_devgui::zombie_devgui_give_powerup",
		"zm_devgui::zombie_devgui_goto_round",
		"zm_devgui::zombie_devgui_monkey_round",
		"zm_devgui::zombie_devgui_thief_round",
		"zm_devgui::zombie_devgui_dog_round",
		"zm_devgui::zombie_devgui_dog_round_skip",
		"zm_devgui::zombie_devgui_dump_zombie_vars",
		"zm_devgui::zombie_devgui_pack_current_weapon",
		"zm_devgui::zombie_devgui_unpack_current_weapon",
		"zm_devgui::zombie_devgui_reopt_current_weapon",
		"zm_devgui::zombie_devgui_take_weapon",
		"zm_devgui::zombie_devgui_take_weapons",
		"zm_devgui::get_upgrade",
		"zm_devgui::zombie_devgui_director_easy",
		"zm_devgui::zombie_devgui_chest_never_move",
		"zm_devgui::zombie_devgui_disable_kill_thread_toggle",
		"zm_devgui::zombie_devgui_check_kill_thread_every_frame_toggle",
		"zm_devgui::zombie_devgui_kill_thread_test_mode_toggle",
		"zm_devgui::showonespawnpoint",
		"zm_devgui::print3duntilnotified",
		"zm_devgui::lineuntilnotified",
		"zm_devgui::devgui_debug_hud",
		"zm_devgui::devgui_test_chart_think",
		"zm_devgui::zombie_devgui_draw_traversals",
		"zm_devgui::wait_for_zombie",
		"zm_devgui::zombie_draw_traversals",
		"zm_devgui::testscriptruntimeerrorassert",
		"zm_devgui::testscriptruntimeerror2",
		"zm_devgui::testscriptruntimeerror1",
		"zm_devgui::testscriptruntimeerror",
		"zm_weap_dragon_gauntlet::reset_after_bleeding_out",
		"zm_weap_dragon_gauntlet::weapon_change_watcher",
		"zm_weap_dragon_gauntlet::is_in_array",
		"_zm_weapon_locker::main",
		"_zm_weapon_locker::wl_has_stored_weapondata",
		"_zm_weapon_locker::wl_get_stored_weapondata",
		"_zm_weapon_locker::wl_clear_stored_weapondata",
		"_zm_weapon_locker::wl_set_stored_weapondata",
		"_zm_weapon_locker::triggerweaponslockerwatch",
		"_zm_weapon_locker::triggerweaponslockerisvalidweapon",
		"_zm_weapon_locker::triggerweaponslockerisvalidweaponpromptupdate",
		"_zm_weapon_locker::triggerweaponslockerthinkupdateprompt",
		"_zm_weapon_locker::triggerweaponslockerthink",
		"_zm_weapon_locker::triggerweaponslockerweaponchangethink",
		"_zm_weapon_locker::add_weapon_locker_mapping",
		"_zm_weapon_locker::remap_weapon",
		"art::artfxprintln",
		"art::strtok_loc",
		"art::setfogsliders",
		"art::tweakart",
		"art::fovslidercheck",
		"art::dumpsettings",
		"zm_powerup_beast_mana::grab_beast_mana",
		"zm_powerup_beast_mana::beast_mana_powerup",
		"zm_powerup_beast_mana::mana_on_hud",
		"zm_powerup_beast_mana::full_ammo_move_hud",
		"zm_puppet::wait_for_puppet_pickup",
		"character::setmodelfromarray",
		"character::randomelement",
		"character::attachfromarray",
		"character::newcharacter",
		"character::save",
		"character::load",
		"character::get_random_character",
		"character::get_least_used_index",
		"character::initialize_character_group",
		"character::random",
		"table::load",
		"table::str_to_num",
		"bot::init",
		"bot::is_bot_ranked_match",
		"bot::bot_void",
		"bot::bot_unhandled",
		"bot::add_bots",
		"bot::add_bot",
		"bot::remove_bots",
		"bot::remove_bot",
		"bot::filter_bots",
		"bot::on_player_connect",
		"bot::on_player_spawned",
		"bot::on_player_killed",
		"bot::bot_think_loop",
		"bot::bot_think",
		"bot::bot_update",
		"bot::update_swim",
		"bot::wait_release_swim_buttons",
		"bot::init_bot_settings",
		"bot::get_bot_default_settings",
		"bot::sprint_to_goal",
		"bot::end_sprint_to_goal",
		"bot::sprint_think",
		"bot::goal_in_trigger",
		"bot::point_in_goal",
		"bot::path_to_trigger",
		"bot::path_to_point_in_trigger",
		"bot::get_trigger_radius",
		"bot::get_trigger_height",
		"bot::check_stuck",
		"bot::check_stuck_position",
		"bot::stuck_resolution",
		"bot::clear_stuck",
		"bot::camp",
		"bot::wait_bot_path_failed_loop",
		"bot::wait_bot_goal_reached_loop",
		"bot::stow_gun_gadget",
		"bot::get_ready_gadget",
		"bot::get_ready_gun_gadget",
		"bot::is_gun_gadget",
		"bot::activate_hero_gadget",
		"bot::coop_pre_combat",
		"bot::coop_post_combat",
		"bot::follow_coop_players",
		"bot::lead_player",
		"bot::follow_entity",
		"bot::navmesh_wander",
		"bot::approach_goal_trigger",
		"bot::approach_point",
		"bot::revive_players",
		"bot::get_team_players_in_laststand",
		"bot::revive_player",
		"bot::watch_bot_corner",
		"bot::wait_corner_radius",
		"bot::finish_corner",
		"bot::get_host_player",
		"bot::fwd_dot",
		"bot::has_launcher",
		"bot::kill_bot",
		"bot::kill_bots",
		"bot::add_bot_at_eye_trace",
		"bot::eye_trace",
		"bot::devgui_debug_route",
		"bot::get_nav_points",
		"bot::debug_patrol",
		"bot::bot_devgui_think",
		"bot::coop_bot_devgui_cmd",
		"bot::debug_star",
		"bot::tap_attack_button",
		"bot::press_attack_button",
		"bot::release_attack_button",
		"bot::tap_melee_button",
		"bot::tap_reload_button",
		"bot::tap_use_button",
		"bot::press_crouch_button",
		"bot::press_use_button",
		"bot::release_use_button",
		"bot::press_sprint_button",
		"bot::release_sprint_button",
		"bot::press_frag_button",
		"bot::release_frag_button",
		"bot::tap_frag_button",
		"bot::press_offhand_button",
		"bot::release_offhand_button",
		"bot::tap_offhand_button",
		"bot::press_throw_button",
		"bot::release_throw_button",
		"bot::tap_jump_button",
		"bot::press_jump_button",
		"bot::release_jump_button",
		"bot::tap_ads_button",
		"bot::press_ads_button",
		"bot::release_ads_button",
		"bot::tap_doublejump_button",
		"bot::press_doublejump_button",
		"bot::release_doublejump_button",
		"bot::tap_offhand_special_button",
		"bot::press_swim_up",
		"bot::release_swim_up",
		"bot::press_swim_down",
		"bot::release_swim_down",
		"bot::callback_botentereduseredge",
		"bot::traversing",
		"bot::leave_water_traversal",
		"bot::swim_traversal",
		"bot::jump_up_traversal",
		"bot::jump_down_traversal",
		"bot::wallrun_traversal",
		"bot::wait_wallrun_begin",
		"bot::exit_wallrun",
		"bot::jump_to",
		"bot::bot_update_move_angle",
		"bot::bot_hit_target",
		"bot::bot_speed2d",
		"bot::watch_traversal_end",
		"bot::watch_start_swimming",
		"bot::wait_traversal_timeout",
		"bot::traversal_end",
		"bot_combat::combat_think",
		"bot_combat::is_alive",
		"bot_combat::get_bot_threats",
		"bot_combat::get_ai_threats",
		"bot_combat::ignore_none",
		"bot_combat::ignore_non_sentient",
		"bot_combat::has_threat",
		"bot_combat::threat_visible",
		"bot_combat::threat_is_alive",
		"bot_combat::set_threat",
		"bot_combat::clear_threat",
		"bot_combat::update_threat",
		"bot_combat::get_new_threat",
		"bot_combat::get_greatest_threat",
		"bot_combat::engage_threat",
		"bot_combat::update_threat_goal",
		"bot_combat::get_threat_goal_radius",
		"bot_combat::fire_weapon",
		"bot_combat::melee_attack",
		"bot_combat::chase_threat",
		"bot_combat::get_aim_offset",
		"bot_combat::update_weapon_aim",
		"bot_combat::start_threat_aim",
		"bot_combat::angleerror",
		"bot_combat::clear_threat_aim",
		"bot_combat::bot_pre_combat",
		"bot_combat::bot_post_combat",
		"bot_combat::update_weapon_ads",
		"bot_combat::weapon_ads_dot",
		"bot_combat::weapon_fire_dot",
		"bot_combat::weapon_range",
		"bot_combat::weapon_range_close",
		"bot_combat::switch_weapon",
		"bot_combat::threat_switch_weapon",
		"bot_combat::reload_weapon",
		"bot_combat::weapon_clip_frac",
		"bot_combat::throw_grenade",
		"bot_combat::press_grenade_button",
		"bot_combat::aim_grenade",
		"bot_combat::will_hit_target",
		"bot_combat::get_throw_velocity",
		"bot_combat::get_lethal_grenade",
		"bot_combat::wait_damage_loop",
		"bot_combat::clear_damage",
		"bot_combat::combat_strafe",
		"csceneobject::stop",
		"csceneobject::get_align_tag",
		"csceneobject::_on_damage_run_scene_thread",
		"csceneobject::_prepare_player",
		"csceneobject::revive_player",
		"csceneobject::set_player_stance",
		"csceneobject::_finish_player",
		"csceneobject::set_objective",
		"csceneobject::_on_death",
		"csceneobject::do_death_anims",
		"csceneobject::_cleanup",
		"csceneobject::_set_goal",
		"csceneobject::_track_goal",
		"csceneobject::_play_anim",
		"csceneobject::spawn_ent",
		"csceneobject::_play_shared_player_anim",
		"csceneobject::_play_shared_player_anim_for_player",
		"csceneobject::play_regroup_fx_for_scene",
		"csceneobject::regroup_invulnerability",
		"csceneobject::get_lerp_time",
		"csceneobject::get_camera_tween",
		"csceneobject::get_camera_tween_out",
		"csceneobject::link_player",
		"csceneobject::reset_player",
		"csceneobject::has_init_state",
		"csceneobject::is_alive",
		"csceneobject::is_player",
		"csceneobject::is_player_model",
		"csceneobject::is_shared_player",
		"csceneobject::skip_scene_on_client",
		"csceneobject::skip_scene_on_server",
		"cscene::add_to_sync_list",
		"cscene::remove_from_sync_list",
		"cscene::new_object",
		"cscene::sync_with_client_scene",
		"cscene::assign_ents",
		"cscene::_assign_ents_by_name",
		"cscene::_assign_ents_by_type",
		"cscene::_is_ent_player",
		"cscene::_is_ent_actor",
		"cscene::_is_ent_vehicle",
		"cscene::get_objects",
		"cscene::get_anim_relative_start_time",
		"cscene::is_player_anim_ending_early",
		"cscene::_wait_server_time",
		"cscene::_wait_for_camera_animation",
		"cscene::_play_camera_anims",
		"cscene::_play_camera_anim_on_player_callback",
		"cscene::_play_camera_anim_on_player",
		"cscene::loop_camera_anim_to_set_up_for_capture",
		"cscene::_play_extracam_on_player",
		"cscene::_stop_camera_anims",
		"cscene::_stop_camera_anim_on_player",
		"cscene::display_dev_info",
		"cscene::destroy_dev_info",
		"cscene::is_skipping_scene",
		"cscene::is_skipping_player_scene",
		"cscene::has_next_scene",
		"cscene::streamer_request_completed",
		"cscene::_release_object",
		"cscene::is_looping",
		"cscene::wait_till_scene_ready",
		"cscene::wait_till_objects_ready",
		"cscene::sync_with_other_scenes",
		"cscene::get_valid_objects",
		"cscene::on_error",
		"cscene::get_state",
		"cscene::is_scene_shared",
		"cscene::skip_scene",
		"cawarenesssceneobject::play",
		"cawarenessscene::new_object",
		"cawarenessscene::init",
		"cawarenessscene::play",
		"scene::on_load_wait",
		"scene::run_instances",
		"scene::play",
		"scene::_play_instance",
		"scene::skipto_end",
		"scene::skipto_end_noai",
		"scene::is_ready",
		"scene::delete_scene_data",
		"scene::scene_disable_player_stuff",
		"scene::scene_enable_player_stuff",
		"scene::updateigcviewtime",
		"scene::set_igc_active",
		"scene::is_igc_active",
		"scene::should_spectate_on_join",
		"scene::wait_until_spectate_on_join_completes",
		"scene::skip_scene",
		"scene::_skip_scene",
		"scene::add_player_linked_scene",
		"scene::remove_player_linked_scene",
		"scene::waittill_skip_sequence_completed",
		"scene::is_skipping_in_progress",
		"scene::watch_scene_skip_requests",
		"scene::clear_scene_skipping_ui",
		"scene::watch_scene_ending",
		"scene::watch_scene_skipping",
		"scene::should_skip_scene_loop",
		"scene::any_button_pressed",
		"scene::on_player_connect",
		"scene::add_wait_for_streamer_hint_scene",
		"compass::setupminimap",
		"compass::vecscale",
		"math::find_box_center",
		"math::expand_mins",
		"math::expand_maxs",
		"math::randomsign",
		"math::get_dot_direction",
		"math::get_dot_right",
		"math::get_dot_up",
		"math::get_dot_forward",
		"math::get_dot_from_eye",
		"math::random_normal_distribution",
		"math::closest_point_on_line",
		"math::get_2d_yaw",
		"math::vec_to_angles",
		"math::pow",
		"medals::init",
		"medals::on_player_connect",
		"medals::setlastkilledby",
		"medals::offenseglobalcount",
		"medals::defenseglobalcount",
		"string::rfill",
		"music::setmusicstate",
		"music::on_player_spawned",
		"loadout::is_warlord_perk",
		"loadout::is_item_excluded",
		"loadout::getloadoutitemfromddlstats",
		"loadout::initweaponattachments",
		"laststand::player_is_in_laststand",
		"laststand::player_num_in_laststand",
		"laststand::player_all_players_in_laststand",
		"laststand::player_any_player_in_laststand",
		"laststand::laststand_allowed",
		"laststand::cleanup_suicide_hud",
		"laststand::clean_up_suicide_hud_on_end_game",
		"laststand::clean_up_suicide_hud_on_bled_out",
		"laststand::is_facing",
		"laststand::revive_hud_create",
		"laststand::revive_hud_show",
		"laststand::revive_hud_show_n_fade",
		"laststand::drawcylinder",
		"laststand::get_lives_remaining",
		"laststand::update_lives_remaining",
		"laststand::player_getup_setup",
		"laststand::laststand_getup_damage_watcher",
		"laststand::laststand_getup_hud",
		"laststand::laststand_getup_hud_destroy",
		"laststand::cleanup_laststand_on_disconnect",
		"entityheadicons::init_shared",
		"entityheadicons::start_gametype",
		"entityheadicons::setentityheadicon",
		"entityheadicons::updateentityheadteamicon",
		"entityheadicons::updateentityheadclienticon",
		"entityheadicons::updateentityheadteamobjective",
		"entityheadicons::updateentityheadclientobjective",
		"entityheadicons::destroyheadiconsondeath",
		"entityheadicons::destroyentityheadicons",
		"entityheadicons::updateentityheadiconpos",
		"entityheadicons::setentityheadiconshiddenwhilecontrolling",
		"exploder::exploder_before_load",
		"exploder::exploder_stop",
		"exploder::exploder_sound",
		"exploder::sound_effect",
		"exploder::effect_soundalias",
		"exploder::trail_effect",
		"exploder::trail_effect_ender",
		"exploder::brush_delete",
		"exploder::brush_show",
		"exploder::brush_throw",
		"exploder::exploder_trigger",
		"exploder::activate_exploder_on_clients",
		"exploder::delete_exploder_on_clients",
		"exploder::exploder_damage",
		"exploder::earthquake",
		"exploder::rumble",
		"turret::get_weapon",
		"turret::get_parent",
		"turret::laser_death_watcher",
		"turret::enable_laser",
		"turret::watch_for_flash",
		"turret::watch_for_flash_and_stun",
		"turret::emp_watcher",
		"turret::enable_emp",
		"turret::set_team",
		"turret::get_team",
		"turret::is_turret_enabled",
		"turret::does_need_user",
		"turret::does_have_user",
		"turret::get_user",
		"turret::_set_turret_needs_user",
		"turret::set_target_ent_array",
		"turret::add_priority_target",
		"turret::clear_target_ent_array",
		"turret::set_ignore_ent_array",
		"turret::clear_ignore_ent_array",
		"turret::_wait_for_current_user_to_finish",
		"turret::is_current_user",
		"turret::set_burst_parameters",
		"turret::set_torso_targetting",
		"turret::set_target_leading",
		"turret::set_on_target_angle",
		"turret::set_target",
		"turret::_get_default_target_offset",
		"turret::get_target",
		"turret::is_target",
		"turret::clear_target",
		"turret::set_target_flags",
		"turret::_has_target_flags",
		"turret::set_max_target_distance",
		"turret::set_min_target_distance",
		"turret::set_min_target_distance_squared",
		"turret::fire",
		"turret::stop",
		"turret::fire_for_time",
		"turret::shoot_at_target",
		"turret::_shoot_turret_at_target",
		"turret::_waittill_turret_on_target",
		"turret::shoot_at_target_once",
		"turret::enable",
		"turret::enable_auto_use",
		"turret::disable_ai_getoff",
		"turret::disable",
		"turret::pause",
		"turret::unpause",
		"turret::_turret_think",
		"turret::_has_nearby_player_enemy",
		"turret::_did_turret_lose_target",
		"turret::_turret_user_think",
		"turret::_listen_for_damage_on_actor",
		"turret::_waittill_user_change",
		"turret::_check_for_paused",
		"turret::_drop_turret",
		"turret::_turret_new_user_think",
		"turret::does_have_target",
		"turret::_user_check",
		"turret::_debug_turret_think",
		"turret::_get_turret_data",
		"turret::has_turret",
		"turret::_init_turret",
		"turret::_update_turret_arcs",
		"turret::set_best_target_func_from_weapon_type",
		"turret::set_best_target_func",
		"turret::_init_vehicle_turret",
		"turret::_burst_fire",
		"turret::_get_burst_fire_time",
		"turret::_get_burst_wait_time",
		"turret::_index",
		"turret::_get_potential_targets",
		"turret::_is_target_within_range",
		"turret::_get_any_priority_targets",
		"turret::_get_best_target_from_potential",
		"turret::_get_best_target_bullet",
		"turret::_get_best_target_gas",
		"turret::_get_best_target_grenade",
		"turret::_get_best_target_projectile",
		"turret::can_hit_target",
		"turret::is_target_in_view",
		"turret::trace_test",
		"turret::set_ignore_line_of_sight",
		"turret::set_occupy_no_target_time",
		"turret::toggle_lensflare",
		"turret::track_lens_flare",
		"turret::_get_gunner_tag_for_turret_index",
		"turret::_get_turret_index_for_tag",
		"objpoints::create",
		"objpoints::delete",
		"objpoints::update_origin",
		"objpoints::set_origin_by_name",
		"objpoints::get_by_name",
		"objpoints::get_by_index",
		"objpoints::start_flashing",
		"objpoints::stop_flashing",
		"cdoor::__constructor",
		"cdoor::__destructor",
		"cdoor::init_xmodel",
		"cdoor::get_hack_pos",
		"cdoor::get_hack_angles",
		"cdoor::init_hint_trigger",
		"cdoor::lock",
		"cdoor::unlock",
		"cdoor::delete_door",
		"cdoor::open",
		"cdoor::close",
		"cdoor::update_use_message",
		"cdoor::run_lock_fx",
		"cdoor::process_hint_trigger_message",
		"cdoor::init_trigger",
		"cdoor::set_script_flags",
		"cdoor::init_movement",
		"cdoor::set_door_paths",
		"cdoor::calculate_offset_position",
		"doors::init",
		"doors::setup_door_scriptbundle",
		"doors::door_open_update",
		"doors::door_update",
		"doors::door_update_lock_scripted",
		"doors::player_freeze_in_place",
		"doors::trigger_wait_until_clear",
		"doors::door_wait_until_user_release",
		"doors::door_wait_until_clear",
		"doors::trigger_check_for_ents_touching",
		"doors::door_debug_line",
		"doors::player_has_key",
		"doors::player_take_key",
		"doors::rotate_key_forever",
		"doors::key_process_timeout",
		"doors::give_ai_key",
		"doors::give_player_key",
		"doors::unlock_all",
		"doors::unlock",
		"hackable::add_hackable_object",
		"hackable::remove_hackable_object",
		"hackable::cleanup_hackable_objects",
		"hackable::filter_deleted",
		"hackable::find_hackable_object",
		"hackable::is_object_hackable",
		"hackable::start_hacking_object",
		"hackable::fail_hacking_object",
		"hackable::complete_hacking_object",
		"hackable::watch_timeout",
		"hackable::continue_hacking_object",
		"name::setup",
		"name::initialize_nationality",
		"name::add_nationality_names",
		"name::american_names",
		"name::egyptian_names",
		"name::sing_police_names",
		"name::russian_names",
		"name::agent_names",
		"name::chinese_names",
		"name::get_ai_classname",
		"name::add_override_name_func",
		"name::get_name_for_nationality",
		"name::issubstr_match_any",
		"util::wait_network_frame",
		"util::streamer_wait",
		"util::draw_debug_line",
		"util::debug_spherical_cone",
		"util::debug_sphere",
		"util::waittillend",
		"util::track",
		"util::waittill_level_string",
		"util::waittill_either",
		"util::break_glass",
		"util::waittill_level_any_timeout",
		"util::isflashed",
		"util::isstunned",
		"util::script_delay",
		"util::create_flags_and_return_tokens",
		"util::fileprint_start",
		"util::fileprint_map_start",
		"util::fileprint_chk",
		"util::fileprint_map_header",
		"util::fileprint_map_keypairprint",
		"util::fileprint_map_entity_start",
		"util::fileprint_map_entity_end",
		"util::fileprint_end",
		"util::fileprint_radiant_vec",
		"util::death_notify_wrapper",
		"util::damage_notify_wrapper",
		"util::explode_notify_wrapper",
		"util::alert_notify_wrapper",
		"util::shoot_notify_wrapper",
		"util::melee_notify_wrapper",
		"util::isusabilityenabled",
		"util::_disableusability",
		"util::_enableusability",
		"util::resetusability",
		"util::_disableweapon",
		"util::_enableweapon",
		"util::isweaponenabled",
		"util::orient_to_normal",
		"util::delay_network_frames",
		"util::_delay_network_frames",
		"util::get_closest_player",
		"util::registerclientsys",
		"util::setclientsysstate",
		"util::getclientsysstate",
		"util::clientnotify",
		"util::coopgame",
		"util::is_looking_at",
		"util::is_ads",
		"util::spawn_anim_model",
		"util::spawn_anim_player_model",
		"util::waittill_player_looking_at",
		"util::waittill_player_not_looking_at",
		"util::is_player_looking_at",
		"util::wait_endon",
		"util::waittillendonthreaded",
		"util::is_primary_damage",
		"util::delete_on_death",
		"util::delete_on_death_or_notify",
		"util::any_player_is_touching",
		"util::set_console_status",
		"util::waittill_asset_loaded",
		"util::script_wait",
		"util::is_killstreaks_enabled",
		"util::is_flashbanged",
		"util::magic_bullet_shield",
		"util::debug_magic_bullet_shield_death",
		"util::spawn_player_clone",
		"util::stop_magic_bullet_shield",
		"util::is_one_round",
		"util::is_first_round",
		"util::is_lastround",
		"util::get_rounds_won",
		"util::get_other_teams_rounds_won",
		"util::get_rounds_played",
		"util::is_round_based",
		"util::use_button_held",
		"util::stance_button_held",
		"util::ads_button_held",
		"util::attack_button_held",
		"util::button_right_held",
		"util::waittill_use_button_pressed",
		"util::waittill_use_button_held",
		"util::waittill_stance_button_pressed",
		"util::waittill_stance_button_held",
		"util::waittill_attack_button_pressed",
		"util::waittill_ads_button_pressed",
		"util::waittill_vehicle_move_up_button_pressed",
		"util::freeze_player_controls",
		"util::is_bot",
		"util::ishacked",
		"util::getlastweapon",
		"util::waittillslowprocessallowed",
		"util::get_start_time",
		"util::note_elapsed_time",
		"util::get_elapsed_time",
		"util::mayapplyscreeneffect",
		"util::waittillnotmoving",
		"util::waittillrollingornotmoving",
		"util::getweaponclass",
		"util::isusingremote",
		"util::deleteaftertime",
		"util::deleteaftertimethread",
		"util::waitfortime",
		"util::waitfortimeandnetworkframe",
		"util::deleteaftertimeandnetworkframe",
		"util::drawcylinder",
		"util::drawcylinder_think",
		"util::get_team_alive_players_s",
		"util::get_other_teams_alive_players_s",
		"util::get_all_alive_players_s",
		"util::spawn_array_struct",
		"util::gethostplayer",
		"util::gethostplayerforbots",
		"util::set_lighting_state",
		"util::set_sun_shadow_split_distance",
		"util::auto_delete",
		"util::query_ents",
		"util::_query_ents_by_substring_helper",
		"util::get_weapon_by_name",
		"util::is_female",
		"util::positionquery_pointarray",
		"util::totalplayercount",
		"util::isrankenabled",
		"util::isoneround",
		"util::isfirstround",
		"util::islastround",
		"util::waslastround",
		"util::hitroundlimit",
		"util::anyteamhitroundwinlimit",
		"util::anyteamhitroundlimitwithdraws",
		"util::getroundwinlimitwinningteam",
		"util::hitroundwinlimit",
		"util::any_team_hit_score_limit",
		"util::hitscorelimit",
		"util::get_current_round_score_limit",
		"util::any_team_hit_round_score_limit",
		"util::hitroundscorelimit",
		"util::getroundswon",
		"util::getotherteamsroundswon",
		"util::getroundsplayed",
		"util::isroundbased",
		"util::getcurrentgamemode",
		"util::ground_position",
		"util::delayed_notify",
		"util::delayed_delete",
		"util::do_chyron_text",
		"util::player_set_chyron_menu",
		"util::is_new_cp_map",
		"util::add_queued_debug_command",
		"util::queued_debug_commands",
		"util::player_lock_control",
		"util::player_unlock_control",
		"util::show_hud",
		"util::array_copy_if_array",
		"util::is_item_purchased",
		"util::has_purchased_perk_equipped",
		"util::has_purchased_perk_equipped_with_specific_stat",
		"util::has_flak_jacket_perk_purchased_and_equipped",
		"util::has_blind_eye_perk_purchased_and_equipped",
		"util::has_ghost_perk_purchased_and_equipped",
		"util::has_tactical_mask_purchased_and_equipped",
		"util::has_hacker_perk_purchased_and_equipped",
		"util::has_cold_blooded_perk_purchased_and_equipped",
		"util::has_hard_wired_perk_purchased_and_equipped",
		"util::has_gung_ho_perk_purchased_and_equipped",
		"util::has_fast_hands_perk_purchased_and_equipped",
		"util::has_scavenger_perk_purchased_and_equipped",
		"util::has_jetquiet_perk_purchased_and_equipped",
		"util::has_awareness_perk_purchased_and_equipped",
		"util::has_ninja_perk_purchased_and_equipped",
		"util::has_toughness_perk_purchased_and_equipped",
		"util::str_strip_lh",
		"util::trackwallrunningdistance",
		"util::tracksprintdistance",
		"util::trackdoublejumpdistance",
		"util::getplayspacecenter",
		"util::getplayspacemaxwidth",
		"audio::sndchyronwatcher",
		"audio::sndigcskipwatcher",
		"audio::sndresetsoundsettings",
		"audio::on_player_killed",
		"audio::vehiclespawncontext",
		"audio::sndupdatevehiclecontext",
		"audio::playtargetmissilesound",
		"audio::missilelockwatcher",
		"audio::missilefirewatcher",
		"audio::unlockfrontendmusic",
		"array::remove_dead",
		"array::_filter_undefined",
		"array::cleanup",
		"array::filter_classname",
		"array::wait_till_match",
		"array::_waitlogic_match",
		"array::_waitlogic_death",
		"array::update_waitlogic_tracker",
		"array::flagsys_wait_any",
		"array::clamp_size",
		"array::insertion_sort",
		"array::wait_till_touching",
		"array::is_touching",
		"array::contains",
		"array::_filter_dead",
		"array::_filter_classname",
		"array::quicksort",
		"array::quicksortmid",
		"array::quicksort_compare",
		"persistence::init",
		"persistence::on_player_connect",
		"persistence::initialize_stat_tracking",
		"persistence::upload_global_stat_counters",
		"persistence::stat_get_with_gametype",
		"persistence::get_gametype_name",
		"persistence::is_party_gamemode",
		"persistence::is_stat_modifiable",
		"persistence::stat_set_with_gametype",
		"persistence::adjust_recent_stats",
		"persistence::get_recent_stat",
		"persistence::set_recent_stat",
		"persistence::add_recent_stat",
		"persistence::set_match_history_stat",
		"persistence::add_match_history_stat",
		"persistence::initialize_match_stats",
		"persistence::can_set_aar_stat",
		"persistence::set_after_action_report_player_stat",
		"persistence::set_after_action_report_player_medal",
		"persistence::set_after_action_report_stat",
		"persistence::check_contract_expirations",
		"persistence::increment_contract_times",
		"persistence::add_contract_to_queue",
		"persistence::upload_stats_soon",
		"persistence::process_contracts_on_add_stat",
		"hud::init",
		"hud::font_pulse_init",
		"hud::font_pulse",
		"hud::fade_to_black_for_x_sec",
		"scene::capture_scene",
		"scene::move_to_scene",
		"scene::set_origin",
		"scene::toggle_postfx_igc_loop",
		"ai_puppeteer::ai_puppeteer_think",
		"ai_puppeteer::ai_puppeteer",
		"ai_puppeteer::ai_puppet_manager",
		"ai_puppeteer::ai_puppet_set",
		"ai_puppeteer::ai_puppet_release",
		"ai_puppeteer::ai_puppet_cursor_tracker",
		"ai_puppeteer::ai_puppeteer_create_hud",
		"ai_puppeteer::ai_puppeteer_destroy_hud",
		"ai_puppeteer::ai_puppeteer_render_point",
		"ai_puppeteer::ai_puppeteer_render_node",
		"ai_puppeteer::ai_puppeteer_render_ai",
		"ai_puppeteer::ai_puppeteer_highlight_point",
		"ai_puppeteer::ai_puppeteer_highlight_node",
		"ai_puppeteer::ai_puppeteer_highlight_ai",
		"vehicle::seat_position_to_index",
		"vehicle::on_vehicle_spawned",
		"vehicle::on_ai_spawned",
		"vehicle::claim_position",
		"vehicle::unclaim_position",
		"vehicle::find_next_open_position",
		"vehicle::spawn_riders",
		"vehicle::get_bundle_for_ai",
		"vehicle::get_rider_info",
		"vehicle::get_in",
		"vehicle::handle_rider_death",
		"vehicle::delete_rider_asap",
		"vehicle::kill_rider",
		"vehicle::on_vehicle_killed",
		"vehicle::is_seat_available",
		"vehicle::can_get_in",
		"vehicle::get_out",
		"vehicle::exit_variable",
		"vehicle::exit_high_loop_anim",
		"vehicle::get_height",
		"vehicle::get_bundle",
		"bb::logdamage",
		"bb::logaispawn",
		"bb::logplayerevent",
		"bb::logroundevent",
		"bb::logpurchaseevent",
		"bb::logpowerupevent",
		"bb::init_shared",
		"bb::init",
		"bb::player_init",
		"bb::on_player_spawned",
		"bb::on_player_disconnect",
		"bb::on_player_death",
		"bb::commit_spawn_data",
		"bb::commit_weapon_data",
		"bb::add_to_stat",
		"bb::recordbbdataforplayer",
		"bb::recordblackboxbreadcrumbdata",
		"vehicle_ai::RegisterSharedInterfaceAttributes",
		"vehicle_ai::InitThreatBias",
		"vehicle_ai::EntityIsArchetype",
		"vehicle_ai::GetEnemyTarget",
		"vehicle_ai::GetTargetPos",
		"vehicle_ai::GetTargetEyeOffset",
		"vehicle_ai::fire_for_time",
		"vehicle_ai::fire_for_rounds",
		"vehicle_ai::owner_in_line_of_fire",
		"vehicle_ai::SetTurretTarget",
		"vehicle_ai::FireTurret",
		"vehicle_ai::Javelin_LoseTargetAtRightTime",
		"vehicle_ai::waittill_pathing_done",
		"vehicle_ai::waittill_pathresult",
		"vehicle_ai::waittill_asm_terminated",
		"vehicle_ai::waittill_asm_timeout",
		"vehicle_ai::waittill_asm_complete",
		"vehicle_ai::throw_off_balance",
		"vehicle_ai::predicted_collision",
		"vehicle_ai::collision_fx",
		"vehicle_ai::nudge_collision",
		"vehicle_ai::level_out_for_landing",
		"vehicle_ai::immolate",
		"vehicle_ai::burning_thread",
		"vehicle_ai::iff_notifymeinnsec",
		"vehicle_ai::iff_override",
		"vehicle_ai::iff_override_team_switch_behavior",
		"vehicle_ai::blink_lights_for_time",
		"vehicle_ai::TurnOff",
		"vehicle_ai::TurnOn",
		"vehicle_ai::TurnOffAllLightsAndLaser",
		"vehicle_ai::TurnOffAllAmbientAnims",
		"vehicle_ai::ClearAllLookingAndTargeting",
		"vehicle_ai::ClearAllMovement",
		"vehicle_ai::shared_callback_damage",
		"vehicle_ai::should_emp",
		"vehicle_ai::should_burn",
		"vehicle_ai::StartInitialState",
		"vehicle_ai::start_scripted",
		"vehicle_ai::stop_scripted",
		"vehicle_ai::set_role",
		"vehicle_ai::set_state",
		"vehicle_ai::evaluate_connections",
		"vehicle_ai::get_state_callbacks",
		"vehicle_ai::get_state_callbacks_for_role",
		"vehicle_ai::get_current_state",
		"vehicle_ai::get_previous_state",
		"vehicle_ai::get_next_state",
		"vehicle_ai::is_instate",
		"vehicle_ai::add_state",
		"vehicle_ai::add_interrupt_connection",
		"vehicle_ai::add_utility_connection",
		"vehicle_ai::init_state_machine_for_role",
		"vehicle_ai::register_custom_add_state_callback",
		"vehicle_ai::call_custom_add_state_callbacks",
		"vehicle_ai::callback_vehiclekilled",
		"vehicle_ai::on_death_cleanup",
		"vehicle_ai::defaultstate_death_enter",
		"vehicle_ai::burning_death_fx",
		"vehicle_ai::emp_death_fx",
		"vehicle_ai::death_radius_damage_special",
		"vehicle_ai::burning_death",
		"vehicle_ai::emped_death",
		"vehicle_ai::gibbed_death",
		"vehicle_ai::default_death",
		"vehicle_ai::get_death_type",
		"vehicle_ai::defaultstate_death_update",
		"vehicle_ai::defaultstate_scripted_enter",
		"vehicle_ai::defaultstate_scripted_exit",
		"vehicle_ai::defaultstate_combat_enter",
		"vehicle_ai::defaultstate_combat_exit",
		"vehicle_ai::defaultstate_emped_enter",
		"vehicle_ai::emp_startup_fx",
		"vehicle_ai::defaultstate_emped_update",
		"vehicle_ai::defaultstate_emped_exit",
		"vehicle_ai::defaultstate_emped_reenter",
		"vehicle_ai::defaultstate_surge_enter",
		"vehicle_ai::defaultstate_surge_exit",
		"vehicle_ai::defaultstate_surge_update",
		"vehicle_ai::path_update_interrupt",
		"vehicle_ai::swap_team_after_time",
		"vehicle_ai::try_detonate",
		"vehicle_ai::detonate",
		"vehicle_ai::flash_team_switching_lights",
		"vehicle_ai::defaultstate_off_enter",
		"vehicle_ai::defaultstate_off_exit",
		"vehicle_ai::defaultstate_driving_enter",
		"vehicle_ai::defaultstate_driving_exit",
		"vehicle_ai::defaultstate_pain_enter",
		"vehicle_ai::defaultstate_pain_exit",
		"vehicle_ai::CanSeeEnemyFromPosition",
		"vehicle_ai::FindNewPosition",
		"vehicle_ai::TimeSince",
		"vehicle_ai::CooldownInit",
		"vehicle_ai::Cooldown",
		"vehicle_ai::GetCooldownTimeRaw",
		"vehicle_ai::GetCooldownLeft",
		"vehicle_ai::IsCooldownReady",
		"vehicle_ai::ClearCooldown",
		"vehicle_ai::AddCooldownTime",
		"vehicle_ai::ClearAllCooldowns",
		"vehicle_ai::PositionQuery_DebugScores",
		"vehicle_ai::DebugScore",
		"vehicle_ai::_less_than_val",
		"vehicle_ai::_cmp_val",
		"vehicle_ai::_sort_by_score",
		"vehicle_ai::PositionQuery_Filter_Random",
		"vehicle_ai::PositionQuery_PostProcess_SortScore",
		"vehicle_ai::PositionQuery_Filter_OutOfGoalAnchor",
		"vehicle_ai::PositionQuery_Filter_EngagementDist",
		"vehicle_ai::PositionQuery_Filter_DistAwayFromTarget",
		"vehicle_ai::DistancePointToEngagementHeight",
		"vehicle_ai::PositionQuery_Filter_EngagementHeight",
		"vehicle_ai::PositionQuery_PostProcess_RemoveOutOfGoalRadius",
		"vehicle_ai::UpdatePersonalThreatBias_AttackerLockedOnToMe",
		"vehicle_ai::UpdatePersonalThreatBias_AttackerLockingOnToMe",
		"vehicle_ai::UpdatePersonalThreatBias_Bots",
		"vehicle_ai::target_hijackers",
		"ballistic_knife::init_shared",
		"ballistic_knife::onSpawn",
		"ballistic_knife::watch_shutdown",
		"ballistic_knife::onspawnretrievetrigger",
		"ballistic_knife::watch_use_trigger",
		"ballistic_knife::pick_up",
		"ballistic_knife::destroy_ent",
		"ballistic_knife::dropknivestoground",
		"ballistic_knife::droptoground",
		"ballistic_knife::updateretrievetrigger",
		"ballistic_knife::createballisticknifewatcher",
		"lightninggun::update_dvars",
		"lightninggun::lightninggun_start_damage_effects",
		"lightninggun::lightninggun_arc_killcam",
		"lightninggun::lightninggun_arc_fx",
		"lightninggun::lightninggun_arc",
		"lightninggun::lightninggun_find_arc_targets",
		"lightninggun::create_killcam_entity",
		"lightninggun::killcam_move",
		"lightninggun::lightninggun_damage_response",
		"lightninggun::on_damage_lightninggun",
		"satchel_charge::createsatchelwatcher",
		"satchel_charge::satcheldetonate",
		"satchel_charge::satchelspawn",
		"tabun::init_shared",
		"tabun::checkdvarupdates",
		"tabun::watchtabungrenadedetonation",
		"tabun::damageeffectarea",
		"tabun::damageinpoisonarea",
		"tabun::deleteentonownerdeath",
		"tabun::watch_death",
		"tabun::hide_hud",
		"tabun::show_hud",
		"tabun::generatelocations",
		"tabun::singlelocation",
		"tabun::hitpos",
		"tabun::spawnalllocs",
		"tabun::playtabunsound",
		"tabun::setuptabunfx",
		"tabun::getcenteroflocations",
		"tabun::getcenter",
		"tabun::tabun_debug_line",
		"weapon_utils::ispistol",
		"weapon_utils::isflashorstunweapon",
		"weapon_utils::isflashorstundamage",
		"weapon_utils::ismeleemod",
		"weapon_utils::ispunch",
		"weapon_utils::isknife",
		"weapon_utils::isnonbarehandsmelee",
		"bouncingbetty::register",
		"bouncingbetty::BouncingBettydDvarUpdate",
		"bouncingbetty::CreateBouncingBettyWatcher",
		"bouncingbetty::OnBouncingBettyFizzleOut",
		"bouncingbetty::OnSpawnBouncingBetty",
		"bouncingbetty::TrackUsedStatOnDeath",
		"bouncingbetty::DoNoTrackUsedStatOnPickup",
		"bouncingbetty::TrackUsedOnHack",
		"bouncingbetty::TrackBouncingBettyAsUsed",
		"bouncingbetty::TrackOnOwner",
		"bouncingbetty::SpawnMineMover",
		"bouncingbetty::KillMineMoverOnPickup",
		"bouncingbetty::KillMineMover",
		"bouncingbetty::BouncingBettyDetonate",
		"bouncingbetty::BouncingBettyDestroyed",
		"bouncingbetty::BouncingBettyJumpAndExplode",
		"bouncingbetty::MineExplode",
		"singlelockap_guidance::on_player_spawned",
		"singlelockap_guidance::clearaptarget",
		"singlelockap_guidance::apfirednotify",
		"singlelockap_guidance::aptoggleloop",
		"singlelockap_guidance::aplockloop",
		"singlelockap_guidance::destroylockoncanceledmessage",
		"singlelockap_guidance::displaylockoncanceledmessage",
		"singlelockap_guidance::getbesttarget",
		"singlelockap_guidance::targetinsertionsortcompare",
		"singlelockap_guidance::insideapreticlenolock",
		"singlelockap_guidance::insideapreticlelocked",
		"singlelockap_guidance::isstillvalidtarget",
		"singlelockap_guidance::seekersound",
		"singlelockap_guidance::locksighttest",
		"sensor_grenade::init_shared",
		"sensor_grenade::createsensorgrenadewatcher",
		"sensor_grenade::onspawnsensorgrenade",
		"sensor_grenade::watchforstationary",
		"sensor_grenade::watchforexplode",
		"sensor_grenade::checkfortracking",
		"sensor_grenade::tracksensorgrenadevictim",
		"sensor_grenade::isplayertracked",
		"sensor_grenade::sensorgrenadedestroyed",
		"sensor_grenade::watchsensorgrenadedamage",
		"sensor_grenade::watch_for_decoys",
		"sensor_grenade::get_decoy_spawn_loc",
		"sensor_grenade::watch_decoy",
		"spike_charge_siegebot::watch_bolt_detonation",
		"decoy::create_watcher",
		"decoy::on_spawn",
		"decoy::move",
		"decoy::destroy",
		"decoy::detonate",
		"decoy::simulate_weapon_fire",
		"decoy::simulate_weapon_fire_machine_gun",
		"decoy::simulate_weapon_fire_machine_gun_semi_auto",
		"decoy::simulate_weapon_fire_pistol",
		"decoy::simulate_weapon_fire_shotgun",
		"decoy::simulate_weapon_fire_machine_gun_full_auto",
		"decoy::simulate_weapon_fire_sniper",
		"decoy::fire_burst",
		"decoy::finish_while_loop",
		"decoy::play_reload_sounds",
		"decoy::watch_for_explosion",
		"decoy::watch_for_death_before_explosion",
		"decoy::do_explosion",
		"decoy::pick_random_weapon",
		"decoy::should_play_reload_sound",
		"decoy::track_main_direction",
		"sticky_grenade::watch_bolt_detonation",
		"multilockap_guidance::on_player_spawned",
		"multilockap_guidance::ClearAPTarget",
		"multilockap_guidance::APFiredNotify",
		"multilockap_guidance::APToggleLoop",
		"multilockap_guidance::APLockLoop",
		"multilockap_guidance::DestroyLockOnCanceledMessage",
		"multilockap_guidance::DisplayLockOnCanceledMessage",
		"multilockap_guidance::GetBestTarget",
		"multilockap_guidance::TargetInsertionSortCompare",
		"multilockap_guidance::InsideAPReticleNoLock",
		"multilockap_guidance::InsideAPReticleLocked",
		"multilockap_guidance::IsStillValidTarget",
		"multilockap_guidance::SeekerSound",
		"multilockap_guidance::LockSightTest",
		"weaponobjects::updateDvars",
		"weaponobjects::start_gametype",
		"weaponobjects::setUpRetrievableHintStrings",
		"weaponobjects::on_player_connect",
		"weaponobjects::on_player_spawned",
		"weaponobjects::resetWatchers",
		"weaponobjects::createBaseWatchers",
		"weaponobjects::setUpRetrievableWatcher",
		"weaponobjects::createSpecialCrossbowWatcherTypes",
		"weaponobjects::createSpecialCrossbowWatcher",
		"weaponobjects::createHatchetWatcher",
		"weaponobjects::createTactInsertWatcher",
		"weaponobjects::createRCBombWatcher",
		"weaponobjects::createQRDroneWatcher",
		"weaponobjects::getSpikeLauncherActiveSpikeCount",
		"weaponobjects::watchSpikeLauncherItemCountChanged",
		"weaponobjects::spikesDetonating",
		"weaponobjects::createSpikeLauncherWatcher",
		"weaponobjects::createPlayerHelicopterWatcher",
		"weaponobjects::createClaymoreWatcher",
		"weaponobjects::voidOnSpawn",
		"weaponobjects::voidOnDamage",
		"weaponobjects::voidOnSpawnRetrieveTriggers",
		"weaponobjects::voidPickUp",
		"weaponobjects::deleteEnt",
		"weaponobjects::clearFXOnDeath",
		"weaponobjects::deleteWeaponObjectInstance",
		"weaponobjects::deleteWeaponObjectArray",
		"weaponobjects::delayedSpikeDetonation",
		"weaponobjects::spikeDetonate",
		"weaponobjects::claymoreDetonate",
		"weaponobjects::weaponDetonate",
		"weaponobjects::detonateWhenStationary",
		"weaponobjects::waitAndDetonate",
		"weaponobjects::waitAndFizzleOut",
		"weaponobjects::detonateWeaponObjectArray",
		"weaponobjects::addWeaponObjectToWatcher",
		"weaponobjects::addWeaponObject",
		"weaponobjects::cleanUpWatcherOnDeath",
		"weaponobjects::weapon_object_timeout",
		"weaponobjects::delete_on_notify",
		"weaponobjects::deleteWeaponObjectHelper",
		"weaponobjects::removeWeaponObject",
		"weaponobjects::cleanWeaponObjectArray",
		"weaponobjects::weapon_object_do_damagefeedback",
		"weaponobjects::weaponObjectDamage",
		"weaponobjects::playDialogOnDeath",
		"weaponobjects::watchObjectDamage",
		"weaponobjects::stunStart",
		"weaponobjects::stunStop",
		"weaponobjects::weaponStun",
		"weaponobjects::stunFXThink",
		"weaponobjects::isStunned",
		"weaponobjects::weaponObjectFizzleOut",
		"weaponobjects::resetWeaponObjectExplodeThisFrame",
		"weaponobjects::getWeaponObjectWatcher",
		"weaponobjects::getWeaponObjectWatcherByWeapon",
		"weaponobjects::resetWeaponObjectWatcher",
		"weaponobjects::createWeaponObjectWatcher",
		"weaponobjects::createUseWeaponObjectWatcher",
		"weaponobjects::createProximityWeaponObjectWatcher",
		"weaponobjects::commonOnSpawnUseWeaponObject",
		"weaponobjects::wasProximityAlarmActivatedBySelf",
		"weaponobjects::proximityAlarmActivate",
		"weaponobjects::proximityAlarmLoop",
		"weaponobjects::commonOnsSpawnUseWeaponObjectProximityAlarm",
		"weaponobjects::onSpawnUseWeaponObject",
		"weaponobjects::onSpawnProximityWeaponObject",
		"weaponobjects::watchWeaponObjectUsage",
		"weaponobjects::watchWeaponObjectSpawn",
		"weaponobjects::anyObjectsInWorld",
		"weaponobjects::proximitySphere",
		"weaponobjects::proximityAlarmWeaponObjectDebug",
		"weaponobjects::proximityWeaponObjectDebug",
		"weaponobjects::showCone",
		"weaponobjects::weaponObjectDetectionMovable",
		"weaponobjects::setIconPos",
		"weaponobjects::weaponObjectDetectionTrigger_Wait",
		"weaponobjects::weaponObjectDetectionTrigger",
		"weaponobjects::hackerTriggerSetVisibility",
		"weaponobjects::hackerNotMoving",
		"weaponobjects::hackerInit",
		"weaponobjects::hackerThink",
		"weaponobjects::itemHacked",
		"weaponobjects::hackerUnfreezePlayer",
		"weaponobjects::hackerResult",
		"weaponobjects::canHack",
		"weaponobjects::hackerRemoveWeapon",
		"weaponobjects::proximityWeaponObject_CreateDamageArea",
		"weaponobjects::proximityWeaponObject_ValidTriggerEntity",
		"weaponobjects::proximityWeaponObject_RemoveSpawnProtectOnDeath",
		"weaponobjects::proximityWeaponObject_SpawnProtect",
		"weaponobjects::proximityWeaponObject_IsSpawnProtected",
		"weaponobjects::proximityWeaponObject_DoDetonation",
		"weaponobjects::proximityWeaponObject_ActivationDelay",
		"weaponobjects::proximityWeaponObject_WaitTillFrameEndAndDoDetonation",
		"weaponobjects::proximityWeaponObjectDetonation",
		"weaponobjects::shouldAffectWeaponObject",
		"weaponobjects::deleteOnDeath",
		"weaponobjects::testKillbrushOnStationary",
		"weaponobjects::deleteOnKillbrush",
		"weaponobjects::watchWeaponObjectAltDetonation",
		"weaponobjects::watchWeaponObjectAltDetonate",
		"weaponobjects::watchWeaponObjectDetonation",
		"weaponobjects::cleanUpWatchers",
		"weaponobjects::watchForDisconnectCleanup",
		"weaponobjects::deleteWeaponObjectsOn",
		"weaponobjects::sayDamaged",
		"weaponobjects::showHeadIcon",
		"weaponobjects::friendlyFireCheck",
		"weaponobjects::onSpawnHatchet",
		"weaponobjects::onSpawnCrossbowBolt",
		"weaponobjects::dieOnEntityDeath",
		"weaponobjects::onSpawnCrossbowBoltImpact",
		"weaponobjects::onSpawnSpecialCrossbowTrigger",
		"weaponobjects::watchSpecialCrossbowTrigger",
		"weaponobjects::onSpawnHatchetTrigger",
		"weaponobjects::watchHatchetTrigger",
		"weaponobjects::get_held_weapon_match_or_root_match",
		"weaponobjects::get_player_crossbow_weapon",
		"weaponobjects::onSpawnRetrievableWeaponObject",
		"weaponobjects::destroyEnt",
		"weaponobjects::pickUp",
		"weaponobjects::pickUpCrossbowBolt",
		"weaponobjects::onDestroyed",
		"weaponobjects::watchShutdown",
		"weaponobjects::watchUseTrigger",
		"weaponobjects::createRetrievableHint",
		"weaponobjects::createHackerHint",
		"weaponobjects::createDestroyHint",
		"weaponobjects::setUpReconEffect",
		"weaponobjects::useTeamEquipmentClientField",
		"weaponobjects::getWatcherForWeapon",
		"weaponobjects::destroy_other_teams_supplemental_watcher_objects",
		"weaponobjects::destroy_supplemental_watcher_objects",
		"weaponobjects::add_supplemental_object",
		"weaponobjects::watch_supplemental_object_death",
		"weaponobjects::switch_team",
		"grapple::translate_notify_1",
		"grapple::watch_for_grapple",
		"grapple::watch_lockon",
		"grapple::clear_lockon_after_grapple",
		"grapple::watch_lockon_angles",
		"grapple::place_dummy_target",
		"grapple::get_a_target",
		"grapple::get_target_type_score",
		"grapple::get_target_score",
		"grapple::pick_a_target_from",
		"grapple::trace",
		"grapple::can_see",
		"grapple::is_valid_target",
		"grapple::inside_screen_angles",
		"grapple::inside_screen_crosshair_radius",
		"grapple::inside_screen_lockon_radius",
		"grapple::inside_screen_radius",
		"grapple::get_target_lock_on_origin",
		"replay_gun::watch_for_replay_gun",
		"replay_gun::get_a_target",
		"replay_gun::get_potential_targets",
		"replay_gun::pick_a_target_from",
		"replay_gun::trace",
		"replay_gun::can_see_projected_crosshair",
		"replay_gun::is_valid_target",
		"replay_gun::inside_screen_crosshair_radius",
		"replay_gun::inside_screen_lockon_radius",
		"replay_gun::inside_screen_radius",
		"replay_gun::get_target_lock_on_origin",
		"tacticalinsertion::on_player_spawned",
		"tacticalinsertion::isTacSpawnTouchingCrates",
		"tacticalinsertion::overrideSpawn",
		"tacticalinsertion::waitAndDelete",
		"tacticalinsertion::watch",
		"tacticalinsertion::watchUseTrigger",
		"tacticalinsertion::watchDisconnect",
		"tacticalinsertion::destroy_tactical_insertion",
		"tacticalinsertion::fizzle",
		"tacticalinsertion::pickUp",
		"tacticalinsertion::spawnTacticalInsertion",
		"tacticalinsertion::cancel_button_think",
		"tacticalinsertion::cancelTackInsertionButton",
		"tacticalinsertion::cancel_button_press",
		"tacticalinsertion::cancel_text_create",
		"tacticalinsertion::getTacticalInsertions",
		"tacticalinsertion::tacticalInsertionDestroyedByTrophySystem",
		"tacticalinsertion::begin_other_grenade_tracking",
		"acousticsensor::createAcousticSensorWatcher",
		"acousticsensor::onSpawnAcousticSensor",
		"acousticsensor::acousticSensorDetonate",
		"acousticsensor::destroyEnt",
		"acousticsensor::watchAcousticSensorDamage",
		"flashgrenades::flashRumbleLoop",
		"flashgrenades::monitorFlash",
		"flashgrenades::monitorRCBombFlash",
		"flashgrenades::applyFlash",
		"flashgrenades::playFlashSound",
		"flashgrenades::deleteEntOnOwnerDeath",
		"heatseekingmissile::init_shared",
		"heatseekingmissile::on_player_spawned",
		"heatseekingmissile::ClearIRTarget",
		"heatseekingmissile::StingerFiredNotify",
		"heatseekingmissile::debug_missile",
		"heatseekingmissile::StingerWaitForAds",
		"heatseekingmissile::StingerToggleLoop",
		"heatseekingmissile::StingerIRTLoop",
		"heatseekingmissile::TargetWithinRangeOfPlaySpace",
		"heatseekingmissile::DestroyLockOnCanceledMessage",
		"heatseekingmissile::DisplayLockOnCanceledMessage",
		"heatseekingmissile::GetBestStingerTarget",
		"heatseekingmissile::CalcLockOnRadius",
		"heatseekingmissile::CalcLockOnLossRadius",
		"heatseekingmissile::RatioDistanceFromScreenCenter",
		"heatseekingmissile::InsideStingerReticleDetect",
		"heatseekingmissile::InsideStingerReticleNoLock",
		"heatseekingmissile::InsideStingerReticleLocked",
		"heatseekingmissile::IsStillValidTarget",
		"heatseekingmissile::PlayerStingerAds",
		"heatseekingmissile::LoopLocalSeekSound",
		"heatseekingmissile::PlaySoundForLocalPlayer",
		"heatseekingmissile::LoopLocalLockSound",
		"heatseekingmissile::LockSightTest",
		"heatseekingmissile::SoftSightTest",
		"heatseekingmissile::InitLockField",
		"heatseekingmissile::LockingOn",
		"heatseekingmissile::WatchClearLockingOn",
		"heatseekingmissile::LockedOn",
		"heatseekingmissile::TargetingHacking",
		"heatseekingmissile::WatchClearHacking",
		"heatseekingmissile::SetFriendlyFlags",
		"heatseekingmissile::SetFriendlyHacking",
		"heatseekingmissile::SetFriendlyTargetting",
		"heatseekingmissile::SetFriendlyTargetLocked",
		"heatseekingmissile::WatchClearLockedon",
		"heatseekingmissile::MissileTarget_LockOnMonitor",
		"heatseekingmissile::_incomingMissile",
		"heatseekingmissile::_incomingMissileTracker",
		"heatseekingmissile::MissileTarget_IsMissileIncoming",
		"heatseekingmissile::MissileTarget_IsOtherPlayerMissileIncoming",
		"heatseekingmissile::MissileTarget_HandleIncomingMissile",
		"heatseekingmissile::MissileTarget_ProximityDetonateIncomingMissile",
		"heatseekingmissile::_missileDetonate",
		"heatseekingmissile::MissileTarget_ProximityDetonate",
		"heatseekingmissile::MissileTarget_PlayFlareFx",
		"heatseekingmissile::MissileTarget_DeployFlares",
		"heatseekingmissile::debug_tracker",
		"smokegrenade::init_shared",
		"smokegrenade::watchSmokeGrenadeDetonation",
		"smokegrenade::smokeDetonate",
		"smokegrenade::damageEffectArea",
		"smokegrenade::smokeBlockSight",
		"smokegrenade::spawnSmokeGrenadeTrigger",
		"smokegrenade::isInSmokeGrenade",
		"smokegrenade::on_player_spawned",
		"smokegrenade::begin_other_grenade_tracking",
		"smokegrenade::playSmokeSound",
		"pineapple_gun::watch_bolt_detonation",
		"trophy_system::register",
		"trophy_system::createTrophySystemWatcher",
		"trophy_system::onTrophySystemSpawn",
		"trophy_system::setReconModelDeployed",
		"trophy_system::trophyWatchHack",
		"trophy_system::onTrophySystemSmashed",
		"trophy_system::trophyActive",
		"trophy_system::projectileExplode",
		"trophy_system::trophyDestroyTacInsert",
		"trophy_system::trophySystemDetonate",
		"trophy_system::watchTrophySystemDamage",
		"trophy_system::ammo_scavenger",
		"trophy_system::ammo_reset",
		"trophy_system::ammo_get",
		"trophy_system::ammo_weapon_pickup",
		"trophy_system::ammo_weapon_hacked",
		"hive_gun::update_dvars",
		"hive_gun::createfireflypodwatcher",
		"hive_gun::on_spawn_firefly_pod",
		"hive_gun::start_damage_effects",
		"hive_gun::end_damage_effects",
		"hive_gun::on_damage_firefly_pod",
		"hive_gun::spawn_firefly_mover",
		"hive_gun::firefly_mover_damage",
		"hive_gun::kill_firefly_mover",
		"hive_gun::firefly_pod_detonate",
		"hive_gun::firefly_pod_destroyed",
		"hive_gun::firefly_killcam_move",
		"hive_gun::firefly_killcam_stop",
		"hive_gun::firefly_move",
		"hive_gun::firefly_partial_move",
		"hive_gun::firefly_rotate",
		"hive_gun::firefly_check_for_collisions",
		"hive_gun::firefly_pod_rotated_point",
		"hive_gun::firefly_pod_random_point",
		"hive_gun::firefly_pod_random_movement",
		"hive_gun::firefly_spyrograph_patrol",
		"hive_gun::firefly_damage_target",
		"hive_gun::firefly_watch_for_target_death",
		"hive_gun::firefly_watch_for_game_ended",
		"hive_gun::firefly_death",
		"hive_gun::cleanup_killcam_entity",
		"hive_gun::get_attack_speed",
		"hive_gun::firefly_attack",
		"hive_gun::get_crumb_position",
		"hive_gun::target_bread_crumbs_render",
		"hive_gun::target_bread_crumbs",
		"hive_gun::get_target_bread_crumb",
		"hive_gun::firefly_check_move",
		"hive_gun::firefly_chase",
		"hive_gun::firefly_pod_start",
		"hive_gun::firefly_pod_release_fireflies",
		"hive_gun::firefly_pod_should_damage",
		"riotshield::register",
		"riotshield::watchPregameClassChange",
		"riotshield::watchRiotshieldPickup",
		"riotshield::trackRiotshield",
		"riotshield::isValidNonShieldWeapon",
		"riotshield::startRiotshieldDeploy",
		"riotshield::resetReconModelVisibility",
		"riotshield::resetReconModelOnEvent",
		"riotshield::attachReconModel",
		"riotshield::spawnRiotshieldCover",
		"riotshield::watchRiotshieldDeploy",
		"riotshield::riotshieldDistanceTest",
		"riotshield::watchDeployedRiotshieldEnts",
		"riotshield::watchDeployedRiotshieldDamage",
		"riotshield::damageThenDestroyRiotshield",
		"riotshield::deleteShieldOnTriggerDeath",
		"riotshield::deleteShieldOnPlayerDeathOrDisconnect",
		"riotshield::watchRiotshieldStuckEntityDeath",
		"riotshield::on_player_spawned",
		"riotshield::watch_riot_shield_use",
		"riotshield::begin_other_grenade_tracking",
		"riotshield::check_stuck_to_shield",
		"hacker_tool::on_player_spawned",
		"hacker_tool::clearHackerTarget",
		"hacker_tool::watchHackerToolFired",
		"hacker_tool::watchHackerToolUse",
		"hacker_tool::watchHackerToolInterrupt",
		"hacker_tool::watchHackerToolEnd",
		"hacker_tool::watchForGrenadeFire",
		"hacker_tool::playHackerToolSoundLoop",
		"hacker_tool::stopHackerToolSoundLoop",
		"hacker_tool::hackerToolTargetLoop",
		"hacker_tool::watchTargetEntityUpdate",
		"hacker_tool::getBestHackerToolTarget",
		"hacker_tool::canTargetEntity",
		"hacker_tool::isWithinHackerToolReticle",
		"hacker_tool::hackingTimeScale",
		"hacker_tool::hackingTimeNoLineOfSightScale",
		"hacker_tool::isEntityHackableWeaponObject",
		"hacker_tool::getWeaponObjectHackerRadius",
		"hacker_tool::getWeaponObjectHackTimeMs",
		"hacker_tool::isEntityHackableCarePackage",
		"hacker_tool::isValidHackerToolTarget",
		"hacker_tool::isEntityPreviouslyHacked",
		"hacker_tool::hackerSoftSightTest",
		"hacker_tool::registerWithHackerTool",
		"hacker_tool::watchHackableEntityDeath",
		"hacker_tool::getHackerToolInnerRadius",
		"hacker_tool::getHackerToolOuterRadius",
		"hacker_tool::getHackTime",
		"hacker_tool::getHackOuterTime",
		"hacker_tool::getLockOnTime",
		"hacker_tool::tunables",
		"proximity_grenade::register",
		"proximity_grenade::updateDvars",
		"proximity_grenade::createProximityGrenadeWatcher",
		"proximity_grenade::createGadgetProximityGrenadeWatcher",
		"proximity_grenade::onSpawnProximityGrenadeWeaponObject",
		"proximity_grenade::trackOnOwner",
		"proximity_grenade::setUpKillCamEnt",
		"proximity_grenade::cleanUpKillCamEntOnDeath",
		"proximity_grenade::proximityDetonate",
		"proximity_grenade::proximityGrenadeDamagePlayer",
		"proximity_grenade::getProximityChain",
		"proximity_grenade::chainIsActive",
		"proximity_grenade::cleanUpProximityChainEnt",
		"proximity_grenade::isInChain",
		"proximity_grenade::addPlayerToChain",
		"proximity_grenade::proximityGrenadeChain",
		"proximity_grenade::chainPlayer",
		"proximity_grenade::tesla_play_arc_fx",
		"proximity_grenade::debugChainSphere",
		"proximity_grenade::watchProximityGrenadeHitPlayer",
		"proximity_grenade::performHudEffects",
		"proximity_grenade::damagePlayerInRadius",
		"proximity_grenade::proximityDeathWait",
		"proximity_grenade::deleteEntOnOwnerDeath",
		"proximity_grenade::deleteEntAfterTime",
		"proximity_grenade::deleteEntOnTimeout",
		"proximity_grenade::watch_death",
		"proximity_grenade::on_player_spawned",
		"proximity_grenade::begin_other_grenade_tracking",
		"proximity_grenade::on_damage",
		"empgrenade::monitorEMPGrenade",
		"empgrenade::applyEMP",
		"empgrenade::empGrenadeDeathWaiter",
		"empgrenade::empGrenadeCleanseWaiter",
		"empgrenade::checkToTurnOffEmp",
		"empgrenade::shutDownEmpRebootIndicatorMenu",
		"empgrenade::empRumbleLoop",
		"empgrenade::watchEMPExplosion",
		"empgrenade::empExplosionDamageEnts",
		"empgrenade::begin_other_grenade_tracking",
		"weapons::init_shared",
		"weapons::on_player_connect",
		"weapons::on_player_spawned",
		"weapons::watch_weapon_change",
		"weapons::update_last_held_weapon_timings",
		"weapons::update_timings",
		"weapons::track",
		"weapons::may_drop",
		"weapons::drop_for_death",
		"weapons::delete_pickup_after_awhile",
		"weapons::watch_pickup",
		"weapons::watch_usage",
		"weapons::track_fire",
		"weapons::watch_grenade_usage",
		"weapons::watch_missile_usage",
		"weapons::watch_missile_death",
		"weapons::drop_all_to_ground",
		"weapons::drop_grenades_to_ground",
		"weapons::watch_grenade_cancel",
		"weapons::begin_grenade_tracking",
		"weapons::begin_other_grenade_tracking",
		"weapons::check_stuck_to_player",
		"weapons::check_hatchet_bounce",
		"weapons::stuck_to_player_team_change",
		"weapons::watch_for_throwbacks",
		"weapons::wait_and_delete_dud",
		"weapons::gettimefromlevelstart",
		"weapons::turn_grenade_into_a_dud",
		"weapons::watch_for_grenade_duds",
		"weapons::watch_for_grenade_launcher_duds",
		"weapons::get_damageable_ents",
		"weapons::damage_trace_passed",
		"weapons::damage_trace",
		"weapons::damage_ent",
		"weapons::on_damage",
		"weapons::play_concussion_sound",
		"weapons::delete_ent_on_owner_death",
		"weapons::update_stowed_weapon",
		"weapons::flash_scavenger_icon",
		"weapons::scavenger_hud_destroyondisconnect",
		"weapons::drop_scavenger_for_death",
		"weapons::add_limited_weapon",
		"weapons::should_drop_limited_weapon",
		"weapons::drop_limited_weapon",
		"weapons::limited_pickup",
		"weapons::track_cooked_detonation",
		"weapons::ninebang_doninebang",
		"weapons::ninebang_getsubexplosionpos",
		"weapons::ninebang_doempdamage",
		"weapons::ninebang_empcandamage",
		"weapons::track_multi_detonation",
		"weapons::multi_detonation_get_cluster_launch_dir",
		"weapons::should_suppress_damage",
		"scrambler::createScramblerWatcher",
		"scrambler::onSpawnScrambler",
		"scrambler::scramblerDetonate",
		"scrambler::watchShutdown",
		"scrambler::destroyEnt",
		"scrambler::watchScramblerDamage",
		"scrambler::ownerSameTeam",
		"scrambler::checkScramblerStun",
		"flagsys::script_flag_wait",
		"fx::get",
		"fx::play",
		"fx::_play_fx_delete",
		"player::on_player_spawned",
		"player::last_valid_position",
		"player::take_weapons",
		"player::generate_weapon_data",
		"player::give_back_weapons",
		"player::get_weapondata",
		"player::weapondata_give",
		"player::switch_to_primary_weapon",
		"player::fill_current_clip",
		"player::is_valid_weapon",
		"player::is_spawn_protected",
		"player::simple_respawn",
		"player::get_snapped_spot_origin",
		"player::allow_stance_change",
		"gameobjects::main",
		"gameobjects::register_allowed_gameobject",
		"gameobjects::clear_allowed_gameobjects",
		"gameobjects::entity_is_allowed",
		"gameobjects::location_is_allowed",
		"gameobjects::filter_script_vehicles_from_vehicle_descriptors",
		"gameobjects::on_player_spawned",
		"gameobjects::on_death",
		"gameobjects::on_disconnect",
		"gameobjects::on_player_last_stand",
		"gameobjects::gameobjects_dropped",
		"gameobjects::create_carry_object",
		"gameobjects::carry_object_use_think",
		"gameobjects::carry_object_prox_think",
		"gameobjects::pickup_object_delay",
		"gameobjects::set_picked_up",
		"gameobjects::unlink_grenades",
		"gameobjects::ghost_visuals",
		"gameobjects::update_carry_object_origin",
		"gameobjects::update_carry_object_objective_origin",
		"gameobjects::give_object",
		"gameobjects::move_visuals_to_base",
		"gameobjects::return_home",
		"gameobjects::is_object_away_from_home",
		"gameobjects::set_position",
		"gameobjects::set_drop_offset",
		"gameobjects::set_dropped",
		"gameobjects::update_icons_and_objective",
		"gameobjects::set_carrier",
		"gameobjects::get_carrier",
		"gameobjects::clear_carrier",
		"gameobjects::is_touching_any_trigger",
		"gameobjects::is_touching_any_trigger_key_value",
		"gameobjects::should_be_reset",
		"gameobjects::pickup_timeout",
		"gameobjects::take_object",
		"gameobjects::wait_take_carry_weapon",
		"gameobjects::take_carry_weapon_on_death",
		"gameobjects::take_carry_weapon",
		"gameobjects::track_carrier",
		"gameobjects::manual_drop_think",
		"gameobjects::create_use_object",
		"gameobjects::set_key_object",
		"gameobjects::has_key_object",
		"gameobjects::use_object_use_think",
		"gameobjects::use_object_onuse",
		"gameobjects::get_earliest_claim_player",
		"gameobjects::use_object_prox_think",
		"gameobjects::use_object_locked_for_team",
		"gameobjects::can_claim",
		"gameobjects::prox_trigger_think",
		"gameobjects::is_excluded",
		"gameobjects::clear_progress",
		"gameobjects::set_claim_team",
		"gameobjects::get_claim_team",
		"gameobjects::continue_trigger_touch_think",
		"gameobjects::trigger_touch_think",
		"gameobjects::update_prox_bar",
		"gameobjects::get_num_touching_except_team",
		"gameobjects::update_use_rate",
		"gameobjects::use_hold_think",
		"gameobjects::WaitThenFreezePlayerControlsIfGameEndedStill",
		"gameobjects::take_use_weapon",
		"gameobjects::continue_hold_think_loop",
		"gameobjects::update_current_progress",
		"gameobjects::use_hold_think_loop",
		"gameobjects::personal_use_bar",
		"gameobjects::update_trigger",
		"gameobjects::update_objective",
		"gameobjects::update_world_icons",
		"gameobjects::update_world_icon",
		"gameobjects::update_compass_icons",
		"gameobjects::update_compass_icon",
		"gameobjects::hide_waypoint",
		"gameobjects::show_waypoint",
		"gameobjects::should_ping_object",
		"gameobjects::get_update_teams",
		"gameobjects::set_owner_team",
		"gameobjects::get_owner_team",
		"gameobjects::set_decay_time",
		"gameobjects::set_use_time",
		"gameobjects::set_use_text",
		"gameobjects::set_team_use_time",
		"gameobjects::set_team_use_text",
		"gameobjects::set_use_hint_text",
		"gameobjects::allow_carry",
		"gameobjects::allow_use",
		"gameobjects::set_visible_team",
		"gameobjects::set_model_visibility",
		"gameobjects::make_solid",
		"gameobjects::set_carrier_visible",
		"gameobjects::set_can_use",
		"gameobjects::set_2d_icon",
		"gameobjects::set_3d_icon",
		"gameobjects::set_3d_icon_color",
		"gameobjects::set_objective_color",
		"gameobjects::set_objective_entity",
		"gameobjects::get_objective_ids",
		"gameobjects::hide_icon_distance_and_los",
		"gameobjects::gameobject_is_player_looking_at",
		"gameobjects::hide_icons",
		"gameobjects::show_icons",
		"gameobjects::set_3d_use_icon",
		"gameobjects::set_3d_is_waypoint",
		"gameobjects::set_carry_icon",
		"gameobjects::set_visible_carrier_model",
		"gameobjects::get_visible_carrier_model",
		"gameobjects::destroy_object",
		"gameobjects::disable_object",
		"gameobjects::enable_object",
		"gameobjects::get_relative_team",
		"gameobjects::is_friendly_team",
		"gameobjects::can_interact_with",
		"gameobjects::is_team",
		"gameobjects::is_relative_team",
		"gameobjects::get_enemy_team",
		"gameobjects::get_next_obj_id",
		"gameobjects::release_obj_id",
		"gameobjects::release_all_objective_ids",
		"gameobjects::get_label",
		"gameobjects::must_maintain_claim",
		"gameobjects::can_contest_claim",
		"gameobjects::set_flags",
		"gameobjects::get_flags",
		"gameobjects::create_pack_object",
		"gameobjects::give_pack_object",
		"gameobjects::get_packicon_offset",
		"gameobjects::adjust_remaining_packicons",
		"gameobjects::set_pack_icon",
		"ability_util::gadget_is_type",
		"ability_util::gadget_slot_for_type",
		"ability_util::gadget_is_camo_suit_on",
		"ability_util::gadget_combat_efficiency_enabled",
		"ability_util::gadget_combat_efficiency_power_drain",
		"ability_util::gadget_is_camo_suit_flickering",
		"ability_util::gadget_is_escort_drone_on",
		"ability_util::is_weapon_gadget",
		"ability_util::gadget_power_reset",
		"ability_util::gadget_reset",
		"ability_util::gadget_power_armor_on",
		"ability_util::gadget_is_active",
		"ability_util::gadget_has_type",
		"ability_power::cpower_print",
		"ability_power::on_player_connect",
		"ability_power::power_is_hero_ability",
		"ability_power::is_weapon_or_variant_same_as_gadget",
		"ability_power::power_gain_event_score",
		"ability_power::power_gain_event_damage_actor",
		"ability_power::power_gain_event_killed_actor",
		"ability_power::power_gain_event",
		"ability_power::power_loss_event_took_damage",
		"ability_power::power_loss_event",
		"ability_power::power_drain_completely",
		"ability_power::ismovingpowerloss",
		"ability_power::power_consume_timer_think",
		"ability_player::init_abilities",
		"ability_player::setup_clientfields",
		"ability_player::on_player_connect",
		"ability_player::on_player_spawned",
		"ability_player::on_player_disconnect",
		"ability_player::is_using_any_gadget",
		"ability_player::gadgets_save_power",
		"ability_player::gadgets_wait_for_death",
		"ability_player::gadgets_wait_for_game_end",
		"ability_player::script_set_cclass",
		"ability_player::update_gadget",
		"ability_player::register_gadget",
		"ability_player::register_gadget_should_notify",
		"ability_player::register_gadget_possession_callbacks",
		"ability_player::register_gadget_activation_callbacks",
		"ability_player::register_gadget_flicker_callbacks",
		"ability_player::register_gadget_ready_callbacks",
		"ability_player::register_gadget_primed_callbacks",
		"ability_player::register_gadget_is_inuse_callbacks",
		"ability_player::register_gadget_is_flickering_callbacks",
		"ability_player::register_gadget_failed_activate_callback",
		"ability_player::gadget_is_in_use",
		"ability_player::gadget_is_flickering",
		"ability_player::give_gadget",
		"ability_player::take_gadget",
		"ability_player::turn_gadget_on",
		"ability_player::turn_gadget_off",
		"ability_player::gadget_checkheroabilitykill",
		"ability_player::gadget_flicker",
		"ability_player::gadget_ready",
		"ability_player::gadget_primed",
		"ability_player::abilities_print",
		"ability_player::abilities_devgui_init",
		"ability_player::abilities_devgui_player_connect",
		"ability_player::abilities_devgui_add_player_commands",
		"ability_player::abilities_devgui_add_player_command",
		"ability_player::abilities_devgui_add_power",
		"ability_player::abilities_devgui_add_gadgets",
		"ability_player::abilities_devgui_add_player_weapons",
		"ability_player::abilities_devgui_add_player_weap_command",
		"ability_player::abilities_devgui_player_disconnect",
		"ability_player::abilities_devgui_think",
		"ability_player::abilities_devgui_give",
		"ability_player::abilities_devgui_handle_player_command",
		"ability_player::abilities_devgui_power_fill",
		"ability_player::abilities_devgui_power_toggle_auto_fill",
		"ability_player::abilities_devgui_power_toggle_auto_fill_think",
		"ability_gadgets::gadgets_print",
		"ability_gadgets::on_player_connect",
		"ability_gadgets::setflickering",
		"ability_gadgets::on_player_spawned",
		"ability_gadgets::gadget_give_callback",
		"ability_gadgets::gadget_take_callback",
		"ability_gadgets::gadget_primed_callback",
		"ability_gadgets::gadget_ready_callback",
		"ability_gadgets::gadget_on_callback",
		"ability_gadgets::gadget_off_callback",
		"ability_gadgets::gadget_flicker_callback",
		"_gadget_servo_shortout::gadget_servo_shortout_is_inuse",
		"_gadget_servo_shortout::gadget_servo_shortout_is_flickering",
		"_gadget_servo_shortout::gadget_servo_shortout_on_flicker",
		"_gadget_servo_shortout::gadget_servo_shortout_on_give",
		"_gadget_servo_shortout::gadget_servo_shortout_on_take",
		"_gadget_servo_shortout::gadget_servo_shortout_on_connect",
		"_gadget_servo_shortout::gadget_servo_shortout_on",
		"_gadget_servo_shortout::gadget_servo_shortout_off",
		"_gadget_servo_shortout::gadget_servo_shortout_is_primed",
		"_gadget_rapid_strike::gadget_rapid_strike_is_inuse",
		"_gadget_rapid_strike::gadget_rapid_strike_is_flickering",
		"_gadget_rapid_strike::gadget_rapid_strike_on_flicker",
		"_gadget_rapid_strike::gadget_rapid_strike_on_give",
		"_gadget_rapid_strike::gadget_rapid_strike_on_take",
		"_gadget_rapid_strike::gadget_rapid_strike_on_connect",
		"_gadget_rapid_strike::gadget_rapid_strike_on",
		"_gadget_rapid_strike::gadget_rapid_strike_off",
		"_gadget_hero_weapon::gadget_hero_weapon_is_inuse",
		"_gadget_hero_weapon::gadget_hero_weapon_is_flickering",
		"_gadget_hero_weapon::gadget_hero_weapon_on_flicker",
		"_gadget_hero_weapon::gadget_hero_weapon_on_give",
		"_gadget_hero_weapon::gadget_hero_weapon_on_take",
		"_gadget_hero_weapon::gadget_hero_weapon_on_connect",
		"_gadget_hero_weapon::gadget_hero_weapon_on_spawn",
		"_gadget_hero_weapon::gadget_hero_weapon_on_activate",
		"_gadget_hero_weapon::gadget_hero_weapon_on_off",
		"_gadget_hero_weapon::gadget_hero_weapon_ready",
		"_gadget_hero_weapon::hero_give_ammo",
		"_gadget_hero_weapon::hero_handle_ammo_save",
		"_gadget_hero_weapon::hero_wait_for_game_end",
		"_gadget_hero_weapon::hero_wait_for_death",
		"_gadget_hero_weapon::hero_save_ammo",
		"_gadget_hero_weapon::hero_wait_for_out_of_ammo",
		"_gadget_hero_weapon::set_gadget_hero_weapon_status",
		"resurrect::gadget_resurrect_is_inuse",
		"resurrect::gadget_resurrect_is_flickering",
		"resurrect::gadget_resurrect_on_flicker",
		"resurrect::gadget_resurrect_on_give",
		"resurrect::gadget_resurrect_on_take",
		"resurrect::gadget_resurrect_on_spawned",
		"resurrect::resurrect_drain_power",
		"resurrect::gadget_resurrect_on_connect",
		"resurrect::gadget_resurrect_on",
		"resurrect::watch_smoke_detonate",
		"resurrect::watch_smoke_death",
		"resurrect::watch_smoke_effect_watch_suicide",
		"resurrect::watch_smoke_effect_watch_resurrect",
		"resurrect::gadget_resurrect_is_primed",
		"resurrect::gadget_resurrect_is_ready",
		"resurrect::gadget_resurrect_start",
		"resurrect::gadget_resurrect_off",
		"resurrect::resurrect_delay",
		"resurrect::overridespawn",
		"resurrect::is_jumping",
		"resurrect::player_position_valid",
		"resurrect::resurrect_breadcrumbs",
		"resurrect::glow_for_time",
		"resurrect::wait_for_time",
		"resurrect::wait_for_activate",
		"resurrect::bot_wait_for_activate",
		"resurrect::do_resurrect_hint_fx",
		"resurrect::do_resurrected_on_dead_body_fx",
		"resurrect::do_resurrected_on_spawned_player_fx",
		"resurrect::resurrect_watch_for_death",
		"resurrect::gadget_resurrect_delay_updateteamstatus",
		"resurrect::gadget_resurrect_is_player_predead",
		"resurrect::gadget_resurrect_secondary_deathcam_time",
		"resurrect::enter_rejack_standby",
		"resurrect::rejack_suicide",
		"resurrect::watch_bad_trigger_touch",
		"resurrect::watch_rejack_timeout",
		"resurrect::watch_rejack_suicide",
		"resurrect::reload_clip_on_stand",
		"resurrect::watch_rejack_activate_requested",
		"resurrect::watch_rejack_activate",
		"resurrect::init_rejack_ui",
		"resurrect::remove_rejack_ui",
		"resurrect::rejack_ui_activate",
		"resurrect::player_suicide",
		"_gadget_concussive_wave::gadget_concussive_wave_is_inuse",
		"_gadget_concussive_wave::gadget_concussive_wave_is_flickering",
		"_gadget_concussive_wave::gadget_concussive_wave_on_flicker",
		"_gadget_concussive_wave::gadget_concussive_wave_on_give",
		"_gadget_concussive_wave::gadget_concussive_wave_on_take",
		"_gadget_concussive_wave::gadget_concussive_wave_on_connect",
		"_gadget_concussive_wave::gadget_concussive_wave_on",
		"_gadget_concussive_wave::gadget_concussive_wave_off",
		"_gadget_concussive_wave::gadget_concussive_wave_is_primed",
		"_gadget_combat_efficiency::gadget_combat_efficiency_is_inuse",
		"_gadget_combat_efficiency::gadget_combat_efficiency_is_flickering",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_flicker",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_give",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_take",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_connect",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_spawn",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_activate",
		"_gadget_combat_efficiency::gadget_combat_efficiency_on_off",
		"_gadget_combat_efficiency::gadget_combat_efficiency_ready",
		"_gadget_combat_efficiency::set_gadget_combat_efficiency_status",
		"_gadget_exo_breakdown::gadget_exo_breakdown_is_inuse",
		"_gadget_exo_breakdown::gadget_exo_breakdown_is_flickering",
		"_gadget_exo_breakdown::gadget_exo_breakdown_on_flicker",
		"_gadget_exo_breakdown::gadget_exo_breakdown_on_give",
		"_gadget_exo_breakdown::gadget_exo_breakdown_on_take",
		"_gadget_exo_breakdown::gadget_exo_breakdown_on_connect",
		"_gadget_exo_breakdown::gadget_exo_breakdown_on",
		"_gadget_exo_breakdown::gadget_exo_breakdown_off",
		"_gadget_exo_breakdown::gadget_exo_breakdown_is_primed",
		"_gadget_cleanse::gadget_cleanse_is_inuse",
		"_gadget_cleanse::gadget_cleanse_is_flickering",
		"_gadget_cleanse::gadget_cleanse_on_flicker",
		"_gadget_cleanse::gadget_cleanse_on_give",
		"_gadget_cleanse::gadget_cleanse_on_take",
		"_gadget_cleanse::gadget_cleanse_on_connect",
		"_gadget_cleanse::gadget_cleanse_on",
		"_gadget_cleanse::gadget_cleanse_off",
		"_gadget_cleanse::gadget_cleanse_start",
		"_gadget_cleanse::wait_until_is_done",
		"_gadget_surge::gadget_surge_is_inuse",
		"_gadget_surge::gadget_surge_is_flickering",
		"_gadget_surge::gadget_surge_on_flicker",
		"_gadget_surge::gadget_surge_on_give",
		"_gadget_surge::gadget_surge_on_take",
		"_gadget_surge::gadget_surge_on_connect",
		"_gadget_surge::gadget_surge_on",
		"_gadget_surge::gadget_surge_off",
		"flashback::gadget_flashback_spawned",
		"flashback::gadget_flashback_is_inuse",
		"flashback::gadget_flashback_is_flickering",
		"flashback::gadget_flashback_on_flicker",
		"flashback::gadget_flashback_on_give",
		"flashback::gadget_flashback_on_take",
		"flashback::gadget_flashback_on_connect",
		"flashback::clone_watch_death",
		"flashback::debug_star",
		"flashback::drop_unlinked_grenades",
		"flashback::unlink_grenades",
		"flashback::gadget_flashback_on",
		"flashback::watchclientfields",
		"flashback::flashbacktrailimpact",
		"flashback::deactivateflashbackwarpaftertime",
		"flashback::flashbacktrailfx",
		"flashback::gadget_flashback_is_primed",
		"flashback::gadget_flashback_off",
		"_gadget_other::gadget_other_is_inuse",
		"_gadget_other::gadget_other_is_flickering",
		"_gadget_other::gadget_other_on_flicker",
		"_gadget_other::gadget_other_on_give",
		"_gadget_other::gadget_other_on_take",
		"_gadget_other::gadget_other_on_connect",
		"_gadget_other::gadget_other_on_spawn",
		"_gadget_other::gadget_other_on_activate",
		"_gadget_other::gadget_other_on_off",
		"_gadget_other::gadget_other_ready",
		"_gadget_other::set_gadget_other_status",
		"_gadget_sensory_overload::gadget_sensory_overload_is_inuse",
		"_gadget_sensory_overload::gadget_sensory_overload_is_flickering",
		"_gadget_sensory_overload::gadget_sensory_overload_on_flicker",
		"_gadget_sensory_overload::gadget_sensory_overload_on_give",
		"_gadget_sensory_overload::gadget_sensory_overload_on_take",
		"_gadget_sensory_overload::gadget_sensory_overload_on_connect",
		"_gadget_sensory_overload::gadget_sensory_overload_on",
		"_gadget_sensory_overload::gadget_sensory_overload_off",
		"_gadget_sensory_overload::gadget_sensory_overload_is_primed",
		"_gadget_misdirection::gadget_misdirection_is_inuse",
		"_gadget_misdirection::gadget_misdirection_is_flickering",
		"_gadget_misdirection::gadget_misdirection_on_flicker",
		"_gadget_misdirection::gadget_misdirection_on_give",
		"_gadget_misdirection::gadget_misdirection_on_take",
		"_gadget_misdirection::gadget_misdirection_on_connect",
		"_gadget_misdirection::gadget_misdirection_on",
		"roulette::updatedvars",
		"roulette::gadget_roulette_is_inuse",
		"roulette::gadget_roulette_is_flickering",
		"roulette::gadget_roulette_on_flicker",
		"roulette::gadget_roulette_on_give",
		"roulette::gadget_roulette_on_take",
		"roulette::gadget_roulette_on_connect",
		"roulette::roulette_init_allow_spin",
		"roulette::gadget_roulette_on_player_spawn",
		"roulette::watch_entity_shutdown",
		"roulette::gadget_roulette_on_activate",
		"roulette::gadget_roulette_is_ready",
		"roulette::gadget_roulette_give_earned_specialist",
		"roulette::disable_hero_gadget_activation",
		"roulette::watchrespingadgetactivated",
		"roulette::watchrespin",
		"roulette::failsafe_reenable_offhand_special",
		"roulette::reset_roulette_state_to_default",
		"roulette::watchgadgetactivated",
		"roulette::giverandomweapon",
		"roulette::gadget_roulette_on_deactivate",
		"roulette::gadget_roulette_on_deactivate_helper",
		"roulette::gadget_roulette_flicker",
		"roulette::set_gadget_status",
		"roulette::dpad_left_pressed",
		"roulette::getrandomgadget",
		"roulette::registergadgettype",
		"_gadget_immolation::gadget_immolation_is_inuse",
		"_gadget_immolation::gadget_immolation_is_flickering",
		"_gadget_immolation::gadget_immolation_on_flicker",
		"_gadget_immolation::gadget_immolation_on_give",
		"_gadget_immolation::gadget_immolation_on_take",
		"_gadget_immolation::gadget_immolation_on_connect",
		"_gadget_immolation::gadget_immolation_on",
		"_gadget_immolation::gadget_immolation_off",
		"_gadget_active_camo::camo_on_connect",
		"_gadget_active_camo::camo_on_disconnect",
		"_gadget_active_camo::camo_on_spawn",
		"_gadget_active_camo::camo_is_inuse",
		"_gadget_active_camo::camo_is_flickering",
		"_gadget_active_camo::camo_on_give",
		"_gadget_active_camo::camo_on_take",
		"_gadget_active_camo::camo_on_flicker",
		"_gadget_active_camo::camo_gadget_on",
		"_gadget_active_camo::camo_gadget_off",
		"_gadget_active_camo::suspend_camo_suit",
		"_gadget_active_camo::suspend_camo_suit_wait",
		"armor::gadget_armor_is_inuse",
		"armor::gadget_armor_is_flickering",
		"armor::gadget_armor_on_flicker",
		"armor::gadget_armor_on_give",
		"armor::gadget_armor_on_take",
		"armor::gadget_armor_on_connect",
		"armor::gadget_armor_on",
		"armor::gadget_armor_off",
		"armor::gadget_armor_flicker",
		"armor::set_gadget_status",
		"armor::armor_damage_type_multiplier",
		"armor::armor_damage_mod_allowed",
		"armor::armor_should_take_damage",
		"armor::armor_player_damage",
		"armor::hitpoints_loss_event",
		"armor::gadget_armor_status",
		"_gadget_system_overload::gadget_system_overload_is_inuse",
		"_gadget_system_overload::gadget_system_overload_is_flickering",
		"_gadget_system_overload::gadget_system_overload_on_flicker",
		"_gadget_system_overload::gadget_system_overload_on_give",
		"_gadget_system_overload::gadget_system_overload_on_take",
		"_gadget_system_overload::gadget_system_overload_on_connect",
		"_gadget_system_overload::gadget_system_overload_on",
		"_gadget_system_overload::gadget_system_overload_off",
		"_gadget_system_overload::gadget_system_overload_is_primed",
		"_gadget_ravage_core::gadget_ravage_core_is_inuse",
		"_gadget_ravage_core::gadget_ravage_core_is_flickering",
		"_gadget_ravage_core::gadget_ravage_core_on_flicker",
		"_gadget_ravage_core::gadget_ravage_core_on_give",
		"_gadget_ravage_core::gadget_ravage_core_on_take",
		"_gadget_ravage_core::gadget_ravage_core_on_connect",
		"_gadget_ravage_core::gadget_ravage_core_on",
		"_gadget_ravage_core::gadget_ravage_core_off",
		"_gadget_iff_override::gadget_iff_override_is_inuse",
		"_gadget_iff_override::gadget_iff_override_is_flickering",
		"_gadget_iff_override::gadget_iff_override_on_flicker",
		"_gadget_iff_override::gadget_iff_override_on_give",
		"_gadget_iff_override::gadget_iff_override_on_take",
		"_gadget_iff_override::gadget_iff_override_on_connect",
		"_gadget_iff_override::gadget_iff_override_on",
		"_gadget_clone::gadget_clone_is_inuse",
		"_gadget_clone::gadget_clone_is_flickering",
		"_gadget_clone::gadget_clone_on_flicker",
		"_gadget_clone::gadget_clone_on_give",
		"_gadget_clone::gadget_clone_on_take",
		"_gadget_clone::gadget_clone_on_connect",
		"_gadget_clone::killclones",
		"_gadget_clone::is_jumping",
		"_gadget_clone::calculatespawnorigin",
		"_gadget_clone::insertclone",
		"_gadget_clone::removeclone",
		"_gadget_clone::removeoldestclone",
		"_gadget_clone::spawnclones",
		"_gadget_clone::gadget_clone_off",
		"_gadget_clone::processclonescoreevent",
		"_gadget_clone::clonedamageoverride",
		"_gadget_clone::_clonewatchownerdisconnect",
		"_gadget_clone::_clonewatchshutdown",
		"_gadget_clone::_clonebreakglass",
		"_gadget_clone::_clonefakefire",
		"_gadget_clone::_cloneselectweapon",
		"heat_wave::updatedvars",
		"heat_wave::gadget_heat_wave_is_inuse",
		"heat_wave::gadget_heat_wave_is_flickering",
		"heat_wave::gadget_heat_wave_on_flicker",
		"heat_wave::gadget_heat_wave_on_give",
		"heat_wave::gadget_heat_wave_on_take",
		"heat_wave::gadget_heat_wave_on_connect",
		"heat_wave::gadget_heat_wave_on_player_spawn",
		"heat_wave::watch_entity_shutdown",
		"heat_wave::gadget_heat_wave_on_activate",
		"heat_wave::toggle_activate_clientfields",
		"heat_wave::gadget_heat_wave_on_deactivate",
		"heat_wave::gadget_heat_wave_flicker",
		"heat_wave::set_gadget_status",
		"heat_wave::is_entity_valid",
		"heat_wave::heat_wave_trace_entity",
		"heat_wave::heat_wave_fx_cleanup",
		"heat_wave::heat_wave_fx",
		"heat_wave::heat_wave_setup",
		"heat_wave::heat_wave_think",
		"heat_wave::heat_wave_damage_entities",
		"heat_wave::heat_wave_burn_entities",
		"heat_wave::heat_wave_damage_projectiles",
		"heat_wave::projectileexplode",
		"heat_wave::apply_burn",
		"heat_wave::watch_burn_clear",
		"heat_wave::update_last_burned_by",
		"heat_wave::heat_wave_burn_sound",
		"_gadget_es_strike::gadget_es_strike_is_inuse",
		"_gadget_es_strike::gadget_es_strike_is_flickering",
		"_gadget_es_strike::gadget_es_strike_on_flicker",
		"_gadget_es_strike::gadget_es_strike_on_give",
		"_gadget_es_strike::gadget_es_strike_on_take",
		"_gadget_es_strike::gadget_es_strike_on_connect",
		"_gadget_es_strike::gadget_es_strike_on",
		"_gadget_es_strike::gadget_es_strike_off",
		"_gadget_security_breach::gadget_security_breach_is_inuse",
		"_gadget_security_breach::gadget_security_breach_is_flickering",
		"_gadget_security_breach::gadget_security_breach_on_flicker",
		"_gadget_security_breach::gadget_security_breach_on_give",
		"_gadget_security_breach::gadget_security_breach_on_take",
		"_gadget_security_breach::gadget_security_breach_on_connect",
		"_gadget_security_breach::gadget_security_breach_on",
		"_gadget_security_breach::gadget_security_breach_off",
		"_gadget_security_breach::gadget_security_breach_is_primed",
		"_gadget_overdrive::gadget_overdrive_is_inuse",
		"_gadget_overdrive::gadget_overdrive_is_flickering",
		"_gadget_overdrive::gadget_overdrive_on_flicker",
		"_gadget_overdrive::gadget_overdrive_on_give",
		"_gadget_overdrive::gadget_overdrive_on_take",
		"_gadget_overdrive::gadget_overdrive_on_connect",
		"_gadget_overdrive::gadget_overdrive_on",
		"_gadget_overdrive::gadget_overdrive_off",
		"_gadget_forced_malfunction::gadget_forced_malfunction_is_inuse",
		"_gadget_forced_malfunction::gadget_forced_malfunction_is_flickering",
		"_gadget_forced_malfunction::gadget_forced_malfunction_on_flicker",
		"_gadget_forced_malfunction::gadget_forced_malfunction_on_give",
		"_gadget_forced_malfunction::gadget_forced_malfunction_on_take",
		"_gadget_forced_malfunction::gadget_forced_malfunction_on_connect",
		"_gadget_forced_malfunction::gadget_forced_malfunction_on",
		"_gadget_forced_malfunction::gadget_forced_malfunction_off",
		"_gadget_forced_malfunction::gadget_forced_malfunction_is_primed",
		"_gadget_unstoppable_force::gadget_unstoppable_force_is_inuse",
		"_gadget_unstoppable_force::gadget_unstoppable_force_is_flickering",
		"_gadget_unstoppable_force::gadget_unstoppable_force_on_flicker",
		"_gadget_unstoppable_force::gadget_unstoppable_force_on_give",
		"_gadget_unstoppable_force::gadget_unstoppable_force_on_take",
		"_gadget_unstoppable_force::gadget_unstoppable_force_on_connect",
		"_gadget_unstoppable_force::gadget_unstoppable_force_on",
		"_gadget_unstoppable_force::gadget_unstoppable_force_off",
		"_gadget_unstoppable_force::gadget_firefly_is_primed",
		"_gadget_smokescreen::gadget_smokescreen_is_inuse",
		"_gadget_smokescreen::gadget_smokescreen_is_flickering",
		"_gadget_smokescreen::gadget_smokescreen_on_flicker",
		"_gadget_smokescreen::gadget_smokescreen_on_give",
		"_gadget_smokescreen::gadget_smokescreen_on_take",
		"_gadget_smokescreen::gadget_smokescreen_on_connect",
		"_gadget_smokescreen::gadget_smokescreen_on",
		"_gadget_mrpukey::gadget_mrpukey_is_inuse",
		"_gadget_mrpukey::gadget_mrpukey_is_flickering",
		"_gadget_mrpukey::gadget_mrpukey_on_flicker",
		"_gadget_mrpukey::gadget_mrpukey_on_give",
		"_gadget_mrpukey::gadget_mrpukey_on_take",
		"_gadget_mrpukey::gadge_mrpukey_on_connect",
		"_gadget_mrpukey::gadget_mrpukey_on",
		"_gadget_mrpukey::gadget_mrpukey_off",
		"_gadget_firefly_swarm::gadget_firefly_swarm_is_inuse",
		"_gadget_firefly_swarm::gadget_firefly_swarm_is_flickering",
		"_gadget_firefly_swarm::gadget_firefly_swarm_on_flicker",
		"_gadget_firefly_swarm::gadget_firefly_swarm_on_give",
		"_gadget_firefly_swarm::gadget_firefly_swarm_on_take",
		"_gadget_firefly_swarm::gadget_firefly_swarm_on_connect",
		"_gadget_firefly_swarm::gadget_firefly_swarm_on",
		"_gadget_firefly_swarm::gadget_firefly_swarm_off",
		"_gadget_firefly_swarm::gadget_firefly_is_primed",
		"_gadget_cacophany::gadget_cacophany_is_inuse",
		"_gadget_cacophany::gadget_cacophany_is_flickering",
		"_gadget_cacophany::gadget_cacophany_on_flicker",
		"_gadget_cacophany::gadget_cacophany_on_give",
		"_gadget_cacophany::gadget_cacophany_on_take",
		"_gadget_cacophany::gadget_cacophany_on_connect",
		"_gadget_cacophany::gadget_cacophany_on",
		"_gadget_cacophany::gadget_cacophany_off",
		"speedburst::gadget_speed_burst_is_inuse",
		"speedburst::gadget_speed_burst_is_flickering",
		"speedburst::gadget_speed_burst_on_flicker",
		"speedburst::gadget_speed_burst_on_give",
		"speedburst::gadget_speed_burst_on_take",
		"speedburst::gadget_speed_burst_on_connect",
		"speedburst::gadget_speed_burst_on",
		"speedburst::gadget_speed_burst_off",
		"speedburst::gadget_speed_burst_flicker",
		"speedburst::set_gadget_status",
		"_gadget_camo::camo_is_inuse",
		"_gadget_camo::camo_is_flickering",
		"_gadget_camo::camo_on_connect",
		"_gadget_camo::camo_on_disconnect",
		"_gadget_camo::camo_on_spawn",
		"_gadget_camo::suspend_camo_suit",
		"_gadget_camo::suspend_camo_suit_wait",
		"_gadget_camo::camo_on_give",
		"_gadget_camo::camo_on_take",
		"_gadget_camo::camo_on_flicker",
		"_gadget_camo::camo_all_actors",
		"_gadget_camo::camo_gadget_on",
		"_gadget_camo::camo_gadget_off",
		"_gadget_camo::camo_bread_crumb",
		"_gadget_camo::camo_bread_crumb_wait",
		"_gadget_camo::camo_bread_crumb_delete",
		"_gadget_camo::camo_takedown_watch",
		"_gadget_camo::camo_temporary_dont_ignore",
		"_gadget_camo::camo_temporary_dont_ignore_wait",
		"_gadget_camo::camo_suit_flicker",
		"_gadget_camo::set_camo_reveal_status",
		"_gadget_shock_field::gadget_shock_field_is_inuse",
		"_gadget_shock_field::gadget_shock_field_is_flickering",
		"_gadget_shock_field::gadget_shock_field_on_flicker",
		"_gadget_shock_field::gadget_shock_field_on_give",
		"_gadget_shock_field::gadget_shock_field_on_take",
		"_gadget_shock_field::gadget_shock_field_on_connect",
		"_gadget_shock_field::gadget_shock_field_on",
		"_gadget_shock_field::gadget_shock_field_off",
		"_gadget_shock_field::shock_field_think",
		"_gadget_shock_field::shock_field_zap_sound",
		"_gadget_shock_field::flicker_field_fx",
		"_gadget_vision_pulse::gadget_vision_pulse_is_inuse",
		"_gadget_vision_pulse::gadget_vision_pulse_is_flickering",
		"_gadget_vision_pulse::gadget_vision_pulse_on_flicker",
		"_gadget_vision_pulse::gadget_vision_pulse_on_give",
		"_gadget_vision_pulse::gadget_vision_pulse_on_take",
		"_gadget_vision_pulse::gadget_vision_pulse_on_connect",
		"_gadget_vision_pulse::gadget_vision_pulse_on_spawn",
		"_gadget_vision_pulse::gadget_vision_pulse_ramp_hold_func",
		"_gadget_vision_pulse::gadget_vision_pulse_watch_death",
		"_gadget_vision_pulse::gadget_vision_pulse_watch_emp",
		"_gadget_vision_pulse::gadget_vision_pulse_on",
		"_gadget_vision_pulse::gadget_vision_pulse_off",
		"_gadget_vision_pulse::gadget_vision_pulse_start",
		"_gadget_vision_pulse::wait_until_is_done",
		"_gadget_vision_pulse::gadget_vision_pulse_flicker",
		"_gadget_vision_pulse::set_gadget_vision_pulse_status",
		"thief::updatedvars",
		"thief::setup_gadget_thief_array",
		"thief::gadget_thief_is_inuse",
		"thief::gadget_thief_is_flickering",
		"thief::gadget_thief_on_flicker",
		"thief::gadget_thief_on_give",
		"thief::gadget_thief_kill_callback",
		"thief::gadget_thief_on_take",
		"thief::gadget_thief_on_connect",
		"thief::gadget_thief_on_player_spawn",
		"thief::watch_entity_shutdown",
		"thief::gadget_thief_on_activate",
		"thief::gadget_thief_is_ready",
		"thief::gadget_thief_active",
		"thief::getstolenheroweapon",
		"thief::resetflashstartandendafterdelay",
		"thief::getthiefpowergain",
		"thief::handlethiefkill",
		"thief::earnedspecialistweapon",
		"thief::giveflipweapon",
		"thief::givepreviouslyearnedspecialistweapon",
		"thief::disable_hero_gadget_activation",
		"thief::failsafe_reenable_offhand_special",
		"thief::handlestolenscoreevent",
		"thief::watchforherokill",
		"thief::spawnthiefbeameffect",
		"thief::watchforallkillsdebug",
		"thief::waitthendelete",
		"thief::gadget_give_random_gadget",
		"thief::watchforoptionuse",
		"thief::dpad_left_pressed",
		"thief::watchheroweaponchanged",
		"thief::watchgadgetactivated",
		"thief::gadget_thief_on_deactivate",
		"thief::gadget_thief_flicker",
		"thief::set_gadget_status",
		"thief::getvictimbodyindex",
		"gameskill::setskill",
		"gameskill::apply_difficulty_var_with_func",
		"gameskill::apply_threat_bias_to_all_players",
		"gameskill::coop_damage_and_accuracy_scaling",
		"gameskill::set_difficulty_from_locked_settings",
		"gameskill::get_locked_difficulty_val",
		"gameskill::always_pain",
		"gameskill::pain_protection",
		"gameskill::pain_protection_check",
		"gameskill::playerhealthdebug",
		"gameskill::printhealthdebug",
		"gameskill::destroyhealthdebug",
		"gameskill::axisaccuracycontrol",
		"gameskill::alliesaccuracycontrol",
		"gameskill::playerhurtcheck",
		"gameskill::playerhealthregen",
		"gameskill::reducetakecoverwarnings",
		"gameskill::debugtakecoverwarnings",
		"gameskill::playerinvul",
		"gameskill::grenadeawareness",
		"gameskill::playerheartbeatloop",
		"gameskill::delayed_delete",
		"gameskill::healthfadeoffwatcher",
		"gameskill::new_style_health_overlay",
		"gameskill::healthoverlay",
		"gameskill::create_warning_elem",
		"gameskill::play_hurt_vox",
		"gameskill::waittillplayerishitagain",
		"gameskill::destroy_warning_elem_when_mission_failed",
		"gameskill::destroy_warning_elem",
		"gameskill::maychangecoverwarningalpha",
		"gameskill::fontscaler",
		"gameskill::cover_warning_check",
		"gameskill::shouldshowcoverwarning",
		"gameskill::fadefunc",
		"gameskill::healthoverlay_remove",
		"gameskill::settakecoverwarnings",
		"gameskill::increment_take_cover_warnings_on_death",
		"gameskill::empty_kill_func",
		"gameskill::update_skill_level",
		"gameskill::coop_enemy_accuracy_scalar_watcher",
		"gameskill::coop_friendly_accuracy_scalar_watcher",
		"gameskill::coop_axis_accuracy_scaler",
		"gameskill::coop_allies_accuracy_scaler",
		"gameskill::coop_player_threat_bias_adjuster",
		"gameskill::enable_auto_adjust_threatbias",
		"gameskill::setdiffstructarrays",
		"gameskill::get_player_threat_bias",
		"gameskill::get_player_xp_difficulty_multiplier",
		"gameskill::get_health_overlay_cutoff",
		"gameskill::get_enemy_pain_chance",
		"gameskill::get_player_death_invulnerable_time",
		"gameskill::get_base_enemy_accuracy",
		"gameskill::get_player_difficulty_health",
		"gameskill::get_player_hit_invuln_time",
		"gameskill::get_miss_time_constant",
		"gameskill::get_miss_time_reset_delay",
		"gameskill::get_miss_time_distance_factor",
		"gameskill::get_dog_health",
		"gameskill::get_dog_press_time",
		"gameskill::get_dog_hits_before_kill",
		"gameskill::get_long_regen_time",
		"gameskill::get_player_health_regular_regen_delay",
		"gameskill::get_worthy_damage_ratio",
		"gameskill::get_coop_enemy_accuracy_modifier",
		"gameskill::get_coop_friendly_accuracy_modifier",
		"gameskill::get_coop_friendly_threat_bias_scalar",
		"gameskill::get_coop_player_health_modifier",
		"gameskill::get_coop_player_death_invulnerable_time_modifier",
		"gameskill::get_coop_hit_invulnerability_modifier",
		"gameskill::get_coop_enemy_pain_chance_modifier",
		"gameskill::get_general_difficulty_level",
		"gameskill::player_eligible_for_death_invulnerability",
		"gameskill::monitor_player_death_invulnerability_eligibility",
		"gameskill::adjust_damage_for_player_health",
		"gameskill::adjust_melee_damage",
		"gameskill::accuracy_buildup_over_time_init",
		"gameskill::accuracy_buildup_before_fire",
		"colors::debugdvars",
		"colors::get_team_substr",
		"colors::try_to_draw_line_to_node",
		"colors::_get_debug_color",
		"colors::debug_colornodes",
		"colors::draw_colornodes",
		"colors::debugcolorfriendlies",
		"colors::debugcolorfriendliestogglewatch",
		"colors::get_script_palette",
		"colors::draw_color_friendlies",
		"colors::player_init_color_grouping",
		"colors::convert_color_to_short_string",
		"colors::goto_current_colorindex",
		"colors::get_color_list",
		"colors::get_colorcodes_from_trigger",
		"colors::trigger_issues_orders",
		"colors::trigger_auto_disable",
		"colors::hero_catch_up_teleport",
		"colors::same_color_code_as_last_time",
		"colors::process_cover_node_with_last_in_mind_allies",
		"colors::process_cover_node_with_last_in_mind_axis",
		"colors::process_cover_node",
		"colors::process_path_node",
		"colors::prioritize_colorcoded_nodes",
		"colors::get_prioritized_colorcoded_nodes",
		"colors::issue_leave_node_order_to_ai_and_get_ai",
		"colors::issue_color_order_to_ai",
		"colors::take_color_node",
		"colors::player_color_node",
		"colors::color_node_finds_a_user",
		"colors::color_node_finds_user_from_colorcodes",
		"colors::color_node_finds_user_for_colorcode",
		"colors::occupies_colorcode",
		"colors::ai_sets_goal_with_delay",
		"colors::ai_sets_goal",
		"colors::set_goal_and_volume",
		"colors::color_force_goal",
		"colors::careful_logic",
		"colors::recover_from_careful_disable",
		"colors::use_big_goal_until_goal_is_safe",
		"colors::wait_until_an_enemy_is_in_safe_area",
		"colors::my_current_node_delays",
		"colors::process_color_order_to_ai",
		"colors::get_best_available_colored_node",
		"colors::get_best_available_new_colored_node",
		"colors::process_stop_short_of_node",
		"colors::wait_for_killanimscript_or_time",
		"colors::reached_node_but_could_not_claim_it",
		"colors::decrementcolorusers",
		"colors::colorislegit",
		"colors::add_volume_to_global_arrays",
		"colors::add_node_to_global_arrays",
		"colors::left_color_node",
		"colors::getcolornumberarray",
		"colors::removespawnerfromcolornumberarray",
		"colors::add_cover_node",
		"colors::add_path_node",
		"colors::colornode_spawn_reinforcement",
		"colors::colornode_replace_on_death",
		"colors::get_color_from_order",
		"colors::friendly_spawner_vision_checker",
		"colors::get_color_spawner",
		"colors::getclasscolorhash",
		"colors::lock_spawner_for_awhile",
		"colors::player_sees_spawner",
		"colors::kill_color_replacements",
		"colors::remove_replace_on_death",
		"colors::set_force_color",
		"colors::remove_colorforced_ai_when_dead",
		"colors::shortencolor",
		"colors::set_force_color_spawner",
		"colors::new_color_being_set",
		"colors::update_debug_friendlycolor_on_death",
		"colors::update_debug_friendlycolor",
		"colors::has_color",
		"colors::get_force_color",
		"colors::get_force_color_guys",
		"colors::get_all_force_color_friendlies",
		"colors::disable",
		"colors::enable",
		"colors::is_color_ai",
		"colors::insure_player_does_not_set_forcecolor_twice_in_one_frame",
		"scoreevents::processscoreevent",
		"scoreevents::shouldaddrankxp",
		"scoreevents::uninterruptedobitfeedkills",
		"scoreevents::isregisteredevent",
		"scoreevents::decrementlastobituaryplayercountafterfade",
		"scoreevents::getscoreeventtablename",
		"scoreevents::getscoreeventtableid",
		"scoreevents::getscoreeventcolumn",
		"scoreevents::getxpeventcolumn",
		"scoreevents::getcolumnoffsetforgametype",
		"scoreevents::killstreakweaponsallowedscore",
		"scoreevents::is_hero_score_event_restricted",
		"scoreevents::givecratecapturemedal",
		"scoreevents::register_hero_ability_kill_event",
		"scoreevents::register_hero_ability_multikill_event",
		"scoreevents::register_hero_weapon_multikill_event",
		"scoreevents::register_thief_shutdown_enemy_event",
		"scoreevents::hero_ability_kill_event",
		"scoreevents::hero_ability_multikill_event",
		"scoreevents::hero_weapon_multikill_event",
		"scoreevents::thief_shutdown_enemy_event",
		"sound::loop_on_tag",
		"sound::play_on_tag",
		"sound::play_on_entity",
		"sound::wait_for_sounddone_or_death",
		"sound::stop_loop_on_entity",
		"sound::loop_on_entity",
		"sound::loop_in_space",
		"sound::delete_on_death_wait",
		"sound::play_on_players",
		"rat_shared::init",
		"rat_shared::addratscriptcmd",
		"rat_shared::rscteleport",
		"rat_shared::rscteleportenemies",
		"rat_shared::rscsimulatescripterror",
		"rat_shared::rscrecteleport",
		"lui::play_animation",
		"lui::set_value_for_player",
		"lui::set_global",
		"lui::timer",
		"lui::prime_movie",
		"rank::init",
		"rank::initscoreinfo",
		"rank::getrankxpcapped",
		"rank::getcodpointscapped",
		"rank::registerscoreinfo",
		"rank::getscoreinfovalue",
		"rank::getscoreinfoxp",
		"rank::shouldskipmomentumdisplay",
		"rank::getscoreinfolabel",
		"rank::getcombatefficiencyevent",
		"rank::doesscoreinfocounttowardrampage",
		"rank::getrankinfominxp",
		"rank::getrankinfoxpamt",
		"rank::getrankinfomaxxp",
		"rank::getrankinfofull",
		"rank::getrankinfoicon",
		"rank::getrankinfolevel",
		"rank::getrankinfocodpointsearned",
		"rank::shouldkickbyrank",
		"rank::getcodpointsstat",
		"rank::setcodpointsstat",
		"rank::getrankxpstat",
		"rank::getarenapointsstat",
		"rank::on_player_connect",
		"rank::on_joined_team",
		"rank::on_joined_spectators",
		"rank::on_player_spawned",
		"rank::inccodpoints",
		"rank::atleastoneplayeroneachteam",
		"rank::giverankxp",
		"rank::round_this_number",
		"rank::updaterank",
		"rank::getitemindex",
		"rank::endgameupdate",
		"rank::updaterankscorehud",
		"rank::updatemomentumhud",
		"rank::removerankhud",
		"rank::getrank",
		"rank::getrankforxp",
		"rank::getspm",
		"rank::getrankxp",
		"rank::incrankxp",
		"rank::syncxpstat",
		"oob::run_oob_trigger",
		"oob::isoutofbounds",
		"oob::istouchinganyoobtrigger",
		"oob::resetoobtimer",
		"oob::waitforclonetouch",
		"oob::getadjusedplayer",
		"oob::waitforplayertouch",
		"oob::getdistancefromlastvalidplayerloc",
		"oob::updatevisualeffects",
		"oob::killentity",
		"oob::watchforleave",
		"oob::watchfordeath",
		"oob::watchforhostmigration",
		"oob::disableplayeroob",
		"vehicle::setup_script_gatetrigger",
		"vehicle::trigger_process",
		"vehicle::path_detour_get_detourpath",
		"vehicle::path_detour_script_origin",
		"vehicle::crash_detour_check",
		"vehicle::crash_derailed_check",
		"vehicle::path_detour",
		"vehicle::levelstuff",
		"vehicle::_spawn_array",
		"vehicle::_remove_non_riders_from_array",
		"vehicle::ai_should_be_added",
		"vehicle::sort_by_startingpos",
		"vehicle::rider_walk_setup",
		"vehicle::setup_groundnode_detour",
		"vehicle::add_proccess_trigger",
		"vehicle::islastnode",
		"vehicle::paths",
		"vehicle::pause_path",
		"vehicle::resume_path",
		"vehicle::get_on_path",
		"vehicle::get_off_path",
		"vehicle::create_from_spawngroup_and_go_path",
		"vehicle::get_on_and_go_path",
		"vehicle::go_path",
		"vehicle::path_gate_open",
		"vehicle::path_gate_wait_till_open",
		"vehicle::_spawn_group",
		"vehicle::_scripted_spawn",
		"vehicle::_scripted_spawn_go",
		"vehicle::set_variables",
		"vehicle::_vehicle_spawn",
		"vehicle::init",
		"vehicle::detach_getoutrigs",
		"vehicle::enable_turrets",
		"vehicle::enable_auto_disconnect_path",
		"vehicle::_disconnect_paths_when_stopped",
		"vehicle::set_speed",
		"vehicle::debug_set_speed",
		"vehicle::script_resume_speed",
		"vehicle::debug_resume",
		"vehicle::print_resume_speed",
		"vehicle::god_on",
		"vehicle::god_off",
		"vehicle::get_normal_anim_time",
		"vehicle::setup_dynamic_detour",
		"vehicle::array_2d_add",
		"vehicle::is_node_script_origin",
		"vehicle::node_trigger_process",
		"vehicle::setup_triggers",
		"vehicle::setup_nodes",
		"vehicle::is_node_script_struct",
		"vehicle::setup_spawners",
		"vehicle::_vehicle_life",
		"vehicle::_vehicle_load_assets",
		"vehicle::is_cheap",
		"vehicle::has_helicopter_dust_kickup",
		"vehicle::play_looped_fx_on_tag",
		"vehicle::_play_looped_fx_on_tag_origin_update",
		"vehicle::setup_dvars",
		"vehicle::setup_level_vars",
		"vehicle::attacker_is_on_my_team",
		"vehicle::attacker_troop_is_on_my_team",
		"vehicle::bullet_shielded",
		"vehicle::friendly_fire_shield",
		"vehicle::friendly_fire_shield_callback",
		"vehicle::_vehicle_bad_place",
		"vehicle::get_vehiclenode_any_dynamic",
		"vehicle::resume_path_vehicle",
		"vehicle::land",
		"vehicle::set_goal_pos",
		"vehicle::liftoff",
		"vehicle::wait_till_stable",
		"vehicle::unload_node",
		"vehicle::is_unload_node",
		"vehicle::unload_node_helicopter",
		"vehicle::detach_path",
		"vehicle::setup_targetname_spawners",
		"vehicle::simple_spawn",
		"vehicle::simple_spawn_single",
		"vehicle::simple_spawn_single_and_drive",
		"vehicle::simple_spawn_and_drive",
		"vehicle::spawn",
		"vehicle::aircraft_dust_kickup",
		"vehicle::impact_fx",
		"vehicle::maingun_fx",
		"vehicle::toggle_lights_group",
		"vehicle::toggle_ambient_anim_group",
		"vehicle::do_death_fx",
		"vehicle::toggle_emp_fx",
		"vehicle::toggle_burn_fx",
		"vehicle::do_death_dynents",
		"vehicle::do_gib_dynents",
		"vehicle::set_alert_fx_level",
		"vehicle::should_update_damage_fx_level",
		"vehicle::update_damage_fx_level",
		"vehicle::set_damage_fx_level",
		"vehicle::build_drive",
		"vehicle::get_from_spawnstruct",
		"vehicle::get_from_entity",
		"vehicle::get_from_spawnstruct_target",
		"vehicle::get_from_entity_target",
		"vehicle::is_destructible",
		"vehicle::attack_group_think",
		"vehicle::get_nearest_target",
		"vehicle::debug_vehicle",
		"vehicle::debug_vehicle_paths",
		"vehicle::get_dummy",
		"vehicle::add_main_callback",
		"vehicle::vehicle_get_occupant_team",
		"vehicle::toggle_exhaust_fx",
		"vehicle::toggle_tread_fx",
		"vehicle::toggle_sounds",
		"vehicle::is_corpse",
		"vehicle::is_on",
		"vehicle::add_spawn_function",
		"vehicle::add_spawn_function_by_type",
		"vehicle::disconnect_paths",
		"vehicle::connect_paths",
		"vehicle::init_target_group",
		"vehicle::add_to_target_group",
		"vehicle::remove_from_target_group",
		"vehicle::monitor_missiles_locked_on_to_me",
		"vehicle::stop_monitor_missiles_locked_on_to_me",
		"vehicle::get_closest_attacker_with_missile_locked_on_to_me",
		"vehicle::set_vehicle_drivable_time_starting_now",
		"vehicle::set_vehicle_drivable_time",
		"vehicle::update_damage_as_occupant",
		"vehicle::stop_monitor_damage_as_occupant",
		"vehicle::monitor_damage_as_occupant",
		"vehicle::kill_vehicle",
		"vehicle::player_is_driver",
		"vehicle::vehicle_spawner_tool",
		"vehicle::spline_debug",
		"vehicle::_spline_debug",
		"vehicle::show_node_debug_info",
		"vehicle::print_debug_info",
		"hostmigration::waittillhostmigrationcountdown",
		"hostmigration::waitlongdurationwithhostmigrationpauseemp",
		"hostmigration::migrationawarewait",
		"burnplayer::setplayerburning",
		"burnplayer::takingburndamage",
		"burnplayer::watchburnfinished",
		"burnplayer::watchburntimer",
		"burnplayer::watchburndamage",
		"burnplayer::watchforwater",
		"demo::initactorbookmarkparams",
		"demo::bookmark",
		"demo::gameresultbookmark",
		"demo::reset_actor_bookmark_kill_times",
		"demo::add_actor_bookmark_kill_time",
		"demo::watch_actor_bookmarks",
		"statemachine::create",
		"statemachine::clear",
		"statemachine::add_state",
		"statemachine::get_state",
		"statemachine::add_interrupt_connection",
		"statemachine::add_utility_connection",
		"statemachine::set_state",
		"statemachine::threadnotifyconnections",
		"statemachine::connection_on_notify",
		"statemachine::evaluate_connections",
		"statemachine::debugon",
		"zombie_shared::deleteatlimit",
		"zombie_shared::lookatentity",
		"zombie_shared::lookatposition",
		"zombie_shared::lookatanimations",
		"zombie_shared::handledogsoundnotetracks",
		"zombie_shared::growling",
		"zombie_shared::registernotetracks",
		"zombie_shared::notetrackstopanim",
		"zombie_shared::notetrackstartragdoll",
		"zombie_shared::notetrackmovementstop",
		"zombie_shared::notetrackmovementwalk",
		"zombie_shared::notetrackmovementrun",
		"zombie_shared::notetrackalertnesscasual",
		"zombie_shared::notetrackalertnessalert",
		"zombie_shared::notetrackposestand",
		"zombie_shared::notetrackposecrouch",
		"zombie_shared::notetrackgravity",
		"zombie_shared::notetrackbodyfall",
		"zombie_shared::notetrackfootstep",
		"zombie_shared::notetrackfootscrape",
		"zombie_shared::notetrackland",
		"zombie_shared::handlenotetrack",
		"zombie_shared::donotetracks",
		"zombie_shared::donotetracksforeverproc",
		"zombie_shared::donotetracksforever",
		"zombie_shared::donotetracksfortimeproc",
		"zombie_shared::donotetracksfortime",
		"zombie_shared::donotetracksfortimeendnotify",
		"zombie_shared::playfootstep",
		"zombie_shared::playfootstepeffect",
		"zombie_shared::movetooriginovertime",
		"zombie_shared::returntrue",
		"zombie_shared::trackloop",
		"zombie_shared::setanimaimweight",
		"zombie_shared::incranimaimweight",
		"zombiedogbehavior::bb_getshouldrunstatus",
		"zombiedogbehavior::bb_getshouldhowlstatus",
		"zombiedogbehavior::get_last_valid_position",
		"zombiedogbehavior::get_locomotion_target",
		"zombiedogbehavior::zombiedogtargetservice",
		"zombiedogbehavior::zombiedogshouldmelee",
		"zombiedogbehavior::zombiedogshouldwalk",
		"zombiedogbehavior::zombiedogshouldrun",
		"zombiedogbehavior::use_low_attack",
		"zombiedogbehavior::zombiedogmeleeaction",
		"zombiedogbehavior::zombiedogmeleeactionterminate",
		"zombiedogbehavior::zombiedoggravity",
		"thrasherserverutils::thrasherknockdownzombie",
		"thrasherserverutils::thrashersporedamagecallback",
		"thrasherserverutils::thrasherconsumeplayerutil",
		"thrasherserverutils::thrasherkillthrasheronautorevive",
		"thrasherserverutils::thrasherreleaseplayer",
		"thrasherserverutils::check_revive_after_consumed",
		"thrasherserverutils::thrasherplayerdeath",
		"thrasherserverutils::thrashermovemodeattributecallback",
		"skeletonbehavior::bb_getarmsposition",
		"skeletonbehavior::bb_getlocomotionspeedtype",
		"skeletonbehavior::bb_gethaslegsstatus",
		"skeletonbehavior::isskeletonwalking",
		"skeletonbehavior::skeletongiblegscondition",
		"skeletonbehavior::skeletonnotetrackmeleefire",
		"skeletonbehavior::is_within_fov",
		"skeletonbehavior::skeletoncanseeplayer",
		"skeletonbehavior::is_player_valid",
		"skeletonbehavior::get_closest_valid_player",
		"skeletonbehavior::skeletonsetgoal",
		"skeletonbehavior::skeletontargetservice",
		"skeletonbehavior::isvalidenemy",
		"skeletonbehavior::getyaw",
		"skeletonbehavior::getyawtoenemy",
		"skeletonbehavior::skeletonshouldmeleecondition",
		"skeletonbehavior::skeletondeathaction",
		"skeletonbehavior::getclosestto",
		"skeletonbehavior::getclosesttome",
		"apothiconfurybehavior::apothicondeathdissolve",
		"apothiconfurybehavior::mocompapothiconfuryjukeinit",
		"apothiconfurybehavior::mocompapothiconfuryjukeupdate",
		"apothiconfurybehavior::mocompapothiconfurybamfinit",
		"apothiconfurybehavior::mocompapothiconfurybamfupdate",
		"apothiconfurybehavior::mocompapothiconfurybamfterminate",
		"apothiconfurybehavior::apothiconcanmeleeattack",
		"apothiconfurybehavior::apothiconshouldmeleecondition",
		"apothiconfurybehavior::apothiconcanbamfafterjuke",
		"apothiconfurybehavior::apothiconcanbamf",
		"apothiconfurybehavior::apothiconcanbamfinternal",
		"apothiconfurybehavior::getbamfmeleedistance",
		"apothiconfurybehavior::apothiconbamfinit",
		"apothiconfurybehavior::apothiconpreemptivejukeservice",
		"apothiconfurybehavior::apothiconpreemptivejukepending",
		"apothiconfurybehavior::apothiconpreemptivejukedone",
		"apothiconfurybehavior::apothiconcanjuke",
		"apothiconfurybehavior::apothiconjukeinit",
		"apothiconfurybehavior::validatejuke",
		"apothiconfurybehavior::apothiconbamfout",
		"apothiconfurybehavior::apothiconbamfin",
		"apothiconfurybehavior::apothicondeathstart",
		"apothiconfurybehavior::apothicondeathterminate",
		"apothiconfurybehavior::apothicondamageclientfieldupdate",
		"apothiconfurybehavior::apothicondamagecallback",
		"apothiconfurybehavior::apothiconondeath",
		"apothiconfurybehaviorinterface::movespeedattributecallback",
		"zombiedoginterface::registerzombiedoginterfaceattributes",
		"cloneserverutils::cloneplayerlook",
		"archetype_damage_effects::onactordamagecallback",
		"archetype_damage_effects::onvehicledamagecallback",
		"archetype_damage_effects::onactorkilledcallback",
		"archetype_damage_effects::onvehiclekilledcallback",
		"archetype_damage_effects::onactordamage",
		"archetype_damage_effects::onvehicledamage",
		"archetype_damage_effects::onactorkilled",
		"archetype_damage_effects::onhumankilled",
		"archetype_damage_effects::onrobotkilled",
		"archetype_damage_effects::onvehiclekilled",
		"archetype_human_cover::shouldthrowgrenadeatcovercondition",
		"zombiebehavior::archetypezombieblackboardinit",
		"zombiebehavior::bb_getarmsposition",
		"zombiebehavior::bb_getlocomotionspeedtype",
		"zombiebehavior::zombiegiblegscondition",
		"zombiebehavior::zombienotetrackmeleefire",
		"zombiebehavior::zombienotetrackcrushfire",
		"zombiebehavior::zombietargetservice",
		"zombiebehavior::zombieupdatezigzaggoal",
		"zombiebehavior::zombiecrawlercollision",
		"zombiebehavior::zombietraversalservice",
		"zombiebehavior::zombieisatattackobject",
		"zombiebehavior::zombieshouldattackobject",
		"zombiebehavior::zombieshouldmeleecondition",
		"zombiebehavior::zombieshouldjumpmeleecondition",
		"zombiebehavior::zombieshouldjumpunderwatermelee",
		"zombiebehavior::zombiestumble",
		"zombiebehavior::zombiejuke",
		"zombiebehavior::zombiedeathaction",
		"zombiebehavior::waskilledbyinterdimensionalguncondition",
		"zombiebehavior::wascrushedbyinterdimensionalgunblackholecondition",
		"zombiebehavior::zombieidgundeathmocompstart",
		"zombiebehavior::zombiemeleejumpmocompstart",
		"zombiebehavior::zombiemeleejumpmocompupdate",
		"zombiebehavior::zombiemeleejumpmocompterminate",
		"zombiebehavior::zombieidgundeathupdate",
		"zombiebehavior::zombieidgunholedeathmocompstart",
		"zombiebehavior::zombieidgunholedeathmocompterminate",
		"zombiebehavior::zombiehaslegs",
		"zombiebehavior::zombieshouldproceduraltraverse",
		"zombiebehavior::zombieshouldmeleesuicide",
		"zombiebehavior::zombiemeleesuicidestart",
		"zombiebehavior::zombiemeleesuicideupdate",
		"zombiebehavior::zombiemeleesuicideterminate",
		"zombiebehavior::zombiemoveaction",
		"razbehavior::findnodesservice",
		"razbehavior::shouldskipteardown",
		"AiUtility::isAtCrouchNode",
		"AiUtility::isAtCoverCondition",
		"AiUtility::isAtCoverStrictCondition",
		"AiUtility::isAtCoverModeOver",
		"AiUtility::isAtCoverModeNone",
		"AiUtility::isExposedAtCoverCondition",
		"AiUtility::shouldCoverIdleOnly",
		"AiUtility::isSuppressedAtCoverCondition",
		"AiUtility::keepClaimedNodeAndChooseCoverDirection",
		"AiUtility::resetCoverParameters",
		"AiUtility::chooseCoverDirection",
		"AiUtility::calculateCoverDirection",
		"AiUtility::clearCoverShootStartTime",
		"AiUtility::setCoverShootStartTime",
		"AiUtility::canBeFlanked",
		"AiUtility::setCanBeFlanked",
		"AiUtility::cleanupCoverMode",
		"warlordbehavior::choosebetterpositionservice",
		"warlordbehavior::canjukecondition",
		"warlordbehavior::cantacticaljukecondition",
		"warlordbehavior::warlordshouldnormalmelee",
		"warlordbehavior::cantakepaincondition",
		"warlordbehavior::jukeaction",
		"warlordbehavior::jukeactionterminate",
		"warlordbehavior::deathaction",
		"warlordbehavior::exposedpainactionstart",
		"warlordbehavior::shouldbeangrycondition",
		"warlordbehavior::warlordangryattack",
		"warlordbehavior::warlordangryattack_shootthemall",
		"warlordserverutils::getaliveplayerscount",
		"warlordserverutils::setwarlordaggressivemode",
		"warlordserverutils::addpreferedpoint",
		"warlordserverutils::deletepreferedpoint",
		"warlordserverutils::getscaledforplayers",
		"warlordserverutils::warlordcanjuke",
		"warlordserverutils::warlordcantacticaljuke",
		"warlordserverutils::isenemytoolowtoattack",
		"warlordserverutils::havetoolowtoattackenemy",
		"warlordserverutils::setenemytoolowtoattack",
		"warlordserverutils::computeattackerthreat",
		"warlordserverutils::shouldswitchtonewthreat",
		"warlordserverutils::updateattackerslist",
		"warlordserverutils::checkifweshouldmove",
		"warlordserverutils::warlorddangerousenemyattack",
		"warlordserverutils::warlorddamageoverride",
		"warlordserverutils::warlordspawnsetup",
		"warlordserverutils::warlord_projectile_watcher",
		"warlordserverutils::remove_repulsor",
		"warlordserverutils::repulsor_fx",
		"warlordserverutils::trigger_player_shock_fx",
		"warlorddebughelpers::printstate",
		"warlorddebughelpers::trystate",
		"warlorddebughelpers::setcurrentstate",
		"warlorddebughelpers::setstatefailed",
		"warlorddebughelpers::isnewstate",
		"zombie_vortex::start_timed_vortex",
		"zombie_vortex::player_vortex_visionset",
		"zombie_vortex::idgun_add_vehicle_death_state",
		"zombie_vortex::state_idgun_crush_enter",
		"zombie_vortex::flyentdelete",
		"zombie_vortex::state_idgun_crush_update",
		"zombie_vortex::state_idgun_flying_crush_enter",
		"zombie_vortex::state_idgun_flying_crush_update",
		"zombie_vortex::switch_to_crush_asm",
		"zombie_vortex::state_idgun_flying_death_update",
		"robotsoldierbehavior::registerbehaviorscriptfunctions",
		"robotsoldierbehavior::robotproceduraltraversalupdate",
		"robotsoldierbehavior::robotprocedurallandingupdate",
		"robotsoldierbehavior::robotcalcproceduraltraversal",
		"robotsoldierbehavior::robotcanjuke",
		"robotsoldierbehavior::robotcantacticaljuke",
		"robotsoldierbehavior::robotcanpreemptivejuke",
		"robotsoldierserverutils::robotequipminiraps",
		"robotsoldierserverutils::robotlights",
		"robotsoldierserverutils::randomgibroguerobot",
		"robotsoldierserverutils::roguecontrolattributecallback",
		"robotsoldierserverutils::robotmovemodeattributecallback",
		"robotsoldierserverutils::robotforcecrawler",
		"robotsoldierserverutils::roguecontrolforcegoalattributecallback",
		"robotsoldierserverutils::roguecontrolspeedattributecallback",
		"robotsoldierserverutils::robottraversalattributecallback",
		"robotphalanx::haltfire",
		"robotphalanx::haltadvance",
		"robotphalanx::initialize",
		"humanrpginterface::registerhumanrpginterfaceattributes",
		"phalanx::haltfire",
		"phalanx::haltadvance",
		"phalanx::initialize",
		"margwabehavior::margwareactstunterminate",
		"margwaserverutils::margwadamage",
		"margwaserverutils::shouldupdatejaw",
		"margwaserverutils::margwasetgoal",
		"mechzbehavior::mechzshootflameactionstart",
		"mechzserverutils::mechzdamagecallback",
		"mechzserverutils::mechz_play_pain_audio",
		"mechzserverutils::show_hit_marker",
		"mechzserverutils::hide_part",
		"mechzserverutils::mechz_track_faceplate_damage",
		"mechzserverutils::mechz_track_powercap_cover_damage",
		"mechzserverutils::mechz_track_powercap_damage",
		"mechzserverutils::mechz_track_rknee_armor_damage",
		"mechzserverutils::mechz_track_lknee_armor_damage",
		"mechzserverutils::mechz_track_rshoulder_armor_damage",
		"mechzserverutils::mechz_turn_off_headlamp",
		"humaninterface::registerhumaninterfaceattributes",
		"apothiconfuryinterface::registerapothiconfuryinterfaceattributes",
		"zombie_death::set_last_gib_time",
		"zombie_death::get_gib_ref",
		"zombie_death::get_random",
		"zombie_death::do_gib",
		"zombie_death::precache_gib_fx",
		"destructserverutils::copydestructstate",
		"destructserverutils::destructhitlocpieces",
		"destructserverutils::destructleftarmpieces",
		"destructserverutils::destructleftlegpieces",
		"destructserverutils::destructpiece",
		"destructserverutils::destructnumberrandompieces",
		"destructserverutils::destructrandompieces",
		"destructserverutils::destructrightarmpieces",
		"destructserverutils::destructrightlegpieces",
		"destructserverutils::getpiececount",
		"destructserverutils::handledamage",
		"destructserverutils::isdestructed",
		"destructserverutils::reapplydestructedpieces",
		"destructserverutils::showdestructedpieces",
		"destructserverutils::togglespawngibs",
		"Blackboard::RegisterBlackboardAttribute",
		"Blackboard::GetBlackboardAttribute",
		"Blackboard::SetBlackboardAttribute",
		"Blackboard::CreateBlackboardForEntity",
		"animationstatenetwork::RegisterNotetrackHandlerFunction",
		"animationstatenetwork::RegisterBlackboardNotetrackHandler",
		"behaviorstatemachine::RegisterBSMScriptAPIInternal",
		"ai::CreateInterfaceForEntity",
		"ai::GetAiAttribute",
		"ai::HasAiAttribute",
		"ai::RegisterMatchedInterface",
		"ai::RegisterNumericInterface",
		"ai::RegisterVectorInterface",
		"ai::SetAiAttribute",
		"Blackboard::addblackboardevent",
		"Blackboard::getblackboardevents",
		"Blackboard::removeblackboardevents",
		"scripted::main",
		"scripted::init",
		"scripted::end_script",
		"animationselectortable::RegisterAnimationSelectorTableEvaluator",
		"animationstatenetwork::RunAnimationMocomp",
		"animationstatenetwork::RegisterAnimationMocomp",
		"animationstatenetwork::AnimationMocompEmptyFunc",
		"behave::main",
		"behave::end_script",
		"animationstatenetworkutility::RequestState",
		"animationstatenetworkutility::SearchAnimationMap",
		"face::SayGenericDialogue",
		"face::SayGenericDialogueWithImportance",
		"face::SetIdleFaceDelayed",
		"face::SetIdleFace",
		"face::SaySpecificDialogue",
		"face::PlayIdleFace",
		"face::PlayFaceThread",
		"behaviortreenetwork::RegisterBehaviorTreeScriptAPIInternal",
		"behaviortreenetwork::RegisterBehaviorTreeActionInternal",
		"behaviortreenetworkutility::RegisterBehaviorTreeScriptAPI",
		"behaviortreenetworkutility::RegisterBehaviorTreeAction",
		"as_debug::debugDvars",
		"as_debug::isDebugOn",
		"as_debug::drawDebugLineInternal",
		"as_debug::drawDebugLine",
		"as_debug::debugLine",
		"as_debug::drawDebugCross",
		"as_debug::updateDebugInfo",
		"as_debug::updateDebugInfoInternal",
		"as_debug::drawDebugEntText",
		"as_debug::debugPushState",
		"as_debug::debugAddStateInfo",
		"as_debug::debugPopState",
		"as_debug::debugClearState",
		"as_debug::debugShouldClearState",
		"as_debug::debugCleanStateStack",
		"as_debug::indent",
		"as_debug::debugDrawWeightedPoints",
		"as_debug::debugDrawWeightedPoint",
		"as_debug::delete_all_ai_corpses",
		"shared::StowWeapon",
		"shared::PlaceWeaponOn",
		"shared::DetachWeapon",
		"shared::UpdateScriptWeaponInfoAndPos",
		"shared::DetachAllWeaponModels",
		"shared::UpdateAttachedWeaponModels",
		"shared::GetTagForPos",
		"shared::ThrowWeapon",
		"shared::DropAIWeapon",
		"shared::DropAllAIWeapons",
		"shared::player_weapon_drop",
		"shared::HandleNotetrack",
		"shared::DoNotetracks",
		"shared::DoNotetracksIntercept",
		"shared::DoNotetracksPostCallback",
		"shared::DoNotetracksForever",
		"shared::DoNotetracksForeverIntercept",
		"shared::DoNotetracksForeverProc",
		"shared::DoNotetracksForTime",
		"shared::DoNotetracksForTimeIntercept",
		"shared::DoNotetracksForTimeProc",
		"shared::DoNotetracksForTimeEndNotify",
		"aisquads::isFollowingSquadLeader",
		"init::initWeapon",
		"init::main",
		"init::setNameAndRank",
		"init::doNothing",
		"init::set_anim_playback_rate",
		"init::trackVelocity",
		"init::checkApproachAngles",
		"init::getExitSplitTime",
		"init::getTransSplitTime",
		"init::firstInit",
		"init::onPlayerConnect",
		"init::setNextPlayerGrenadeTime",
		"init::addToMissiles",
		"init::globalGrenadeTracking",
		"init::globalGrenadeLauncherTracking",
		"init::globalMissileTracking",
		"init::beginGrenadeTracking",
		"init::endOnDeath",
		"init::grenade_earthquake",
		"init::end_script",
		"GibServerUtils::Annihilate",
		"GibServerUtils::CopyGibState",
		"GibServerUtils::IsGibbed",
		"GibServerUtils::GibHat",
		"GibServerUtils::GibHead",
		"GibServerUtils::GibLeftArm",
		"GibServerUtils::GibRightArm",
		"GibServerUtils::GibLeftLeg",
		"GibServerUtils::GibRightleg",
		"GibServerUtils::GibLegs",
		"GibServerUtils::PlayerGibLeftArm",
		"GibServerUtils::PlayerGibRightArm",
		"GibServerUtils::PlayerGibLeftLeg",
		"GibServerUtils::PlayerGgibRightLeg",
		"GibServerUtils::PlayerGibLegs",
		"GibServerUtils::PlayerGibLeftArmvVel",
		"GibServerUtils::PlayerGibRightarmvel",
		"GibServerUtils::PlayerGibLeftLegVel",
		"GibServerUtils::PlayerGibRightLegVel",
		"GibServerUtils::PlayerGibLegsVel",
		"GibServerUtils::ReapplyHiddenGibPieces",
		"GibServerUtils::ShowHiddenGibPieces",
		"GibServerUtils::ToggleSpawnGibs",
		"AiUtility::RegisterUtilityBlackboardAttributes",
		"AiUtility::BB_GetHighestStance",
		"AiUtility::BB_GetLocomotionFaceEnemyQuadrantPrevious",
		"AiUtility::BB_GetCurrentCoverNodeType",
		"AiUtility::BB_GetCoverConcealed",
		"AiUtility::BB_GetCurrentLocationCoverNodeType",
		"AiUtility::BB_GetDamageDirection",
		"AiUtility::BB_ActorGetDamageLocation",
		"AiUtility::BB_GetDamageWeaponClass",
		"AiUtility::BB_GetDamageWeapon",
		"AiUtility::BB_GetDamageMod",
		"AiUtility::BB_GetDamageTaken",
		"AiUtility::AddAIOverrideDamageCallback",
		"AiUtility::RemoveAIOverrideDamageCallback",
		"AiUtility::ClearAIOverrideDamageCallbacks",
		"AiUtility::AddAIOverrideKilledCallback",
		"AiUtility::CctorGetPredictedYawToEnemy",
		"AiUtility::BB_ActorIsPatroling",
		"AiUtility::BB_ActorHasEnemy",
		"AiUtility::BB_ActorGetEnemyYaw",
		"AiUtility::BB_ActorGetPerfectEnemyYaw",
		"AiUtility::BB_ActorGetReactYaw",
		"AiUtility::BB_ActorGetFatalDamageLocation",
		"AiUtility::GetAngleUsingDirection",
		"AiUtility::WasAtCoverNode",
		"AiUtility::BB_GetLocomotionExitYaw",
		"AiUtility::BB_GetLocomotionFaceEnemyQuadrant",
		"AiUtility::BB_GetLocomotionPainType",
		"AiUtility::BB_GetLookaheadAngle",
		"AiUtility::BB_GetPreviousCoverNodeType",
		"AiUtility::BB_ActorGetTrackingTurnYaw",
		"AiUtility::isFrustrated",
		"AiUtility::clampFrustration",
		"AiUtility::updateFrustrationLevel",
		"AiUtility::flagEnemyUnattackableService",
		"AiUtility::isLastKnownEnemyPositionApproachable",
		"AiUtility::tryAdvancingOnLastKnownPositionBehavior",
		"AiUtility::tryGoingToClosestNodeToEnemyBehavior",
		"AiUtility::tryRunningDirectlyToenemyBehavior",
		"AiUtility::shouldReactToNewEnemy",
		"AiUtility::hasWeaponMalfunctioned",
		"AiUtility::isSafeFromGrenades",
		"AiUtility::inGrenadeBlastRadius",
		"AiUtility::recentlySawEnemy",
		"AiUtility::shouldOnlyFireAccurately",
		"AiUtility::shouldBeAggressive",
		"AiUtility::useCoverNodeWrapper",
		"AiUtility::setNextFindBestCoverTime",
		"AiUtility::trackCoverParamsService",
		"AiUtility::chooseBestCoverNodeAsap",
		"AiUtility::shouldChooseBetterCover",
		"AiUtility::refillAmmo",
		"AiUtility::hasAmmo",
		"AiUtility::hasLowAmmo",
		"AiUtility::hasEnemy",
		"AiUtility::getBestCoverNodeIfAvailable",
		"AiUtility::getSecondBestCoverNodeIfAvailable",
		"AiUtility::getCoverType",
		"AiUtility::isCoverConcealed",
		"AiUtility::canSeeEnemyWrapper",
		"AiUtility::calculateNodeOffsetPosition",
		"AiUtility::getHighestNodeStance",
		"AiUtility::isStanceAllowedAtNode",
		"AiUtility::tryStoppingService",
		"AiUtility::shouldStopMoving",
		"AiUtility::setCurrentWeapon",
		"AiUtility::setPrimaryWeapon",
		"AiUtility::setSecondaryWeapon",
		"AiUtility::keepClaimNode",
		"AiUtility::ReleaseClaimNode",
		"AiUtility::getAimYawToEnemyFromNode",
		"AiUtility::GetAimPitchToEnemyFromNode",
		"AiUtility::chooseFrontCoverDirection",
		"AiUtility::shouldTacticalWalk",
		"AiUtility::shouldStealth",
		"AiUtility::locomotionShouldStealth",
		"AiUtility::attachRiotshield",
		"AiUtility::dropRiotshield",
		"AiUtility::electrifiedKilled",
		"AiUtility::burnedKilled",
		"AiUtility::rapsKilled",
		"AiUtility::meleeAcquireMutex",
		"AiUtility::meleeReleaseMutex",
		"AiUtility::shouldMutexMelee",
		"AiUtility::shouldNormalMelee",
		"AiUtility::shouldMelee",
		"AiUtility::isBalconyDeath",
		"zombiequad::quadspawnsetup",
		"zombiequad::quadteleporttraversalmocompstart",
		"zombie_utility::zombieSpawnSetup",
		"zombie_utility::get_closest_valid_player",
		"zombie_utility::is_player_valid",
		"zombie_utility::append_missing_legs_suffix",
		"zombie_utility::initAnimTree",
		"zombie_utility::updateAnimPose",
		"zombie_utility::initialize",
		"zombie_utility::getNodeYawToOrigin",
		"zombie_utility::getNodeYawToEnemy",
		"zombie_utility::getCoverNodeYawToEnemy",
		"zombie_utility::getYawToSpot",
		"zombie_utility::getYawToEnemy",
		"zombie_utility::getYaw",
		"zombie_utility::getYaw2d",
		"zombie_utility::absYawToEnemy",
		"zombie_utility::absYawToEnemy2d",
		"zombie_utility::absYawToOrigin",
		"zombie_utility::absYawToAngles",
		"zombie_utility::getYawFromOrigin",
		"zombie_utility::getYawToTag",
		"zombie_utility::getYawToOrigin",
		"zombie_utility::getEyeYawToOrigin",
		"zombie_utility::getCoverNodeYawToOrigin",
		"zombie_utility::isStanceAllowedWrapper",
		"zombie_utility::getClaimedNode",
		"zombie_utility::getNodeType",
		"zombie_utility::getNodeDirection",
		"zombie_utility::getNodeForward",
		"zombie_utility::getNodeOrigin",
		"zombie_utility::safeMod",
		"zombie_utility::angleClamp",
		"zombie_utility::quadrantAnimWeights",
		"zombie_utility::getQuadrant",
		"zombie_utility::isInSet",
		"zombie_utility::notifyAfterTime",
		"zombie_utility::drawStringTime",
		"zombie_utility::showLastEnemySightPos",
		"zombie_utility::debugTimeout",
		"zombie_utility::debugPosInternal",
		"zombie_utility::debugPos",
		"zombie_utility::debugPosSize",
		"zombie_utility::showDebugProc",
		"zombie_utility::showDebugLine",
		"zombie_utility::getNodeOffset",
		"zombie_utility::calculateNodeOffset",
		"zombie_utility::checkPitchVisibility",
		"zombie_utility::showLines",
		"zombie_utility::anim_array",
		"zombie_utility::notForcedCover",
		"zombie_utility::forcedCover",
		"zombie_utility::print3dtime",
		"zombie_utility::print3drise",
		"zombie_utility::crossproduct",
		"zombie_utility::scriptChange",
		"zombie_utility::delayedScriptChange",
		"zombie_utility::sawEnemyMove",
		"zombie_utility::canThrowGrenade",
		"zombie_utility::random_weight",
		"zombie_utility::setFootstepEffect",
		"zombie_utility::persistentDebugLine",
		"zombie_utility::isNodeDontStand",
		"zombie_utility::isNodeDontCrouch",
		"zombie_utility::doesNodeAllowStance",
		"zombie_utility::animArray",
		"zombie_utility::animArrayAnyExist",
		"zombie_utility::animArrayPickRandom",
		"zombie_utility::dumpAnimArray",
		"zombie_utility::getAnimEndPos",
		"zombie_utility::isValidEnemy",
		"zombie_utility::damageLocationIsAny",
		"zombie_utility::ragdollDeath",
		"zombie_utility::isCQBWalking",
		"zombie_utility::squared",
		"zombie_utility::randomizeIdleSet",
		"zombie_utility::getRandomIntFromSeed",
		"zombie_utility::is_banzai",
		"zombie_utility::is_heavy_machine_gun",
		"zombie_utility::is_zombie",
		"zombie_utility::is_civilian",
		"zombie_utility::is_skeleton",
		"zombie_utility::get_skeleton",
		"zombie_utility::set_orient_mode",
		"zombie_utility::debug_anim_print",
		"zombie_utility::debug_turn_print",
		"zombie_utility::debug_allow_combat",
		"zombie_utility::debug_allow_movement",
		"zombie_utility::set_zombie_var",
		"zombie_utility::spawn_zombie",
		"zombie_utility::zombie_spawn_failed",
		"zombie_utility::get_desired_origin",
		"zombie_utility::hide_pop",
		"zombie_utility::handle_rise_notetracks",
		"zombie_utility::finish_rise_notetracks",
		"zombie_utility::zombie_rise_death",
		"zombie_utility::get_rise_death_anim",
		"zombie_utility::reset_attack_spot",
		"zombie_utility::zombie_gut_explosion",
		"zombie_utility::delayed_zombie_eye_glow",
		"zombie_utility::zombie_eye_glow",
		"zombie_utility::zombie_eye_glow_stop",
		"zombie_utility::round_spawn_failsafe_debug_draw",
		"zombie_utility::round_spawn_failsafe",
		"zombie_utility::ai_calculate_health",
		"zombie_utility::default_max_zombie_func",
		"zombie_utility::zombie_speed_up",
		"zombie_utility::get_current_zombie_count",
		"zombie_utility::get_round_enemy_array",
		"zombie_utility::get_zombie_array",
		"zombie_utility::set_zombie_run_cycle_override_value",
		"zombie_utility::set_zombie_run_cycle_restore_from_override",
		"zombie_utility::set_zombie_run_cycle",
		"zombie_utility::set_run_speed",
		"zombie_utility::set_run_speed_easy",
		"zombie_utility::setup_zombie_knockdown",
		"zombie_utility::clear_all_corpses",
		"zombie_utility::get_current_actor_count",
		"zombie_utility::get_current_corpse_count",
		"zombie_utility::zombie_gib_on_damage",
		"zombie_utility::add_zombie_gib_weapon_callback",
		"zombie_utility::have_zombie_weapon_gib_callback",
		"zombie_utility::get_zombie_weapon_gib_callback",
		"zombie_utility::have_zombie_weapon_gib_head_callback",
		"zombie_utility::get_zombie_weapon_gib_head_callback",
		"zombie_utility::zombie_should_gib",
		"zombie_utility::head_should_gib",
		"zombie_utility::zombie_hat_gib",
		"zombie_utility::head_gib_damage_over_time",
		"zombie_utility::derive_damage_refs",
		"zombie_utility::register_ignore_player_handler",
		"load::count_network_frames",
		"load::keep_time",
		"load::add_cleanup_msg",
		"load::t7_cleanup_output",
		"load::level_notify_listener",
		"load::client_notify_listener",
		"load::load_checkpoint_on_notify",
		"load::save_checkpoint_on_notify",
		"load::weapon_ammo",
		"load::badplace_think",
		"load::playerdamagerumble",
		"load::map_is_early_in_the_game",
		"load::player_throwgrenade_timer",
		"load::player_special_death_hint",
		"load::grenade_death_text_hudelement",
		"load::grenade_death_indicator_hudelement",
		"load::explosive_arrow_death_indicator_hudelement",
		"load::explosive_dart_death_indicator_hudelement",
		"load::explosive_nitrogen_tank_death_indicator_hudelement",
		"load::explosive_vehice_death_indicator_hudelement",
		"load::grenade_death_indicator_hudelement_cleanup",
		"load::special_death_indicator_hudelement",
		"load::special_death_death_indicator_hudelement_cleanup",
		"load::water_think",
		"load::indicate_start",
		"load::calculate_map_center",
		"load::set_objective_text_colors",
		"load::lerp_trigger_dvar_value",
		"load::set_fog_progress",
		"load::ascii_logo",
		"load::all_players_spawned",
		"load::shock_onpain",
		"load::shock_onexplosion",
		"load::shock_ondeath",
		"load::on_spawned",
		"load::link_ents",
		"simple_hostmigration::Migration_SetUpGameType",
		"simple_hostmigration::Migration_GetIndexFoPplayer",
		"simple_hostmigration::Migration_SetUpPlayerData",
		"simple_hostmigration::Migration_OnPlayerConnect",
		"simple_hostmigration::Migration_WriteGameData",
		"simple_hostmigration::Migration_WriteTeamData",
		"simple_hostmigration::Migration_WritePlayerData",
		"simple_hostmigration::UpdateHostMigrationData",
		"clientfield::set",
		"clientfield::set_to_player",
		"clientfield::set_player_uimodel",
		"clientfield::increment",
		"clientfield::increment_uimodel",
		"clientfield::increment_to_player",
		"tweakables::getTweakableDvarValue",
		"tweakables::getTweakableDvar",
		"tweakables::getTweakableValue",
		"tweakables::getTweakableLastValue",
		"tweakables::setTweakableValue",
		"tweakables::setTweakableLastValue",
		"tweakables::registerTweakable",
		"tweakables::setClientTweakable",
		"tweakables::updateUITweakables",
		"tweakables::updateServerDvar",
		"spawner::update_nav_triggers",
		"spawner::global_ai_array",
		"spawner::spawn_throttle_reset",
		"spawner::global_spawn_throttle",
		"spawner::callback_track_dead_npcs_by_type",
		"spawner::goal_volume_init",
		"spawner::precache_player_weapon_drops",
		"spawner::process_deathflags",
		"spawner::spawn_guys_until_death_or_no_count",
		"spawner::flood_spawner_scripted",
		"spawner::reincrement_count_if_deleted",
		"spawner::kill_trigger",
		"spawner::waittilldeathorpaindeath",
		"spawner::drop_gear",
		"spawner::spawn_grenade_bag",
		"spawner::spawn_prethink",
		"spawner::update_nav_triggers_for_actor",
		"spawner::spawn_think",
		"spawner::run_spawn_functions",
		"spawner::living_ai_prethink",
		"spawner::crawl_through_targets_to_init_flags",
		"spawner::remove_spawner_values",
		"spawner::spawn_think_action",
		"spawner::set_goal_volume",
		"spawner::get_target_ents",
		"spawner::get_target_nodes",
		"spawner::get_target_structs",
		"spawner::node_has_radius",
		"spawner::go_to_origin",
		"spawner::go_to_struct",
		"spawner::go_to_node",
		"spawner::spawner_targets_init",
		"spawner::go_to_spawner_target",
		"spawner::release_spawner_target_node",
		"spawner::get_spawner_target_nodes",
		"spawner::get_least_used_from_array",
		"spawner::go_to_node_using_funcs",
		"spawner::go_to_node_wait_for_player",
		"spawner::go_to_node_set_goal_pos",
		"spawner::go_to_node_set_goal_node",
		"spawner::remove_crawled",
		"spawner::crawl_target_and_init_flags",
		"spawner::get_node_funcs_based_on_target",
		"spawner::update_target_array",
		"spawner::set_goalradius_based_on_settings",
		"spawner::get_goal",
		"spawner::fallback_spawner_think",
		"spawner::fallback_ai_think_death",
		"spawner::fallback_ai_think",
		"spawner::fallback_death",
		"spawner::fallback_goal",
		"spawner::fallback_interrupt",
		"spawner::fallback_ai",
		"spawner::coverprint",
		"spawner::fallback_overmind",
		"spawner::fallback_text",
		"spawner::fallback_wait",
		"spawner::fallback_think",
		"spawner::fallback_add_previous_group",
		"spawner::aigroup_init",
		"spawner::aigroup_spawner_death",
		"spawner::aigroup_think",
		"spawner::set_ai_group_cleared_flag",
		"spawner::flood_trigger_think",
		"spawner::flood_spawner_init",
		"spawner::trigger_requires_player",
		"spawner::flood_spawner_think",
		"spawner::player_saw_kill",
		"spawner::show_bad_path",
		"spawner::watches_for_friendly_fire",
		"spawner::spawn",
		"spawner::teleport_spawned",
		"spawner::check_player_requirements",
		"spawner::spawn_failed",
		"spawner::kill_spawnernum",
		"spawner::disable_replace_on_death",
		"spawner::replace_on_death",
		"spawner::set_ai_group_cleared_count",
		"spawner::waittill_ai_group_cleared",
		"spawner::waittill_ai_group_count",
		"spawner::waittill_ai_group_ai_count",
		"spawner::waittill_ai_group_spawner_count",
		"spawner::waittill_ai_group_amount_killed",
		"spawner::get_ai_group_count",
		"spawner::get_ai_group_sentient_count",
		"spawner::get_ai_group_spawner_count",
		"spawner::get_ai_group_ai",
		"spawner::add_global_spawn_function",
		"spawner::add_archetype_spawn_function",
		"spawner::remove_global_spawn_function",
		"spawner::add_spawn_function",
		"spawner::remove_spawn_function",
		"spawner::add_spawn_function_group",
		"spawner::add_spawn_function_ai_group",
		"spawner::remove_spawn_function_ai_group",
		"spawner::track_vehicle_deaths",
		"spawner::track_npc_deaths",
		"spawner::show_actor_damage",
		"spawner::show_vehicle_damage",
		"spawner::show_xp_popup_for_enemy",
		"spawner::show_number_popup",
		"spawner::get_xp_value_for_enemy",
		"spawner::adddeadnpctolist",
		"spawner::set_female_percent",
		"hud::setParent",
		"hud::getParent",
		"hud::addChild",
		"hud::removeChild",
		"hud::setPoint",
		"hud::setPointBar",
		"hud::updateBar",
		"hud::updateBarScale",
		"hud::createFontString",
		"hud::createServerFontString",
		"hud::createServerTimer",
		"hud::createClientTimer",
		"hud::createIcon",
		"hud::createServerIcon",
		"hud::createServerBar",
		"hud::createBar",
		"hud::getCurrentFraction",
		"hud::createPrimaryProgressBar",
		"hud::createPrimaryProgressBarText",
		"hud::createSecondaryProgressBar",
		"hud::createSecondaryprogressBarText",
		"hud::createTeamProgressBar",
		"hud::createTeamProgressBarText",
		"hud::setFlashFrac",
		"hud::hideElem",
		"hud::showElem",
		"hud::flashThread",
		"hud::destroyElem",
		"hud::setIconShader",
		"hud::setWidth",
		"hud::setHeight",
		"hud::setSize",
		"hud::updateChildren",
		"hud::createLoadoutIcon",
		"hud::setLoadoutIconCoords",
		"hud::setLoadoutTextCoords",
		"hud::createLoadoutText",
		"hud::showLoadoutAttribute",
		"hud::hideLoadoutAttribute",
		"hud::showPerks",
		"hud::showPerk",
		"hud::hidePerk",
		"hud::showKillstreak",
		"hud::hideKillstreak",
		"hud::setGamemodeInfoPoint",
		"popups::init",
		"popups::on_player_connect",
		"popups::devgui_notif_getgunleveltablename",
		"popups::devgui_notif_getchallengestablecount",
		"popups::devgui_notif_getchallengestablename",
		"popups::set_statstable_id",
		"popups::devgui_create_weapon_levels_table",
		"popups::devgui_notif_init",
		"popups::notif_devgui_rank",
		"popups::notif_devgui_rank_up_think",
		"popups::notif_devgui_gun_rank",
		"popups::notif_devgui_gun_level_think",
		"popups::notif_devgui_challenges",
		"popups::notif_devgui_challenges_think",
		"popups::popupsfromconsole",
		"popups::DisplayKillstreakTeamMessageToAll",
		"popups::DisplayKillstreakHackedTeamMessageToAll",
		"popups::ShouldDisplayTeamMessages",
		"popups::DisplayTeamMessageToAll",
		"popups::DisplayTeamMessageToTeam",
		"popups::DisplayTeamMessageWaiter",
		"popups::DisplayPopupsWaiter",
		"popups::MilestoneNotify",
		"drown::activate_player_health_visionset",
		"drown::deactivate_player_health_visionset",
		"drown::on_player_spawned",
		"drown::watch_player_drowning",
		"drown::watch_player_drown_death",
		"drown::watch_game_ended",
		"drown::is_player_drowning",
		"glaive::should_go_to_owner",
		"glaive::should_go_to_near_owner",
		"glaive::state_combat_enter",
		"glaive::state_combat_update",
		"glaive::check_glaive_playable_area_conditions",
		"glaive::go_back_on_navvolume",
		"glaive::chooseswordanim",
		"glaive::state_slash_update",
		"glaive::glaive_ignore_cooldown",
		"glaive::go_to_near_owner",
		"glaive::go_to_owner",
		"glaive::back_to_owner_check",
		"glaive::back_to_near_owner_check",
		"glaive::glaive_allowfriendlyfiredamage",
		"glaive::glaive_callback_damage",
		"dragon::state_power_up_update",
		"dragon::should_go_for_power_up",
		"dragon::state_combat_update",
		"dragon::attack_thread",
		"dragon::go_back_on_navvolume",
		"dragon::dragon_allowfriendlyfiredamage",
		"dragon::dragon_callback_damage",
		"dragon::state_death_update",
		"sentinel_drone::sentinel_drone_initialize",
		"sentinel_drone::get_sentinel_nearest_zombie",
		"sentinel_drone::state_combat_update",
		"sentinel_drone::sentinel_Intro",
		"sentinel_drone::sentinel_IntroCompleted",
		"sentinel_drone::sentinel_DodgeRoll",
		"sentinel_drone::sentinel_NavigationStandStill",
		"sentinel_drone::sentinel_NavigateTheWorld",
		"sentinel_drone::sentinel_GetNextMovePositionTactical",
		"sentinel_drone::sentinel_ChargeAtPlayerNavigation",
		"sentinel_drone::sentinel_PathUpdateInterrupt",
		"sentinel_drone::sentine_RumbleWhenNearPlayer",
		"sentinel_drone::sentinel_CanSeeEnemy",
		"sentinel_drone::sentinel_FireLogic",
		"sentinel_drone::sentinel_FireBeam",
		"sentinel_drone::sentinel_FireBeamBurst",
		"sentinel_drone::sentinel_FireBeamSuccession",
		"sentinel_drone::sentinel_DamageBeamTouchingEntity",
		"sentinel_drone::sentinel_SelfDestruct",
		"sentinel_drone::sentinel_ChargeAtPlayer",
		"sentinel_drone::IsLeftArm",
		"sentinel_drone::IsRightArm",
		"sentinel_drone::IsTopArm",
		"sentinel_drone::sentinel_CallbackDamage",
		"sentinel_drone::sentinel_drone_CallbackRadiusDamage",
		"sentinel_drone::state_death_update",
		"sentinel_drone::sentinel_DeleteDroneDeathFX",
		"sentinel_drone::sentinel_ForceGoAndStayInPosition",
		"sentinel_drone::sentinel_IsEnemyIndoors",
		"sentinel_drone::sentinel_IsEnemyInNarrowPlace",
		"sentinel_drone::sentinel_SetCompactMode",
		"sentinel_drone::sentinel_HideInitialBrokenParts",
		"sentinel_drone::sentinel_KillMyself",
		"sentinel_drone::sentinel_GetEngagementDistMax",
		"sentinel_drone::sentinel_GetEngagementDistMin",
		"sentinel_drone::sentinel_GetEngagementHeightMax",
		"sentinel_drone::sentinel_GetEngagementHeightMin",
		"sentinel_drone::sentinel_IsInsideEngagementDistance",
		"sentinel_drone::sentinel_Trace",
		"sentinel_drone::sentinel_ElectrifyZombie",
		"sentinel_drone::sentinel_DeactivateAllEffects",
		"sentinel_drone::sentinel_DamagePlayer",
		"sentinel_drone::sentinel_RemoveFromLevelArray",
		"sentinel_drone::sentinel_IsNearAnotherSentinel",
		"sentinel_drone::sentinel_IsNearAnotherPlayer",
		"sentinel_drone::sentinel_DebugDrawSize",
		"sentinel_drone::sentinel_DebugFX",
		"sentinel_drone::sentinel_DebugBehavior",
		"wasp::wasp_initialize",
		"wasp::defaultrole",
		"wasp::state_death_update",
		"wasp::state_emped_update",
		"wasp::fall_and_bounce",
		"wasp::init_guard_points",
		"wasp::guard_points_debug",
		"wasp::get_guard_points",
		"wasp::state_guard_can_enter",
		"wasp::state_guard_enter",
		"wasp::update_main_guard",
		"wasp::state_guard_exit",
		"wasp::test_get_back_point",
		"wasp::test_get_back_queryresult",
		"wasp::state_guard_update",
		"wasp::state_combat_enter",
		"wasp::turretfireupdate",
		"wasp::path_update_interrupt",
		"wasp::wait_till_something_happens",
		"wasp::drop_leader",
		"wasp::update_leader",
		"wasp::should_fly_forward",
		"wasp::state_combat_update",
		"wasp::getnextmoveposition_wander",
		"wasp::getnextmoveposition_tactical",
		"wasp::drone_callback_damage",
		"wasp::drone_allowfriendlyfiredamage",
		"wasp::wasp_driving",
		"wasp::wasp_manage_camera_swaps",
		"parasite::get_parasite_enemy",
		"parasite::set_parasite_enemy",
		"parasite::parasite_initialize",
		"parasite::defaultrole",
		"parasite::getparasitefiringrate",
		"parasite::state_death_update",
		"parasite::state_combat_enter",
		"parasite::state_combat_update",
		"parasite::fire_pod_logic",
		"parasite::getnextmoveposition_tactical",
		"parasite::getnextmoveposition_forwardjuke",
		"parasite::path_update_interrupt",
		"parasite::drone_pain_for_time",
		"parasite::drone_pain",
		"hunter::registerinterfaceattributes",
		"hunter::hunter_inittagarrays",
		"hunter::hunter_spawndrones",
		"hunter::hunter_initialize",
		"hunter::defaultrole",
		"hunter::shut_off_fx",
		"hunter::kill_drones",
		"hunter::state_death_enter",
		"hunter::state_death_update",
		"hunter::state_unaware_enter",
		"hunter::state_unaware_update",
		"hunter::state_unaware_exit",
		"hunter::movement_thread_wander",
		"hunter::enable_turrets",
		"hunter::disable_turrets",
		"hunter::side_turrets_forward",
		"hunter::state_combat_enter",
		"hunter::state_combat_update",
		"hunter::state_combat_exit",
		"hunter::state_strafe_enter",
		"hunter::state_strafe_update",
		"hunter::state_strafe_exit",
		"hunter::getnextmoveposition_tactical",
		"hunter::movement_thread_stayindistance",
		"hunter::delay_target_toenemy_thread",
		"hunter::attack_thread_mainturret",
		"hunter::attack_thread_rocket",
		"hunter::side_turret_get_best_target",
		"hunter::hunter_fire_one_missile",
		"hunter::remote_missile_life",
		"hunter::hunter_lockon_fx",
		"hunter::getenemyarray",
		"hunter::is_point_in_view",
		"hunter::is_valid_target",
		"hunter::get_enemies_in_view",
		"hunter::hunter_scanner_init",
		"hunter::hunter_scanner_settargetentity",
		"hunter::hunter_scanner_clearlooktarget",
		"hunter::hunter_scanner_settargetposition",
		"hunter::hunter_frontscanning",
		"hunter::hunter_exit_vehicle",
		"hunter::hunter_scripted",
		"hunter::player_fire_update_side_turret_1",
		"hunter::player_fire_update_side_turret_2",
		"hunter::player_fire_update_rocket",
		"hunter::hunter_collision_player",
		"hunter::hunter_update_rumble",
		"hunter::hunter_self_destruct",
		"hunter::hunter_level_out_for_landing",
		"hunter::hunter_emped",
		"hunter::hunter_pain_for_time",
		"hunter::hunter_pain_small",
		"hunter::huntercallback_vehicledamage",
		"raps::raps_initialize",
		"raps::defaultrole",
		"raps::state_scripted_update",
		"raps::state_death_update",
		"raps::state_emped_update",
		"raps::state_combat_update",
		"raps::prevent_stuck",
		"raps::check_detonation_dist",
		"raps::jump_detonate",
		"raps::detonate",
		"raps::detonate_damage_monitored",
		"raps::detonation_monitor",
		"raps::raps_audio_cleanup",
		"raps::try_detonate",
		"raps::raps_get_target_position",
		"raps::path_update_interrupt",
		"raps::collision_fx",
		"raps::nudge_collision",
		"raps::raps_allowfriendlyfiredamage",
		"raps::detonate_sides",
		"raps::raps_callback_damage",
		"raps::slow_raps_trigger",
		"raps::slow_raps",
		"raps::force_get_enemies",
		"raps::sndfunctions",
		"raps::drivablerapsinair",
		"raps::raps_in_air_audio",
		"raps::raps_spawn_audio",
		"raps::isdrivableplayervehicle",
		"raps::do_death_fx",
		"counteruav::counteruav_initialize",
		"counteruav::drone_callback_damage",
		"auto_turret::turret_initialze",
		"auto_turret::defaultrole",
		"auto_turret::state_death_update",
		"auto_turret::should_switch_to_unaware",
		"auto_turret::state_unaware_update",
		"auto_turret::should_switch_to_combat",
		"auto_turret::state_combat_update",
		"auto_turret::state_combat_exit",
		"auto_turret::sentry_turret_fire_for_time",
		"auto_turret::state_off_enter",
		"auto_turret::state_off_exit",
		"auto_turret::rest_turret",
		"auto_turret::state_emped_enter",
		"auto_turret::state_emped_update",
		"auto_turret::state_emped_exit",
		"auto_turret::state_scripted_update",
		"auto_turret::turretallowfriendlyfiredamage",
		"auto_turret::turretcallback_vehicledamage",
		"auto_turret::sentry_turret_alert_sound",
		"auto_turret::turret_idle_sound",
		"auto_turret::turret_idle_sound_stop",
		"amws::amws_initialize",
		"amws::defaultrole",
		"amws::state_death_update",
		"amws::death_suicide_crash",
		"amws::state_driving_update",
		"amws::cobra_raise",
		"amws::cobra_retract",
		"amws::state_emped_update",
		"amws::state_surge_update",
		"amws::state_surge_exit",
		"amws::state_stationary_enter",
		"amws::state_stationary_update",
		"amws::state_stationary_update_wait",
		"amws::state_stationary_exit",
		"amws::state_combat_enter",
		"amws::is_ai_using_minigun",
		"amws::turretfireupdate",
		"amws::state_combat_update",
		"amws::aim_and_fire_rocket_launcher",
		"amws::state_combat_update_wait",
		"amws::waittill_weapon_lock_or_timeout",
		"amws::wait_evasion_reaction_time",
		"amws::firerocketlauncher",
		"amws::getnextmoveposition_wander",
		"amws::getnextmoveposition_evasive",
		"amws::getnextmoveposition_tactical",
		"amws::path_update_interrupt_by_attacker",
		"amws::path_update_interrupt",
		"amws::gib",
		"amws::drone_callback_damage",
		"spider::no_switch_on",
		"spider::spider_initialize",
		"spider::defaultrole",
		"spider::state_death_update",
		"spider::state_driving_update",
		"spider::getnextmoveposition_ranged",
		"spider::state_range_combat_update",
		"spider::state_range_combat_attack",
		"spider::do_ranged_attack",
		"spider::switch_to_melee",
		"spider::should_switch_to_melee",
		"spider::state_melee_combat_update",
		"spider::state_melee_combat_attack",
		"spider::do_melee_attack",
		"spider::should_switch_to_range",
		"spider::prevent_stuck",
		"spider::spider_get_target_position",
		"spider::path_update_interrupt_melee",
		"spider::nudge_collision",
		"spider::force_get_enemies",
		"spider::spider_callback_damage",
		"quadtank::quadtank_initialize",
		"quadtank::quadtank_update_difficulty",
		"quadtank::defaultrole",
		"quadtank::quadtank_off",
		"quadtank::quadtank_on",
		"quadtank::state_off_enter",
		"quadtank::state_off_exit",
		"quadtank::bootup",
		"quadtank::pain_update",
		"quadtank::state_scripted_update",
		"quadtank::state_driving_update",
		"quadtank::quadtank_exit_vehicle",
		"quadtank::state_combat_update",
		"quadtank::state_combat_exit",
		"quadtank::quadtank_death",
		"quadtank::quadtank_emped",
		"quadtank::trophy_disabled",
		"quadtank::trophy_destroyed",
		"quadtank::quadtank_disabletrophy",
		"quadtank::quadtank_enabletrophy",
		"quadtank::quadtank_side_turrets_forward",
		"quadtank::quadtank_turret_scan",
		"quadtank::set_side_turrets_enabled",
		"quadtank::show_weak_spots",
		"quadtank::set_detonation_time",
		"quadtank::quadtank_weapon_think_cannon",
		"quadtank::attack_thread_rocket",
		"quadtank::trigger_player_shock_fx",
		"quadtank::path_update_interrupt",
		"quadtank::movement_thread_wander",
		"quadtank::quadtank_movementupdate",
		"quadtank::quadtank_player_fireupdate",
		"quadtank::do_melee",
		"quadtank::quadtank_automelee_update",
		"quadtank::quadtank_destroyturret",
		"quadtank::quadtankcallback_vehicledamage",
		"quadtank::quadtank_set_team",
		"quadtank::remove_repulsor",
		"quadtank::repulsor_fx",
		"quadtank::quadtank_projectile_watcher",
		"quadtank::turn_off_laser_after",
		"quadtank::side_turret_is_target_in_view_score",
		"quadtank::_get_best_target_quadtank_side_turret",
		"quadtank::quadtank_weakpoint_trigger",
		"quadtank::quadtank_weakpoint_display",
		"quadtank::footstep_handler",
		"quadtank::javeline_incoming",
		"quadtank::railgun_sound",
		"siegebot::siegebot_initialize",
		"siegebot::siegebot_update_difficulty",
		"siegebot::defaultrole",
		"siegebot::state_death_update",
		"siegebot::siegebot_driving",
		"siegebot::siegebot_kill_on_tilting",
		"siegebot::siegebot_player_fireupdate",
		"siegebot::siegebot_player_aimupdate",
		"siegebot::emped_enter",
		"siegebot::emped_update",
		"siegebot::emped_exit",
		"siegebot::emped_reenter",
		"siegebot::pain_toggle",
		"siegebot::pain_update",
		"siegebot::state_unaware_update",
		"siegebot::movement_thread_unaware",
		"siegebot::getnextmoveposition_unaware",
		"siegebot::clean_up_spawned",
		"siegebot::clean_up_spawnedondeath",
		"siegebot::initjumpstruct",
		"siegebot::state_jump_can_enter",
		"siegebot::state_jump_enter",
		"siegebot::state_jump_update",
		"siegebot::state_jump_exit",
		"siegebot::state_combat_update",
		"siegebot::state_combat_exit",
		"siegebot::locomotion_start",
		"siegebot::getnextmoveposition_tactical",
		"siegebot::path_update_interrupt",
		"siegebot::weapon_doors_state",
		"siegebot::movement_thread",
		"siegebot::stopmovementandsetbrake",
		"siegebot::face_target",
		"siegebot::scan",
		"siegebot::attack_thread_machinegun",
		"siegebot::attack_rocket",
		"siegebot::attack_thread_rocket",
		"siegebot::siegebot_callback_damage",
		"hud_message::on_player_connect",
		"hud_message::on_player_disconnect",
		"hud_message::initCustomGametypeHeader",
		"hud_message::hintMessage",
		"hud_message::hintMessagePlayers",
		"hud_message::showInitialFactionPopup",
		"hud_message::initNotifyMessage",
		"hud_message::oldNotifyMessage",
		"hud_message::notifyMessage",
		"hud_message::playNotifyLoop",
		"hud_message::showNotifyMessage",
		"hud_message::waitRequireVisibility",
		"hud_message::canReadText",
		"hud_message::resetOnDeath",
		"hud_message::resetOnCancel",
		"hud_message::resetNotify",
		"hud_message::hintMessageDeathThink",
		"hud_message::lowerMessageThink",
		"hud_message::setMatchScoreHUDElemForTeam",
		"hud_message::isInTop",
		"hud_message::destroyHudElem",
		"hud_message::setShoutcasterWaitingMessage",
		"hud_message::clearShoutcasterWaitingMessage",
		"hud_message::waitTillNotifiesDone",
		"cteamgather::__constructor",
		"cteamgather::__destructor",
		"cteamgather::cleanup",
		"cteamgather::create_teamgather_event",
		"cteamgather::teamgather_success",
		"cteamgather::teamgather_failure",
		"cteamgather::setup_gameobject",
		"cteamgather::onusegameobject",
		"cteamgather::spawn_floor_effect",
		"cteamgather::cleanup_floor_effect",
		"cteamgather::interact_entity_highlight",
		"cteamgather::gather_players",
		"cteamgather::create_player_huds",
		"cteamgather::is_teamgather_complete",
		"cteamgather::set_teamgather_complete",
		"cteamgather::teamgather_main_update",
		"cteamgather::players_in_position",
		"cteamgather::update_players_in_radius",
		"cteamgather::is_player_in_gather_position",
		"cteamgather::player_lowready_state",
		"cteamgather::team_member_zoom_button_check",
		"cteamgather::teleport_player_into_position",
		"cteamgather::display_hud_player_leader",
		"cteamgather::display_hud_player_team_member",
		"vehicle_death::main",
		"vehicle_death::do_scripted_crash",
		"vehicle_death::play_death_audio",
		"vehicle_death::play_spinning_plane_sound",
		"vehicle_death::set_death_model",
		"vehicle_death::aircraft_crash",
		"vehicle_death::helicopter_crash",
		"vehicle_death::helicopter_crash_movement",
		"vehicle_death::helicopter_crash_accel",
		"vehicle_death::helicopter_crash_rotation",
		"vehicle_death::helicopter_crash_zone_accel",
		"vehicle_death::helicopter_collision",
		"vehicle_death::play_crashing_loop",
		"vehicle_death::helicopter_explode",
		"vehicle_death::aircraft_crash_move",
		"vehicle_death::delay_set_gravity",
		"vehicle_death::helicopter_crash_move",
		"vehicle_death::boat_crash",
		"vehicle_death::boat_crash_movement",
		"vehicle_death::boat_crash_monitor",
		"vehicle_death::crash_stop",
		"vehicle_death::crash_collision_test",
		"vehicle_death::crash_path_check",
		"vehicle_death::death_firesound",
		"vehicle_death::death_fx",
		"vehicle_death::death_make_badplace",
		"vehicle_death::death_jolt",
		"vehicle_death::deathrollon",
		"vehicle_death::deathrolloff",
		"vehicle_death::loop_fx_on_vehicle_tag",
		"vehicle_death::deathfx_ent",
		"vehicle_death::death_cleanup_level_variables",
		"vehicle_death::death_cleanup_riders",
		"vehicle_death::death_radius_damage",
		"vehicle_death::death_update_crash",
		"vehicle_death::waittill_crash_done_or_stopped",
		"vehicle_death::vehicle_damage_filter_damage_watcher",
		"vehicle_death::vehicle_damage_filter_exit_watcher",
		"vehicle_death::vehicle_damage_filter",
		"vehicle_death::flipping_shooting_death",
		"vehicle_death::plane_crash",
		"vehicle_death::barrel_rolling_crash",
		"vehicle_death::random_crash",
		"vehicle_death::set_movement_and_accel",
		"vehicle_death::flipping_shooting_crash_movement",
		"vehicle_death::flipping_shooting_dmg_snd",
		"vehicle_death::flipping_shooting_crash_accel",
		"vehicle_death::death_fire_loop_audio",
		"vehicle_death::freewhensafe",
		"vehicle_death::deletewhensafe",
		"vehicle_death::delayedremove_thread",
		"vehicle_death::cleanup",
		"aat::get_nonalternate_weapon",
		"aat::aat_response",
		"aat::register_immunity",
		"aat::register_aat_exemption",
		"aat::is_exempt_weapon",
		"aat::register_reroll",
		"aat::getaatonweapon",
		"aat::acquire",
		"aat::remove",
		"aat::watch_weapon_changes",
		"trigger::check_spawnflags",
		"trigger::trigger_unlock",
		"trigger::trigger_unlock_death",
		"trigger::wait_for_an_unlocked_trigger",
		"trigger::report_trigger",
		"trigger::get_trigger_look_target",
		"trigger::trigger_look",
		"trigger::trigger_spawner",
		"trigger::trigger_spawner_spawn",
		"trigger::trigger_notify",
		"trigger::flag_set_trigger",
		"trigger::flag_clear_trigger",
		"trigger::add_tokens_to_trigger_flags",
		"trigger::script_flag_false_trigger",
		"trigger::script_flag_true_trigger",
		"trigger::friendly_respawn_trigger",
		"trigger::friendly_respawn_clear",
		"trigger::trigger_turns_off",
		"trigger::script_flag_set_touching",
		"trigger::_detect_touched",
		"trigger::trigger_delete_on_touch",
		"trigger::flag_set_touching",
		"trigger::trigger_once",
		"trigger::trigger_hint",
		"trigger::trigger_exploder",
		"trigger::display_hint",
		"trigger::_hint_print",
		"trigger::_hint_print_wait",
		"trigger::get_all",
		"trigger::_is_valid_trigger_type",
		"trigger::wait_till",
		"trigger::_trigger_wait",
		"trigger::_trigger_wait_think",
		"trigger::use",
		"trigger::set_flag_permissions",
		"trigger::update_based_on_flags",
		"trigger::init_flags",
		"trigger::is_look_trigger",
		"trigger::is_trigger_once",
		"trigger::wait_for_either",
		"trigger::_ent_waits_for_trigger",
		"trigger::wait_or_timeout",
		"trigger::trigger_on_timeout",
		"trigger::multiple_waits",
		"trigger::multiple_wait",
		"trigger::add_function",
		"trigger::_do_trigger_function",
		"trigger::kill_spawner_trigger",
		"trigger::get_script_linkto_targets",
		"trigger::delete_link_chain",
		"trigger::delete_links_then_self",
		"trigger::no_crouch_or_prone_think",
		"trigger::no_prone_think",
		"trigger::trigger_group",
		"trigger::trigger_group_remove",
		"serverfaceanim::init_serverfaceanim",
		"serverfaceanim::wait_for_face_event",
		"challenges::init_shared",
		"challenges::pickedUpBallisticKnife",
		"challenges::trackAssists",
		"challenges::destroyedEquipment",
		"challenges::destroyedTacticalInsert",
		"challenges::addFlySwatterStat",
		"challenges::destroyNonAirScorestreak_PostStatsLock",
		"challenges::canProcessChallenges",
		"challenges::initTeamChallenges",
		"challenges::registerChallengesCallback",
		"challenges::doChallengeCallback",
		"challenges::on_player_connect",
		"challenges::monitorReloads",
		"challenges::reloadThenKill",
		"challenges::reloadThenKillTimeout",
		"challenges::initChallengeData",
		"challenges::isDamageFromPlayerControlledAITank",
		"challenges::isDamageFromPlayerControlledSentry",
		"challenges::perkKills",
		"challenges::flakjacketProtected",
		"challenges::earnedKillstreak",
		"challenges::genericBulletKill",
		"challenges::isHighestScoringPlayer",
		"challenges::spawnWatcher",
		"challenges::watchForDTP",
		"challenges::watchForMantle",
		"challenges::disarmedHackedCarepackage",
		"challenges::destroyed_car",
		"challenges::killedNemesis",
		"challenges::killWhileDamagingWithHPM",
		"challenges::longDistanceHatchetKill",
		"challenges::blockedSatellite",
		"challenges::longDistanceKill",
		"challenges::challengeRoundEnd",
		"challenges::roundEnd",
		"challenges::gameRnd",
		"challenges::getFinalKill",
		"challenges::destroyRCBomb",
		"challenges::capturedCrate",
		"challenges::destroyScorestreak",
		"challenges::watchForRapidDestroy",
		"challenges::capturedObjective",
		"challenges::hackedOrDestroyedEquipment",
		"challenges::bladeKill",
		"challenges::destroyedExplosive",
		"challenges::assisted",
		"challenges::earnedMicrowaveAssistScore",
		"challenges::earnedCUAVAssistScore",
		"challenges::earnedUAVAssistScore",
		"challenges::earnedSatelliteAssistScore",
		"challenges::earnedEMPAssistScore",
		"challenges::teamCompletedChallenge",
		"challenges::endedEarly",
		"challenges::getLosersTeamAcores",
		"challenges::didLoserFailChallenge",
		"challenges::challengeGameEnd",
		"challenges::multiKill",
		"challenges::domAttackerMultiKill",
		"challenges::totalDomination",
		"challenges::holdFlagEntireMatch",
		"challenges::capturedBFirstMinute",
		"challenges::controlZoneEntirely",
		"challenges::multi_lmg_smg_kill",
		"challenges::killedZoneAttacker",
		"challenges::killedDog",
		"challenges::updateZoneMultiKills",
		"challenges::multi_rcbomb_kill",
		"challenges::multi_remotemissile_kill",
		"challenges::multi_mgl_kill",
		"challenges::immediateCapture",
		"challenges::killedLastContester",
		"challenges::bothBombsDetonateWithinTime",
		"challenges::calledInCarePackage",
		"challenges::destroyedHelicopter",
		"challenges::destroyedQRDrone",
		"challenges::destroyedPlayerControlledAircraft",
		"challenges::destroyedAircraft",
		"challenges::killstreakTen",
		"challenges::scavengedGrenade",
		"challenges::stunnedTankWithEMPGrenade",
		"challenges::playerKilled",
		"challenges::doScoreEventCallback",
		"challenges::waitAndProcessPlayerKilledCallback",
		"challenges::weaponIsKnife",
		"challenges::eventReceived",
		"challenges::monitor_player_sprint",
		"challenges::isFlashbanged",
		"challenges::isHeatWaveStunned",
		"challenges::trophy_defense",
		"challenges::waitTillTimeoutOrDeath",
		"ai::set_ignoreme",
		"ai::set_ignoreall",
		"ai::set_pacifist",
		"ai::disable_pain",
		"ai::enable_pain",
		"ai::gun_remove",
		"ai::gun_switchto",
		"ai::gun_recall",
		"ai::set_behavior_attribute",
		"ai::get_behavior_attribute",
		"ai::has_behavior_attribute",
		"ai::is_dead_sentient",
		"ai::waittill_dead",
		"ai::shoot_at_target",
		"ai::painwaitinterval",
		"ai::patrol",
		"ai::patrol_next_node",
		"ai::end_patrol_on_enemy_targetting",
		"ai::end_and_clean_patrol_behaviors",
		"ai::bloody_death",
		"ammo::dropaiammo",
		"ammo::ammo_pouch_think",
		"weapons::is_primary_weapon",
		"weapons::is_side_arm",
		"weapons::is_inventory",
		"weapons::is_grenade",
		"weapons::force_stowed_weapon_update",
		"weapons::detach_carry_object_model",
		"weapons::detach_all_weapons",
		"weapons::stow_on_back",
		"weapons::stow_on_hip",
		"weapons::weapondamagetracepassed",
		"weapons::weapondamagetrace",
		"weapons::has_lmg",
		"weapons::has_launcher",
		"weapons::has_hero_weapon",
		"weapons::has_lockon",
		"animation::first_frame",
		"animation::last_frame",
		"animation::play",
		"animation::stop",
		"animation::debug_print",
		"animation::_play",
		"animation::_blend_out",
		"animation::teleport",
		"animation::reach",
		"animation::_reach",
		"animation::debug_anim_reach",
		"animation::set_death_anim",
		"animation::_do_death_anim",
		"animation::set_player_clamps",
		"animation::enable_headlook",
		"animation::enable_headlook_notorso",
		"animation::is_valid_weapon",
		"animation::attach_weapon",
		"animation::detach_weapon",
		"animation::fire_weapon",
		"damagefeedback::init",
		"damagefeedback::update",
		"damagefeedback::damage_feedback_get_stage",
		"damagefeedback::damage_feedback_get_dead",
		"damagefeedback::damage_feedback_growth",
		"damagefeedback::kill_hitmarker_fade",
		"damagefeedback::update_override",
		"damagefeedback::update_special",
		"damagefeedback::send_hit_special_event_at_frame_end",
		"damagefeedback::dodamagefeedback",
		"damagefeedback::istacticalhitmarker",
		"callback::on_connect",
		"callback::remove_on_connect",
		"callback::on_connecting",
		"callback::remove_on_connecting",
		"callback::on_disconnect",
		"callback::remove_on_disconnect",
		"callback::on_loadout",
		"callback::remove_on_loadout",
		"callback::on_player_damage",
		"callback::remove_on_player_damage",
		"callback::on_joined_team",
		"callback::on_joined_spectate",
		"callback::on_player_killed",
		"callback::remove_on_player_killed",
		"callback::on_ai_killed",
		"callback::remove_on_ai_killed",
		"callback::on_actor_killed",
		"callback::remove_on_actor_killed",
		"callback::on_vehicle_spawned",
		"callback::remove_on_vehicle_spawned",
		"callback::on_vehicle_killed",
		"callback::remove_on_vehicle_killed",
		"callback::on_ai_damage",
		"callback::remove_on_ai_damage",
		"callback::on_ai_spawned",
		"callback::remove_on_ai_spawned",
		"callback::on_actor_damage",
		"callback::remove_on_actor_damage",
		"callback::on_vehicle_damage",
		"callback::remove_on_vehicle_damage",
		"callback::on_laststand",
		"callback::on_challenge_complete",
		"callback::add_weapon_damage",
		"callback::callback_weapon_damage",
		"callback::add_weapon_watcher",
		"callback::callback_weapon_watcher",
		"callback::finishcustomtraversallistener",
		"callback::killedcustomtraversallistener",
		"callback::menu_response_queue_pump",
		"callback::abort_level",
		"callback::callback_void",
		"visionset_mgr::activate",
		"visionset_mgr::deactivate",
		"visionset_mgr::set_state_active",
		"visionset_mgr::set_state_inactive",
		"visionset_mgr::timeout_lerp_thread",
		"visionset_mgr::timeout_lerp_thread_per_player",
		"visionset_mgr::duration_lerp_thread",
		"visionset_mgr::duration_lerp_thread_per_player",
		"visionset_mgr::ramp_in_thread_per_player",
		"visionset_mgr::ramp_in_out_thread_hold_func",
		"visionset_mgr::ramp_in_out_thread",
		"visionset_mgr::ramp_in_out_thread_watch_player_shutdown",
		"visionset_mgr::ramp_in_out_thread_per_player_death_shutdown",
		"visionset_mgr::ramp_in_out_thread_per_player",
		"visionset_mgr::add_sorted_priority_key",
		"visionset_mgr::on_player_connect",
		"visionset_mgr::player_setup",
		"visionset_mgr::player_shutdown",
		"visionset_mgr::get_first_active_name",
		"visionset_mgr::update_clientfields",
		"visionset_mgr::lerp_thread_wrapper",
		"visionset_mgr::lerp_thread_per_player_wrapper",
		"visionset_mgr::activate_per_player",
		"visionset_mgr::deactivate_per_player",
		"visionset_mgr::calc_ramp_in_lerp",
		"visionset_mgr::calc_remaining_duration_lerp",
		"dev::debug_sphere",
		"dev::updateminimapsetting",
		"dev::vecscale",
		"dev::drawminimapbounds",
		"dev::minimapwarn",
		"dev::body_customization_setup_helmet",
		"dev::body_customization_setup_body",
		"dev::body_customization_process_command",
		"dev::body_customization_populate",
		"dev::body_customization_devgui",
		"dev::add_perk_devgui",
		"containers::init",
		"containers::setup_container_scriptbundle",
		"containers::container_update",
		"containers::create_locker_trigger",
		"containers::setup_general_container_bundle",
		"containers::setup_locker_double_doors",
		"containers::get_closest_ent_from_array",
		"containers::create_locker_doors",
		"flag::set_val",
		"flag::get_any",
		"flag::script_flag_wait",
		"killstreaks::is_killstreak_weapon",
		"killstreaks::is_weapon_associated_with_killstreak",
		"killstreaks::switch_to_last_non_killstreak_weapon",
		"killstreaks::get_killstreak_weapon",
		"killstreaks::isHeldInventoryKillstreakWeapon",
		"killstreaks::WaitForTimeCheck",
		"killstreaks::emp_isempd",
		"killstreaks::WaitTillEMP",
		"killstreaks::HasUAV",
		"killstreaks::HasSatellite",
		"killstreaks::DestroyOtherTeamsEquipment",
		"killstreaks::DestroyEquipment",
		"killstreaks::DestroyTacticalInsertions",
		"killstreaks::DestroyOtherTeamsActiveVehicles",
		"killstreaks::DestroyNeutralGameplayVehicles",
		"killstreaks::DestroyActiveVehicles",
		"killstreaks::DestroyEntities"
	]
}
