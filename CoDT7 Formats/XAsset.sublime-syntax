%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html

# This file is part of the T7-Sublime project.
# T7-Sublime is an enhanced syntax-highlighting package for (almost) all Call of Duty Black Ops III developer file formats.
# Export files contain data which describe entities in 3D space.

name: XAsset
file_extensions:
  - xmodel_export
  - xanim_export
  - nt_export
scope: source.export

variables:
  checksum_tokens: 'NUMBONES|NUMPARTS|NUMFRAMES|NUMKEYS|NUMVERTS32|NUMVERTS|NUMFACES|NUMOBJECTS|NUMMATERIALS'
  global_params: 'FRAMERATE|FIRSTFRAME|NOTETRACKS'

contexts:
  prototype:
    - match: '-'
      scope: punctuation.operator.negation.export
    - include: numbers
    - include: strings
    - include: global-param
    - include: block-end

  main:
    - meta_include_prototype: false
    - include: global

  comments:
    - include: scope:source.t7formats#comments

  numbers:
    - include: scope:source.t7formats#numbers

  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.export
      push:
        - meta_scope: string.quoted.double.export
        - match: '"'
          scope: punctuation.definition.string.end.export
          pop: true

  directive:
    - match: ^\s*(?:(MODEL)|(ANIMATION))\b
      captures:
        1: keyword.directive.model.export
        2: keyword.directive.animation.export
    - match: ^\s*(VERSION)\s+(\d*)
      captures:
        1: keyword.directive.version.export
        2: constant.numeric.export-version.export

  global:
    - include: comments
    - include: numbers
    - include: directive
    - include: global-param
    - match: (?=\S)
      push: block

  global-param:
    - match: '\b({{global_params}})\b'
      scope: variable.language.export

  block-end:
    - match: '(?=\b{{checksum_tokens}}\b)'
      pop: true

  block:
    - meta_include_prototype: false
    # XMDDEL
    - match: \bNUMBONES\b
      scope: variable.language.export
      set: bone-block
    - match: \b(NUMVERTS32|NUMVERTS)\b
      scope: variable.language.export
      set: vert-block
    - match: \bNUMFACES\b
      scope: variable.language.export
      set: tri-block
    - match: \bNUMOBJECTS\b
      scope: variable.language.export
      set: object-block
    - match: \bNUMMATERIALS\b
      scope: variable.language.export
      set: material-block
    # XANIM
    - match: \bNUMPARTS\b
      scope: variable.language.export
      set: part-block
    - match: \bNUMFRAMES\b
      scope: variable.language.export
      set: frame-block
    - match: \bNUMKEYS\b
      scope: variable.language.export
      set: key-block

###########[ XMODEL ]########################################################################################

  bone-block:
    - match: \bNUMCOSMETICS\b
      scope: variable.language.export
    - match: \bBONE\b
      scope: storage.type.export
    - match: \b(OFFSET|SCALE|X|Y|Z)\b
      scope: variable.parameter.export

  vert-block:
    - match: \b(VERT32|VERT)\b
      scope: storage.type.export
    - match: \b(OFFSET|BONES|BONE)\b
      scope: variable.parameter.export

  tri-block:
    - match: \b(TRI)\b
      scope: storage.type.export
    - match: \b(VERT32|VERT|NORMAL|COLOR|UV)\b
      scope: variable.parameter.export

  object-block:
    - match: \b(OBJECT)\b
      scope: storage.type.export

  material-block:
    - match: \b(MATERIAL)\b
      scope: storage.type.export
    - match: \b(COLOR|TRANSPARENCY|AMBIENTCOLOR|INCANDESCENCE|COEFFS|GLOW|REFRACTIVE|SPECULARCOLOR|REFLECTIVECOLOR|REFLECTIVE|BLINN|PHONG)\b
      scope: variable.parameter.export

###########[ XANIM ]#########################################################################################

  part-block:
    - match: \b(PART)\b
      scope: storage.type.export

  frame-block:
    - match: \b(FRAME)\b
      scope: storage.type.export
    - match: \b(PART|OFFSET|SCALE|X|Y|Z)\b
      scope: variable.parameter.export

###########[ NT ]############################################################################################

  key-block:
    - match: \b(KEY)\b
      scope: storage.type.export
    - match: \b(FRAME)\b
      scope: variable.parameter.export
