[
    // Hot key for creating dev blocks around selections since they require 2 separate key inputs to create manually
    { "keys": ["ctrl+d"], "command": "insert_snippet", "args": {"contents": "/#$0#/"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.gsc" }
        ]
    },
    { "keys": ["ctrl+d"], "command": "insert_snippet", "args": {"contents": "/#${0:$SELECTION}#/"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.gsc" }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/CoDT7 Formats/Delete Left Right X2.sublime-macro"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "/#$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^#/", "match_all": true },
            { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.other - punctuation.definition.string.end", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.gsc" }
        ]
    },
    // auto-pair devblock markers
    { "keys": ["#"], "command": "insert_snippet", "args": {"contents": "#$0#/"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "/$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.gsc" }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/CoDT7 Formats/Delete Left Right X2.sublime-macro"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "/#$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^#/", "match_all": true },
            { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.other - punctuation.definition.string.end", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.gsc" }
        ]
    },
    // devblock indentation 
    // global devblocks shouldn't indent, so we use a different macro that just inserts newlines,
    // and use the indentation macro for devblocks in functions/methods
    { "keys": ["enter"], "command": "run_macro_file", "args": {"file": "res://Packages/CoDT7 Formats/Add Line in Global Devblock.sublime-macro"}, "context":
        [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "/#$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^#/", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.gsc - (meta.block)" }
        ]
    },
    { "keys": ["shift+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/CoDT7 Formats/Add Line in Global Devblock.sublime-macro"}, "context":
        [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "/#$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^#/", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.gsc - (meta.block)" }
        ]
    },
    { "keys": ["enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
        [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "/#$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^#/", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.gsc & (meta.block)" }
        ]
    },
    { "keys": ["shift+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
        [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "/#$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^#/", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.gsc & (meta.block)" }
        ]
    }
]
